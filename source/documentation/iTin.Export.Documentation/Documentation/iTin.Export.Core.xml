<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>iTin.Export.Core</name>
  </assembly>
  <members>
    <member name="T:iTin.Export.BuiltInFunctions">
      <summary>
            Specifies a set of built-in functions availables for static resources.
            </summary>
    </member>
    <member name="P:iTin.Export.BuiltInFunctions.AlternateColorSample">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.BuiltInFunctions.AlternateColorSample</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.BuiltInFunctions.CurrentDatetime">
      <summary>
            Gets the get current date time.
            </summary>
    </member>
    <member name="P:iTin.Export.BuiltInFunctions.CurrentTableName">
      <summary>
            Gets total defined-styles.
            </summary>
    </member>
    <member name="P:iTin.Export.BuiltInFunctions.CurrentTimeSpan">
      <summary>
            Gets the get timespan.
            </summary>
    </member>
    <member name="P:iTin.Export.BuiltInFunctions.MachineName">
      <summary>
            Gets the get current machine name
            </summary>
    </member>
    <member name="P:iTin.Export.BuiltInFunctions.TotalFields">
      <summary>
            Gets total fields for current model.
            </summary>
    </member>
    <member name="P:iTin.Export.BuiltInFunctions.TotalStyles">
      <summary>
            Gets total defined-styles
            </summary>
    </member>
    <member name="P:iTin.Export.BuiltInFunctions.UserName">
      <summary>
            Gets the get current user name
            </summary>
    </member>
    <member name="T:iTin.Export.ExportSettings">
      <summary>
            Specifies a set of features supported on the object <see cref="T:iTin.Export.ExportSettings" />.
            </summary>
    </member>
    <member name="M:iTin.Export.ExportSettings.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ExportSettings</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ExportSettings.CreateFromModels(iTin.Export.Model.ExportsModel)">
      <summary>
            Returns a export settings object reference from a data model.
            </summary>
      <param name="model">The data model.</param>
      <returns>
            A <see cref="T:iTin.Export.ExportSettings" /> object that represents export settings.
            </returns>
    </member>
    <member name="M:iTin.Export.ExportSettings.CreateFromModels(iTin.Export.Model.ExportsModel,System.String)">
      <summary>
            Returns a reference which contains specified export data model from the specified data model.
            </summary>
      <param name="model">The model.</param>
      <param name="from">Name of the data model to use.</param>
      <returns>
            A <see cref="T:iTin.Export.ExportSettings" /> object that represents export settings.
            </returns>
      <exception cref="T:System.IO.FileNotFoundException">File exception</exception>
    </member>
    <member name="P:iTin.Export.ExportSettings.From">
      <summary>
            Gets or sets a value indicating name of the data model to use.
            </summary>
    </member>
    <member name="M:iTin.Export.ExportSettings.ImportFrom(System.Uri)">
      <summary>
            Returns a export settings object reference from a configuration file.
            </summary>
      <param name="configuration">Configuration file path.</param>
      <returns>
            A <see cref="T:iTin.Export.ExportSettings" /> object that represents export settings.
            </returns>
      <exception cref="T:System.IO.FileNotFoundException">File exception</exception>
    </member>
    <member name="M:iTin.Export.ExportSettings.ImportFrom(System.Uri,System.String)">
      <summary>
            Returns a reference which contains specified export data model from the specified configuration file
            </summary>
      <param name="configuration">Configuration file path.</param>
      <param name="from">Name of the data model to use.</param>
      <returns>
            A <see cref="T:iTin.Export.ExportSettings" /> object that represents export settings.
            </returns>
      <exception cref="T:System.IO.FileNotFoundException">File exception</exception>
    </member>
    <member name="P:iTin.Export.ExportSettings.IsEmpty">
      <summary>
            Gets a value indicating whether this object is empty.
            </summary>
    </member>
    <member name="P:iTin.Export.ExportSettings.OutputFile">
      <summary>
            Gets or sets a value that represents the path of the output file.
            </summary>
    </member>
    <member name="P:iTin.Export.ExportSettings.TransformFile">
      <summary>
            Gets or sets a value that represents the path of the transform file.
            </summary>
    </member>
    <member name="M:iTin.Export.ExportSettings.TryGetConfigurationFile(iTin.Export.ExportSettings,System.Uri@)">
      <summary>
            Try to get the configuration file from a <see cref="T:iTin.Export.ExportSettings" /> reference. Returns a value indicating if it was possible to obtain the configuration file.
            </summary>
      <param name="settings">Export settings reference.</param>
      <param name="configuration">Configuration file.</param>
      <returns>
        <strong>true</strong> if it was possible to obtain the configuration file; otherwise <strong>false</strong>.
            </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.EnumDescriptionAttribute">
      <summary>
            Especifica una descripción para un elemento de tipo enumerado.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.EnumDescriptionAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.EnumDescriptionAttribute" /> class. 
            </summary>
      <param name="description">Description text.</param>
    </member>
    <member name="T:iTin.Export.ComponentModel.ExcelFormulaResolver">
      <summary>
            Contains resolver for xlsx formulas.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ExcelFormulaResolver.#ctor(iTin.Export.Model.FieldAggregateModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.ExcelFormulaResolver" /> class.
            </summary>
      <param name="aggregate">Aggregate's data.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.ExcelFormulaResolver.EndRow">
      <summary>
            Gets or sets a value that represents the end row of the range.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ExcelFormulaResolver.HasAutoFilter">
      <summary>
            Gets or sets a value indicating whether the auto filter is enabled.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ExcelFormulaResolver.Resolve">
      <summary>
            Returns string containing aggregate's formula.
            </summary>
      <returns>
            A <see cref="T:System.String" /> containing the formula.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.ExcelFormulaResolver.StartRow">
      <summary>
            Gets or sets a value that represents the start row of the range.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.FieldValueInformation">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.FieldValueInformation</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.FieldValueInformation.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.FieldValueInformation</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.Comment">
      <summary>
            Gets or sets the comment.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.Default">
      <summary>
            Gets the default.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.FormattedValue">
      <summary>
            Gets or sets the data.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.IsErrorValue">
      <summary>
            Gets or sets a value indicating whether [is error value].
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.IsNegative">
      <summary>
            Gets or sets the data.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.IsNumeric">
      <summary>
            Gets or sets the data.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.NegativeColor">
      <summary>
            Gets or sets the data.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.Style">
      <summary>
            Gets or sets 
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.FieldValueInformation.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.FieldValueInformation.Value">
      <summary>
            Gets or sets the data.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.ISettings">
      <summary>
            Declares a generic target.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ISettings.AdapterMetadata">
      <summary>
            Gets a reference that contains metadata information of this provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ISettings.CanCreateInputXml">
      <summary>
            Gets a value indicating whether you can create an <strong>XML</strong> file from the current instance of the object.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ISettings.CanGetDataTable">
      <summary>
            Gets a value indicating whether this instance can get data table.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ISettings.CreateInputXml">
      <summary>
            Creates the XML source file from.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ISettings.Export(iTin.Export.ExportSettings)">
      <summary>
            Export this target by applying the specified configuration.
            </summary>
      <param name="settings">Export settings</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.ISettings.InputUri">
      <summary>
            Gets the input Uri.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ISettings.Model">
      <summary>
            Gets a reference to the data model.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ISettings.Parse(System.String)">
      <summary>
            Parse special chars of argument.
            </summary>
      <param name="value">
        <see cref="T:System.String" /> for parse.</param>
      <returns>
            Parsed string.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.ISettings.Resources">
      <summary>
            Gets a reference to the resources model.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ISettings.SetModel(iTin.Export.Model.ExportModel)">
      <summary>
            Add a data model to this target.
            </summary>
      <param name="model">Data model.</param>
    </member>
    <member name="M:iTin.Export.ComponentModel.ISettings.SetSpecialChars(System.Collections.Generic.IEnumerable{System.Char})">
      <summary>
            Sets an special char array to this target.
            </summary>
      <param name="value">Special chars array.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.ISettings.SpecialChars">
      <summary>
            Gets an special char array.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ISettings.ToDataTable">
      <summary>
            Gets a reference to the <see cref="T:System.Data.DataTable" /> object than contains the data this instance.
            </summary>
      <returns>
            Reference to the <see cref="T:System.Data.DataTable" /> object.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.ISettings.ToXml">
      <summary>
            Gets a reference to the <see cref="T:System.Collections.Generic.IEnumerable`1" /> object than contains the data this instance.
            </summary>
      <returns>
            Reference to the <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.
            </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.ModelService">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.ModelService</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ModelService.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.ModelService</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.CurrentCol">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.CurrentCol</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.CurrentField">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.CurrentField</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.CurrentModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.CurrentModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.CurrentRow">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.CurrentRow</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.Instance">
      <summary>
            Returns a unique instance of the class
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.Provider">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.Provider</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.RawData">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.RawData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.RawDataFiltered">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.RawDataFiltered</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.References">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.References</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.Resources">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.Resources</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.ModelService.Root">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.ModelService.Root</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.ModelService.SetCurrentCol(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.SetCurrentCol(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="col">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.SetCurrentCol(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.ModelService.SetCurrentField(iTin.Export.Model.BaseDataFieldModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.SetCurrentField(iTin.Export.Model.BaseDataFieldModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="field">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>field</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.SetCurrentField(iTin.Export.Model.BaseDataFieldModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.ModelService.SetCurrentRow(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.SetCurrentRow(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="row">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>row</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.SetCurrentRow(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.ModelService.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.ModelService.TryGetUnderlyingDataAsDataTable(System.Data.DataTable@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.TryGetUnderlyingDataAsDataTable(System.Data.DataTable@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.TryGetUnderlyingDataAsDataTable(System.Data.DataTable@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.TryGetUnderlyingDataAsDataTable(System.Data.DataTable@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.ModelService.TryGetUnderlyingDataAsXml(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.TryGetUnderlyingDataAsXml(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="data">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.TryGetUnderlyingDataAsXml(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.ModelService.TryGetUnderlyingDataAsXml(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.NonTabularFormulaResolver">
      <summary>
            Contains resolver for non-tabular writers.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.NonTabularFormulaResolver.#ctor(iTin.Export.Model.FieldAggregateModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.NonTabularFormulaResolver" /> class.
            </summary>
      <param name="aggregate">Aggregate's data.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.NonTabularFormulaResolver.Data">
      <summary>
            Gets or sets a value that represents data values.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.NonTabularFormulaResolver.Resolve">
      <summary>
            Returns a string containing the result.
            </summary>
      <returns>
            A <see cref="T:System.String" /> containing the result.
            </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.SafeDirectoryCatalog">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.SafeDirectoryCatalog</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.SafeDirectoryCatalog.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.SafeDirectoryCatalog</parameter>
          </include>
        </markup>
      </summary>
      <param name="directory">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>directory</parameter>
            <parameter>M:iTin.Export.ComponentModel.SafeDirectoryCatalog.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.ComponentModel.SafeDirectoryCatalog.Parts">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.ComponentModel.SafeDirectoryCatalog.Parts</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Input.BaseInput">
      <summary>
            Base class for the different input types.
            Which acts as the base class for the different input types.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.BaseInput.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.Inputs.BaseInput" /> class.
            </summary>
      <param name="data">The data.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.BaseInput.Data">
      <summary>
            Gets a reference that contains the input data to export.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.BaseInput.Export(iTin.Export.ExportSettings)">
      <summary>
            Exports the input data using the specified configuration in xml configuration file.
            </summary>
      <param name="settings">Export settings</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.BaseInput.InputMetadata">
      <summary>
            Gets a reference that contains the metadata information about this input.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Input.IInput">
      <summary>
            Declares a generic input.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.IInput.Data">
      <summary>
            Gets a value indicating whether you can create an <strong>XML</strong> file from the current instance of the object.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.IInput.Export(iTin.Export.ExportSettings)">
      <summary>
            Export to xml 
            </summary>
      <param name="settings">Export Settings</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.IInput.InputMetadata">
      <summary>
            Gets a reference that contains metadata information of this input.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Input.InputDataModel">
      <summary>
            Target data model
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputDataModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Input.InputDataModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputDataModel.GetRoot">
      <summary>
            Gets the root.
            </summary>
      <returns>
            Root node
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.InputDataModel.Model">
      <summary>
            Gets or sets the data.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.InputDataModel.References">
      <summary>
            Gets or sets the references.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.InputDataModel.Resources">
      <summary>
            Gets or sets the data.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Input.InputOptionsAttribute">
      <summary>
            Declares input attribute.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputOptionsAttribute.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Input.InputOptionsAttribute</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.InputOptionsAttribute.AdapterType">
      <summary>
            Gets or sets a value that represents the adapter type
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Input.InputOptionsMetadata">
      <summary>
            Defines a value that contains the metadata information of a <see cref="T:iTin.Export.ComponentModel.BaseInput" />.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputOptionsMetadata.#ctor(iTin.Export.ComponentModel.Input.BaseInput)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.Inputs.InputOptionsMetadata" /> struct.
            </summary>
      <param name="input">The input.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Input.InputOptionsMetadata.AdapterType">
      <summary>
            Gets a value that contains which adapter will be used to export this input.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputOptionsMetadata.Equals(iTin.Export.ComponentModel.Input.InputOptionsMetadata)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">The object to compare with this object.</param>
      <returns>
            Returns <stromg>true</stromg> if the current object is equal to the parameter <paramref name="other" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputOptionsMetadata.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <strong>true</strong> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputOptionsMetadata.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputOptionsMetadata.op_Equality(iTin.Export.ComponentModel.Input.InputOptionsMetadata,iTin.Export.ComponentModel.Input.InputOptionsMetadata)">
      <summary>
            Implements the equality operator (==).
            </summary>
      <param name="left">Left member</param>
      <param name="right">Right member</param>
      <returns>
        <strong>true</strong> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputOptionsMetadata.op_Inequality(iTin.Export.ComponentModel.Input.InputOptionsMetadata,iTin.Export.ComponentModel.Input.InputOptionsMetadata)">
      <summary>
            Implements the inequality operator (!=).
            </summary>
      <param name="left">Left member</param>
      <param name="right">Right member</param>
      <returns>
        <strong>true</strong> if <paramref name="left" /> not is equal to <paramref name="right" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Input.InputOptionsMetadata.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Patterns.AndNotSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="left">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <param name="right">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1.IsSatisfiedBy(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="candidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>candidate</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndNotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.AndSpecification`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.AndSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.AndSpecification`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.AndSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Patterns.AndSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="left">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <param name="right">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.AndSpecification`1.IsSatisfiedBy(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="candidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>candidate</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.AndSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Patterns.CompositeSpecification`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.And(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.And(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.And(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.And(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.AndNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.AndNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.AndNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.AndNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.IsSatisfiedBy(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="candidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>candidate</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.Not">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.Not</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.Not</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.Or(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.Or(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.Or(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.Or(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.OrNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.OrNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.OrNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.CompositeSpecification`1.OrNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1.#ctor(System.Func{`0,System.Boolean})">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="expression">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>expression</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1.#ctor(System.Func{`0,System.Boolean})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1.IsSatisfiedBy(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="candidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>candidate</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ExpressionSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.ISpecification`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.ISpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.ISpecification`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.ISpecification`1.And(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.And(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.And(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.And(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.ISpecification`1.AndNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.AndNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.AndNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.AndNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.ISpecification`1.IsSatisfiedBy(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="candidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>candidate</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.ISpecification`1.Not">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.Not</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.Not</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.ISpecification`1.Or(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.Or(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.Or(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.Or(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.ISpecification`1.OrNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.OrNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.OrNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.ISpecification`1.OrNot(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.IStrategy">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.IStrategy</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.IStrategy.Execute">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.IStrategy.Execute</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.NotSpecification`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.NotSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.NotSpecification`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.NotSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Patterns.NotSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.NotSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.NotSpecification`1.IsSatisfiedBy(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.NotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="candidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>candidate</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.NotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.NotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Patterns.OrNotSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="left">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <param name="right">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1.IsSatisfiedBy(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="candidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>candidate</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrNotSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.OrSpecification`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.OrSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.OrSpecification`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.OrSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Patterns.OrSpecification`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="left">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
      <param name="right">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrSpecification`1.#ctor(iTin.Export.ComponentModel.Patterns.ISpecification{`0},iTin.Export.ComponentModel.Patterns.ISpecification{`0})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.OrSpecification`1.IsSatisfiedBy(`0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="candidate">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>candidate</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.OrSpecification`1.IsSatisfiedBy(`0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Patterns.StrategyContext">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.ComponentModel.Patterns.StrategyContext</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.StrategyContext.#ctor(iTin.Export.ComponentModel.Patterns.IStrategy)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Patterns.StrategyContext</parameter>
          </include>
        </markup>
      </summary>
      <param name="strategy">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>strategy</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.StrategyContext.#ctor(iTin.Export.ComponentModel.Patterns.IStrategy)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Patterns.StrategyContext.Execute">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.ComponentModel.Patterns.StrategyContext.Execute</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Provider.BaseProvider">
      <summary>
            Implements interface <see cref="T:iTin.Export.ComponentModel.IProvider" />.
            Which acts as the base class for future providers.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.Provider.BaseProvider" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.BaseProvider.CanCreateInputXml">
      <summary>
            Gets a value indicating whether you can create an <strong>Xml</strong> file from the current instance of the object.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.BaseProvider.CanGetDataTable">
      <summary>
            Gets a value indicating whether this instance can get data table.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.CreateInputXml">
      <summary>
            Creates the <c>Xml</c> source file from.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.BaseProvider.EmptySpecialChars">
      <summary>
            Gets the empty special chars.
            </summary>
      <returns>
            Empty special chars array.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.Export(iTin.Export.ExportSettings)">
      <summary>
            Export specified input data model with this provider by applying the specified writer in configuration file.
            </summary>
      <param name="settings">Export settings</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.BaseProvider.Input">
      <summary>
            Gets a reference to the data model.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.BaseProvider.InputUri">
      <summary>
            Gets a reference to input file.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.LoadXmlFromFile(System.String,System.String)">
      <summary>
            Retrieves <c>Xml</c> content of specified <paramref name="table" /> in a file.
            </summary>
      <param name="fileName">Target filename</param>
      <param name="table">Table to retrieve</param>
      <returns>
            A collection of <see cref="T:System.Xml.Linq.XElement" /> that contains the table content as <strong>XML</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.OnCreateInputXml">
      <summary>
            Concrete implementation by object type.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.OnGetDataTable">
      <summary>
            Concrete implementation by object type.
            </summary>
      <returns>
            The data Table
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.Parse(System.String)">
      <summary>
            Parse an <see cref="T:System.String" /> and replace the special chars defined in <see cref="P:iTin.Export.ComponentModel.BaseTarget.SpecialChars" /> by a hexadecimal pattern.
            </summary>
      <param name="value">
        <see cref="T:System.String" /> to parse</param>
      <returns>
            Parsed <see cref="T:System.String" />.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.Parse(System.String,System.Collections.Generic.IEnumerable{System.Char})">
      <summary>
            Parse an <see cref="T:System.String" /> and replace the special chars defined in <paramref name="specialChars" /> by a hexadecimal pattern.
            </summary>
      <param name="value">
        <see cref="T:System.String" /> to parse</param>
      <param name="specialChars">Special chars to replace</param>
      <returns>
            The parsed string.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.BaseProvider.ProviderMetadata">
      <summary>
            Gets a reference that contains the metadata information about this provider.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.SetInputDataModel(iTin.Export.ComponentModel.Input.InputDataModel)">
      <summary>
            Add a data model to this provider.
            </summary>
      <param name="model">Data model.</param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.SetSpecialChars(System.Collections.Generic.IEnumerable{System.Char})">
      <summary>
            Sets an special char array to this provider.
            </summary>
      <param name="value">Special chars array.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.BaseProvider.SpecialChars">
      <summary>
            Gets or sets an special char array.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.ToDataTable">
      <summary>
            Gets a reference to the <see cref="T:System.Data.DataTable" /> object that contains the data this instance.
            </summary>
      <returns>
            Reference to the <see cref="T:System.Data.DataTable" /> object.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.ToString">
      <summary>
            Returns a string that represents the current data type.
            </summary>
      <returns>
            A <see cref="T:System.String" /> than represents the current object.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.BaseProvider.ToXml">
      <summary>
            Gets a reference to the <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that contains the data this instance.
            </summary>
      <returns>
            Reference to the <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.
            </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Provider.IProvider">
      <summary>
            Declares a generic provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProvider.CanCreateInputXml">
      <summary>
            Gets a value indicating whether you can create an <strong>Xml</strong> file from the current instance of the object.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProvider.CanGetDataTable">
      <summary>
            Gets a value indicating whether this instance can get data table.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.IProvider.CreateInputXml">
      <summary>
            Creates the <b>Xml</b> source file from.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.IProvider.Export(iTin.Export.ExportSettings)">
      <summary>
            Export this target by applying the specified configuration.
            </summary>
      <param name="settings">Export settings</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProvider.Input">
      <summary>
            Gets a reference to the input data model.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProvider.InputUri">
      <summary>
            Gets the input Uri.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.IProvider.Parse(System.String)">
      <summary>
            Parse special chars of argument.
            </summary>
      <param name="value">
        <see cref="T:System.String" /> for parse.</param>
      <returns>
            Parsed string.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProvider.ProviderMetadata">
      <summary>
            Gets a reference that contains the metadata information of this provider.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.IProvider.SetInputDataModel(iTin.Export.ComponentModel.Input.InputDataModel)">
      <summary>
            Add an input data model to this adapter.
            </summary>
      <param name="model">Data model.</param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.IProvider.SetSpecialChars(System.Collections.Generic.IEnumerable{System.Char})">
      <summary>
            Sets an special char array to this provider.
            </summary>
      <param name="value">Special chars array.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProvider.SpecialChars">
      <summary>
            Gets an special char array.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.IProvider.ToDataTable">
      <summary>
            Gets a reference to the <see cref="T:System.Data.DataTable" /> object than contains the data this instance.
            </summary>
      <returns>
            Reference to the <see cref="T:System.Data.DataTable" /> object.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.IProvider.ToXml">
      <summary>
            Gets a reference to the <see cref="T:System.Collections.Generic.IEnumerable`1" /> object than contains the data this instance.
            </summary>
      <returns>
            Reference to the <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.
            </returns>
    </member>
    <member name="T:iTin.Export.ComponentModel.Provider.IProviderOptions">
      <summary>
            Attribute that allows you to add extra metadata to a provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProviderOptions.Author">
      <summary>
            Gets a value than identify to creator of adapter.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProviderOptions.Company">
      <summary>
            Gets a value than represents the name of the company that created the provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProviderOptions.Description">
      <summary>
            Gets a value than represents the description of the provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProviderOptions.Name">
      <summary>
            Gets a value than represents the name of the company that created the provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.IProviderOptions.Version">
      <summary>
            Gets a value than represents the version of the provider.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Provider.ProviderOptionsAttribute">
      <summary>
            Declares extra metadata to a provider.
            All providers created by <strong>iTin Export Engine</strong> are based in <a href="http://msdn.microsoft.com/es-es/library/dd460648.aspx">Managed Extensibility Framework <strong>(MEF)</strong></a>.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderOptionsAttribute.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Provider.ProviderOptionsAttribute</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsAttribute.Author">
      <summary>
            Gets or sets a value that identify to creator of provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsAttribute.Company">
      <summary>
            Gets or sets a value that represents the name of the company that created the provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsAttribute.Description">
      <summary>
            Gets or sets a value that represents the description of the provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsAttribute.Name">
      <summary>
            Gets or sets a value that represents the name of the company that created the provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsAttribute.Version">
      <summary>
            Gets or sets a value that represents the version of the provider.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata">
      <summary>
            Defines a value that contains the detailed information of a <see cref="T:iTin.Export.ComponentModel.Provider.IProvider" />.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.#ctor(iTin.Export.ComponentModel.Provider.IProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata" /> struct.
            </summary>
      <param name="provider">The target.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.Author">
      <summary>
            Gets a value than identify to creator of this provider
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.Company">
      <summary>
            Gets a value than represents the name of the company that created of this provider.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.Description">
      <summary>
            Gets a value than represents the description of this provider.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.Equals(iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">The object to compare with this object.</param>
      <returns>
            Returns <stromg>true</stromg> if the current object is equal to the parameter <paramref name="other" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <strong>true</strong> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.Name">
      <summary>
            Gets a value than represents the name of the company that created the provider.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.op_Equality(iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata,iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata)">
      <summary>
            Implements the equality operator (==).
            </summary>
      <param name="left">Left member</param>
      <param name="right">Right member</param>
      <returns>
        <strong>true</strong> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.op_Inequality(iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata,iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata)">
      <summary>
            Implements the inequality operator (!=).
            </summary>
      <param name="left">Left member</param>
      <param name="right">Right member</param>
      <returns>
        <strong>true</strong> if <paramref name="left" /> not is equal to <paramref name="right" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderOptionsMetadata.Version">
      <summary>
            Gets a value than represents the version of this provider.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Provider.ProviderParameters">
      <summary>
            Provider parameters
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Provider.ProviderParameters.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Provider.ProviderParameters</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Provider.ProviderParameters.Data">
      <summary>
            Gets or sets the data.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.BaseWriter">
      <summary>
            Implements interface <see cref="T:iTin.Export.ComponentModel.IWriter" />.
            Which acts as the base class for future writers based and not based on markup languages​​.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriter.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.Writer.BaseWriter" /> class.
            </summary>
    </member>
    <member name="F:iTin.Export.ComponentModel.Writer.BaseWriter.AlternateStyleNameSufix">
      <summary>
            Preferred alternate style name sufix.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriter.Dispose">
      <summary>
            Implement IDisposable. Clean managed and unmanaged resources.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriter.Execute">
      <summary>
            Generates output in the format supported by each specialized class.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriter.Generate(iTin.Export.ExportSettings)">
      <summary>
            Generates writer output.
            </summary>
      <param name="settings">Export settings.</param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriter.GetAsByteArrayEnumerable">
      <summary>
            Returns the writer result file as a enumeration of byte array
            </summary>
      <returns>
            A enumeration of array of bytes than contains the writer result file content.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriter.IsTransformationFile">
      <summary>
            Gets a value indicating whether this writer generates a transformation file to be processed later.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriter.Provider">
      <summary>
            Gets or sets a reference to provider for export.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriter.ReleaseManagedResources">
      <summary>
            Releasing managed resources.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriter.ReleaseUnmanagedResources">
      <summary>
            Releasing unmanaged resources.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriter.ResponseEx">
      <summary>
            Gets a reference to an object <see cref="T:iTin.Export.AspNet.ComponentModel.HttpResponseEx" /> than contains the <strong>MIME</strong> type of the output stream and response header for a <strong>ASP.NET</strong> operation.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriter.Result">
      <summary>
            Gets enumerable of byte array containing data info.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriter.Stream">
      <summary>
            Gets a reference to writer's stream.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriter.TransformFileExtension">
      <summary>
            Gets the transform file extension.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriter.WriterIdentifier">
      <summary>
            Gets a value than identifies the type of writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriter.WriterMetadata">
      <summary>
            Gets a reference that contains the extended information about this writer.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.BaseWriterDirect">
      <summary>
            A Specialization of <see cref="T:iTin.Export.ComponentModel.Writer.BaseWriter" /> Class, than implements interface <see cref="T:iTin.Export.ComponentModel.Writer.IWriterDirect" />.
            Which acts as a base class for writers based or not based on markup languages​​, but the writer is based in a 3rd party library that controls lifecycle of file, such as <a href="http://epplus.codeplex.com/">EPPlus library</a>.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriterDirect.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Writer.BaseWriterDirect</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriterDirect.Service">
      <summary>
            Gets a reference to service render.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriterDirect.WriterIdentifier">
      <summary>
            Gets a value than identifies the type of writer.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.BaseWriterStream">
      <summary>
            A Specialization of <see cref="T:iTin.Export.ComponentModel.Writer.BaseWriter" /> Class, than implements interface <see cref="T:iTin.Export.ComponentModel.Writer.IWriterStream" />.
            Which acts as a base class for writers not based on markup languages​​, such as a writer for a binary file format.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriterStream.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Writer.BaseWriterStream</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriterStream.CreateStream">
      <summary>
            Creates a new non based writer for markup languages.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriterStream.Service">
      <summary>
            Gets a reference to service render.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriterStream.WriterIdentifier">
      <summary>
            Gets a value than identifies the type of writer.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.BaseWriterXml">
      <summary>
            A Specialization of <see cref="T:iTin.Export.ComponentModel.Writer.BaseWriter" /> Class, than implements interface <see cref="T:iTin.Export.ComponentModel.Writer.IWriterXml" />.
            Which acts as the base class for future writers-based in markup languages​​.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriterXml.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Writer.BaseWriterXml</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriterXml.CreateWriter">
      <summary>
            Creates a new writer for markup languages.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriterXml.GetAsByteArrayEnumerable">
      <summary>
            Returns the writer result file as a enumeration of byte array
            </summary>
      <returns>
            An enumeration of array of bytes than contains the writer result file content.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.BaseWriterXml.ReleaseManagedResources">
      <summary>
            Releasing managed resources.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriterXml.Service">
      <summary>
            Gets a reference to service render.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriterXml.Writer">
      <summary>
            Gets a reference to based writer for markup languages​​.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.BaseWriterXml.WriterIdentifier">
      <summary>
            Gets a value than identifies the type of writer.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.IWriter">
      <summary>
            Declares a generic writer.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.IWriter.Generate(iTin.Export.ExportSettings)">
      <summary>
            Generates output in the format supported by each specialized class.
            </summary>
      <param name="settings">Export settings.</param>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.IWriter.GetAsByteArrayEnumerable">
      <summary>
            Returns the writer result file as a enumeration of byte array
            </summary>
      <returns>
            An enumeration of array of bytes than contains the writer result file content.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriter.IsTransformationFile">
      <summary> 
            Gets a value indicating whether this writer generates a transformation file to be processed later.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriter.Provider">
      <summary>
            Gets or sets a reference to provider to export.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriter.ResponseEx">
      <summary>
            Gets a reference to an object <see cref="T:iTin.Export.AspNet.ComponentModel.HttpResponseEx" /> containing the <strong>MIME</strong> type of the output stream and response header for a <strong>ASP.NET</strong> operation.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriter.Stream">
      <summary>
            Gets a reference to writer's stream.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriter.TransformFileExtension">
      <summary>
            Gets the transform file extension.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriter.WriterIdentifier">
      <summary>
            Gets a value than identifies the type of writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriter.WriterMetadata">
      <summary>
            Gets a reference that contains extended information of this writer.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.IWriterDirect">
      <summary>
            Declares a direct writer.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.IWriterOptions">
      <summary>
            Attribute that allows you to add extra metadata to a writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriterOptions.Author">
      <summary>
            Gets a value than identify to creator of writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriterOptions.Company">
      <summary>
            Gets a value than represents the name of the company that created the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriterOptions.Description">
      <summary>
            Gets a value than represents the description of the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriterOptions.Extension">
      <summary>
            Gets a value than represents extension output file created by writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriterOptions.Name">
      <summary>
            Gets a value than represents the name of the company that created the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriterOptions.Version">
      <summary>
            Gets a value than represents the version of the writer.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.IWriterStream">
      <summary>
            Declares a writer which is non-based in an markup language.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.IWriterStream.CreateStream">
      <summary>
            Creates a new non based writer for markup languages.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriterStream.Stream">
      <summary>
            Gets a reference to non based writer for markup languages​​ 
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.IWriterXml">
      <summary>
            Declares a writer which is based in an markup language.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.IWriterXml.CreateWriter">
      <summary>
            Creates a new writer for markup languages.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.IWriterXml.Writer">
      <summary>
            Gets a writer, based in an markup language.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.KnownWriterIdentifier">
      <summary>
            Known writer types 
            </summary>
    </member>
    <member name="F:iTin.Export.ComponentModel.Writer.KnownWriterIdentifier.WriterDirect">
      <summary>
            Direct writer, for more information please see <see cref="T:iTin.Export.ComponentModel.BaseWriterDirect" />.       
            </summary>
    </member>
    <member name="F:iTin.Export.ComponentModel.Writer.KnownWriterIdentifier.WriterStream">
      <summary>
            Stream writer, for more information please see <see cref="T:iTin.Export.ComponentModel.BaseWriterStream" />.       
            </summary>
    </member>
    <member name="F:iTin.Export.ComponentModel.Writer.KnownWriterIdentifier.WriterXml">
      <summary>
            XML writer, for more information please see <see cref="T:iTin.Export.ComponentModel.BaseWriterXml" />.       
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.WriterOptionsAttribute">
      <summary>
            Declares extra metadata to a writer.
            All writers created by <strong>iTin Export Engine</strong> are based in <a href="http://msdn.microsoft.com/es-es/library/dd460648.aspx">Managed Extensibility Framework <strong>(MEF)</strong></a>.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.WriterOptionsAttribute.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.ComponentModel.Writer.WriterOptionsAttribute</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsAttribute.Author">
      <summary>
            Gets or sets a value that identify to creator of writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsAttribute.Company">
      <summary>
            Gets or sets a value that represents the name of the company that created the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsAttribute.Description">
      <summary>
            Gets or sets a value that represents the description of the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsAttribute.Extension">
      <summary>
            Gets or sets a value that represents extension output file created by writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsAttribute.Name">
      <summary>
            Gets or sets a value that represents the name of the company that created the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsAttribute.Version">
      <summary>
            Gets or sets a value that represents the version of the writer.
            </summary>
    </member>
    <member name="T:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata">
      <summary>
            Defines a value that contains the detailed information of a <see cref="T:iTin.Export.ComponentModel.Writer.IWriter" />.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.#ctor(iTin.Export.ComponentModel.Writer.IWriter)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata" /> struct.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.Author">
      <summary>
            Gets a value than identify to creator of writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.Company">
      <summary>
            Gets a value than represents the name of the company that created the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.Description">
      <summary>
            Gets a value than represents the description of the writer.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.Equals(iTin.Export.ComponentModel.Writer.WriterOptionsMetadata)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">The object to compare with this object.</param>
      <returns>
            Returns <stromg>true</stromg> if the current object is equal to the parameter <paramref name="other" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <strong>true</strong> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.Extension">
      <summary>
            Gets a value than represents extension output file created by writer.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.Name">
      <summary>
            Gets a value than represents the name of the company that created the writer.
            </summary>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.op_Equality(iTin.Export.ComponentModel.Writer.WriterOptionsMetadata,iTin.Export.ComponentModel.Writer.WriterOptionsMetadata)">
      <summary>
            Implements the equality operator (==).
            </summary>
      <param name="left">Left member</param>
      <param name="right">Right member</param>
      <returns>
        <strong>true</strong> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.op_Inequality(iTin.Export.ComponentModel.Writer.WriterOptionsMetadata,iTin.Export.ComponentModel.Writer.WriterOptionsMetadata)">
      <summary>
            Implements the inequality operator (!=).
            </summary>
      <param name="left">Left member</param>
      <param name="right">Right member</param>
      <returns>
        <strong>true</strong> if <paramref name="left" /> not is equal to <paramref name="right" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:iTin.Export.ComponentModel.Writer.WriterOptionsMetadata.Version">
      <summary>
            Gets a value than represents the version of the writer.
            </summary>
    </member>
    <member name="T:iTin.Export.Inputs.ArrayListInput`1">
      <summary>
            Class than allows you to export an object of type <see cref="T:System.Collection" />.
            </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:iTin.Export.Inputs.ArrayListInput`1.#ctor(System.Collections.ArrayList,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.ArrayListInput" /> class.
            </summary>
      <param name="data">The data.</param>
      <param name="name">The name.</param>
    </member>
    <member name="T:iTin.Export.Inputs.DataRowInput">
      <summary>
            Class than allows you to export an object of type <see cref="T:System.Data.DataRow" />.
            </summary>
    </member>
    <member name="M:iTin.Export.Inputs.DataRowInput.#ctor(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Inputs.DataRowInput" /> class.
            </summary>
      <param name="rows">A <see cref="T:System.Data.DataRow" /> array object than contains the information.</param>
      <param name="name">The name.</param>
    </member>
    <member name="T:iTin.Export.Inputs.DataSetInput">
      <summary>
            Class than allows you to export an object of type <see cref="T:System.Data.DataSet" />.
            </summary>
    </member>
    <member name="M:iTin.Export.Inputs.DataSetInput.#ctor(System.Data.DataSet)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Inputs.DataSetInput" /> class.
            </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object than contains the information.</param>
    </member>
    <member name="T:iTin.Export.Inputs.DataTableInput">
      <summary>
            Class than allows you to export an object of type <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="M:iTin.Export.Inputs.DataTableInput.#ctor(System.Data.DataTable)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Inputs.DataTableInput" /> class.
            </summary>
      <param name="table">The table.</param>
    </member>
    <member name="M:iTin.Export.Inputs.DataTableInput.#ctor(System.Data.DataTable,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Inputs.DataTableInput" /> class.
            </summary>
      <param name="table">The table.</param>
      <param name="name">The name.</param>
    </member>
    <member name="T:iTin.Export.Inputs.EnumerableInput`1">
      <summary>
            Class than allows you to export an object of type <see cref="T:System.Data.DataRow" />.
            </summary>
      <typeparam name="T">Enumeration type</typeparam>
    </member>
    <member name="M:iTin.Export.Inputs.EnumerableInput`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Inputs.EnumerableInput{T}" /> class.
            </summary>
      <param name="data">A <see cref="T:System.Data.DataRow" /> array object than contains the information.</param>
      <param name="name">The name.</param>
    </member>
    <member name="T:iTin.Export.Inputs.JsonInput">
      <summary>
            Class than allows you to export an object of type <see cref="T:System.Uri" />.
            </summary>
    </member>
    <member name="M:iTin.Export.Inputs.JsonInput.#ctor(System.Uri)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Inputs.XmlInput" /> class.
            </summary>
      <param name="xml">The Xml.</param>
    </member>
    <member name="T:iTin.Export.Inputs.XmlInput">
      <summary>
            Class than allows you to export an object of type <see cref="T:System.Uri" />.
            </summary>
    </member>
    <member name="M:iTin.Export.Inputs.XmlInput.#ctor(System.Uri)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Inputs.XmlInput" /> class.
            </summary>
      <param name="xml">The XML.</param>
    </member>
    <member name="T:iTin.Export.Model.AlignmentModel">
      <summary>
            Base class for model elements. 
            Implements functionality to record and read configuration files.
            <markup><include item="SMCMissingIncludeTarget"><parameter>T:iTin.Export.Model.AlignmentModel</parameter><parameter>..\..\iTin.Export.Documentation.xml</parameter><parameter>Model/Alignment/Class[@name='info']/*</parameter></include></markup></summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.AlignmentModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.AlignmentModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.AlignmentModel.#ctor</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Alignment/Public/Constructors/Constructor[@name="ctor1"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.AlignmentModel.Horizontal">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.AlignmentModel.Horizontal</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.AlignmentModel.Horizontal</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Alignment/Public/Properties/Property[@name="Horizontal"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.AlignmentModel.SkipLines">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.AlignmentModel.SkipLines</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.AlignmentModel.SkipLines</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Alignment/Public/Properties/Property[@name="SkipLines"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.AxisDefinitionLabelsModel">
      <summary>
            Represents the visual setting the labels of a axis.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.AxisDefinitionLabelsModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.AxisDefinitionLabelsModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionLabelsModel.Alignment">
      <summary>
            Gets or sets preferred alignment for axis labels.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionLabelsModel.Font">
      <summary>
            Gets or sets a reference to the font model defined for this title.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionLabelsModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.AxisDefinitionLabelsModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.AxisDefinitionLabelsModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionLabelsModel.Orientation">
      <summary>
            Gets or sets preferred orientation for axis labels.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionLabelsModel.Position">
      <summary>
            Gets or sets preferred position for axis labels.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.AxisDefinitionMarksModel">
      <summary>
            Represents the visual setting  the marks of a axis.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.AxisDefinitionMarksModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.AxisDefinitionMarksModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionMarksModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.AxisDefinitionMarksModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionMarksModel.Major">
      <summary>
            Gets or sets a value indicating the position of major tick marks for an axis.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionMarksModel.Minor">
      <summary>
            Gets or sets a value indicating the position of minor tick marks for an axis.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.AxisDefinitionModel">
      <summary>
            Represents the visual setting of a axis.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.AxisDefinitionModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.AxisDefinitionModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionModel.GridLines">
      <summary>
            Gets or sets preferred grid lines for axis.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.AxisDefinitionModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.AxisDefinitionModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionModel.Labels">
      <summary>
            Gets or sets a reference that contains the visual setting of labels axis.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionModel.Marks">
      <summary>
            Gets or sets a reference that contains the visual setting of mark axis.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionModel.Show">
      <summary>
            Gets or sets a value that determines whether displays the axis.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionModel.Title">
      <summary>
            Gets or sets a reference that contains the visual setting of axis title.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionModel.Values">
      <summary>
            Gets or sets a reference that contains the visual setting of values axis.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.AxisDefinitionValuesModel">
      <summary>
            Represents the visual setting the values of a axis.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.AxisDefinitionValuesModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.AxisDefinitionValuesModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionValuesModel.HasMaximunValue">
      <summary>
            Gets a value that indicates whether the axis maximum value is the default value.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionValuesModel.HasMinimunValue">
      <summary>
            Gets a value that indicates whether the axis minimun value is the default value.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionValuesModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.AxisDefinitionValuesModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionValuesModel.Maximun">
      <summary>
            Gets or sets maximun value of axis.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisDefinitionValuesModel.Minimun">
      <summary>
            Gets or sets maximun value of axis.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.AxisModel">
      <summary>
            Includes information for the category and value axes.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.AxisModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.AxisModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisModel.Category">
      <summary>
            Gets or sets a reference that contains the visual setting of category axis.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.AxisModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.AxisModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.AxisModel.Values">
      <summary>
            Gets or sets a reference that contains the visual setting of values axis.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.BaseBehaviorModel">
      <summary>
            Implements interface <see cref="T:iTin.Export.Model.IBehavior" />.
            Which acts as the base class for different behaviors of an exporter supported by <strong><c>iTin Export Engine</c></strong>.<br /></summary>
    </member>
    <member name="M:iTin.Export.Model.BaseBehaviorModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.BaseBehaviorModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseBehaviorModel.CanExecute">
      <summary>
            Gets or sets a value indicating whether executes behavior.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="M:iTin.Export.Model.BaseBehaviorModel.Execute(iTin.Export.ComponentModel.Writer.IWriter)">
      <summary>
            Execute behavior.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseBehaviorModel.Execute(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Execute behavior.
            </summary>
      <param name="writer">The writer.</param>
      <param name="settings">Exporter settings.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseBehaviorModel.ExecuteBehavior(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Code for execute behavior
            </summary>
      <param name="writer">The writer.</param>
      <param name="settings">Exporter settings.</param>
    </member>
    <member name="P:iTin.Export.Model.BaseBehaviorModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.BaseBehaviorModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="M:iTin.Export.Model.BaseBehaviorModel.SetOwner(iTin.Export.Model.BehaviorsModel)">
      <summary>
            Sets a reference to the owner object that contains this instance.
            </summary>
      <param name="reference">Owner reference.</param>
    </member>
    <member name="T:iTin.Export.Model.BaseChartModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.BaseChartModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseChartModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.BaseChartModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseChartModel.ChartType">
      <summary>
            Gets a value indicating data chart type.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseChartModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseChartModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseChartModel.SetOwner(iTin.Export.Model.ChartsModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.ChartModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="P:iTin.Export.Model.BaseChartModel.Show">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseChartModel.Show</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseChartModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.BaseComplexModelCollection`3">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseSimpleModelCollection{TItem, TParent}" /> class.<br />.
            Which acts as the base class for nodes of model which are of collection type
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BaseComplexModelCollection`3.#ctor(`1)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.BaseComplexModelCollection`3" /> class.
            </summary>
      <param name="parent">c.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseComplexModelCollection`3.Contains(`2)">
      <summary>
            Determines whether an element is in the <see cref="T:iTin.Export.Model.BaseComplexModelCollection`3" />.
            </summary>
      <param name="value">The object to locate in the <see cref="T:iTin.Export.Model.BaseComplexModelCollection`3" />.</param>
      <returns>
        <strong>true</strong> if <paramref name="value" /> is found in the <see cref="T:iTin.Export.Model.BaseComplexModelCollection`3" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseComplexModelCollection`3.GetBy(`2)">
      <summary>
            Returns the element specified.
            </summary>
      <param name="value">The object to locate in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.</param>
      <returns>
        <strong>true</strong> if <paramref name="value" /> is found in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BaseComplexModelCollection`3.Item(`2)">
      <summary>
            Gets or sets the element specified by <paramref name="value" />.
            </summary>
      <param name="value">Zero-based index of the element to get or set.</param>
      <returns>
            The value.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.BaseConditionModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.BaseConditionModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseConditionModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BaseConditionModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseConditionModel.Active">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseConditionModel.Active</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseConditionModel.Apply">
      <summary>
            Evaluates the specified row.
            </summary>
      <returns>
            System.String.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseConditionModel.Apply(System.Int32,System.Int32)">
      <summary>
            Evaluates the specified row.
            </summary>
      <param name="row">The row.</param>
      <param name="col">The col.</param>
      <returns>
            System.String.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseConditionModel.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)">
      <summary>
            Evaluates the specified row.
            </summary>
      <param name="row">The row.</param>
      <param name="col">The col.</param>
      <param name="target">The target.</param>
      <returns>System.String.</returns>
    </member>
    <member name="P:iTin.Export.Model.BaseConditionModel.EntireRow">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseConditionModel.EntireRow</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseConditionModel.Field">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseConditionModel.Field</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseConditionModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseConditionModel.Key">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseConditionModel.Key</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseConditionModel.Service">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseConditionModel.Service</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseConditionModel.SetOwner(iTin.Export.Model.ConditionsModel)">
      <summary>
            Sets a reference to the owner object that contains this instance.
            </summary>
      <param name="reference">Owner reference.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseConditionModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.BaseDataFieldModel">
      <summary>
            Base class for the different types of data fields supported by <strong><c>iTin Export Engine</c></strong>.<br />
            Which acts as the base class for different data fields.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BaseDataFieldModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BaseDataFieldModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.Aggregate">
      <summary>
            Gets or sets a reference that contains the visual setting of aggregate function of the data field.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.Alias">
      <summary>
            Gets or sets the alias of data field.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.CanSetData">
      <summary>
            When overridden in a derived class, gets a value indicating whether the current data field supports data.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.Condition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseDataFieldModel.Condition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.DataSource">
      <summary>
            Gets or sets a reference for pieces data.
            </summary>
      <exception cref="T:System.InvalidOperationException">If not supported for this data field.</exception>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.FieldType">
      <summary>
            Gets a value indicating data field type.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseDataFieldModel.GetFieldNameFrom(iTin.Export.Model.BaseDataFieldModel)">
      <summary>
            Gets the name of field.
            </summary>
      <param name="field">The field.</param>
      <returns>
            Returns name of specified field.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.Header">
      <summary>
            Gets or sets a reference that contains the visual setting of header the data field.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance contains the default.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseDataFieldModel.SetOwner(iTin.Export.Model.FieldsModel)">
      <summary>
            Sets the element that owns this data field.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseDataFieldModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BaseDataFieldModel.Value">
      <summary>
            Gets or sets a reference that contains the visual setting of value the data field.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.BaseDataTypeModel">
      <summary>
            Base class for different data types supported by <strong><c>iTin Export Engine</c></strong>.<br />
            Which acts as the base class for different data types.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseDataTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BaseDataTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.BaseDataTypeModel.Combine(iTin.Export.Model.BaseDataTypeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">The reference.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseDataTypeModel.GetDataFormat">
      <summary>
            Returns data format for a data type.
            </summary>
      <returns>
            Data format.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseDataTypeModel.GetFormattedDataValue(System.String)">
      <summary>
            Returns data format for a data type.
            </summary>
      <param name="value">The value.</param>
      <returns>
            Data format.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BaseDataTypeModel.Type">
      <summary>
            Gets a value indicating data type.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.BaseEffectModel">
      <summary>
            Base class for different effects compatible with <strong><c>iTin Export Engine</c></strong>.<br />
            Which acts as the base class for different image effects.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BaseEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseEffectModel.Apply">
      <summary>
            Gets the manipulation of the colors in an image to an effect.
            </summary>
      <returns>
            A <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that contains the information about how bitmap colors are manipulated. 
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseEffectModel.SetOwner(iTin.Export.Model.ImageModel)">
      <summary>
            Sets the element that owns this effect.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="T:iTin.Export.Model.BaseErrorModel">
      <summary>
            Base class for different data types errors.
            Which acts as the base class for the different data types errors.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseErrorModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BaseErrorModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseErrorModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.BaseErrorModel.Combine(iTin.Export.Model.BaseErrorModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">The reference.</param>
    </member>
    <member name="P:iTin.Export.Model.BaseErrorModel.Comment">
      <summary>
            Gets or sets a reference that contains the error comment.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseErrorModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.BaseLineModel">
      <summary>
            Base class for the different types of lines supported by <strong><c>iTin Export Engine</c></strong>.<br />
            Which acts as the base class for different types of lines.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseLineModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.BaseLineModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseLineModel.GetStyle">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BaseLineModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseLineModel.Key">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseLineModel.Key</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseLineModel.LineType">
      <summary>
            Gets a value indicating line type.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseLineModel.Repeat">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseLineModel.Repeat</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseLineModel.SetOwner(iTin.Export.Model.LinesModel)">
      <summary>
            Sets the element that owns this data field.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="P:iTin.Export.Model.BaseLineModel.Show">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseLineModel.Show</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseLineModel.Style">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseLineModel.Style</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseLineModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseLineModel.TryGetResourceInformation(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the image resource information.
            </summary>
      <param name="resource">Resource information.</param>
      <returns>
        <strong>true</strong> if exist available information about resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseLineModel.TryGetStyle(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <param name="style">A <see cref="T:iTin.Export.Model.StyleModel" /> resource.</param>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.BaseMiniChartPointModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.BaseMiniChartPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseMiniChartPointModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.BaseMiniChartPointModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointModel.Color">
      <summary>
            Gets or sets preferred serie color.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseMiniChartPointModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure preferred for this mini-chart serie.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance contains the default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointModel.Show">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseMiniChartPointModel.Show</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.BaseMiniChartPointsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.BaseMiniChartPointsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseMiniChartPointsModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BaseMiniChartPointsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointsModel.First">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseMiniChartPointsModel.First</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointsModel.High">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseMiniChartPointsModel.High</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointsModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseMiniChartPointsModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointsModel.Last">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseMiniChartPointsModel.Last</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointsModel.Low">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseMiniChartPointsModel.Low</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartPointsModel.Negative">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BaseMiniChartPointsModel.Negative</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.BaseMiniChartSerieModel">
      <summary>
            Base class for the different types of mini-chart series supported by <strong><c>iTin Export Engine</c></strong>.<br />
            Which acts as the base class for different mini-chart serie.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BaseMiniChartSerieModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BaseMiniChartSerieModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartSerieModel.Color">
      <summary>
            Gets or sets preferred serie color.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseMiniChartSerieModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure preferred for this mini-chart serie.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BaseMiniChartSerieModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance contains the default.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.BaseModel`1">
      <summary>
            Base class for model elements. 
            Implements functionality to record and read configuration files.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BaseModel`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.Deserialize(System.IO.Stream)">
      <summary>
            Deserializes the specified stream.
            </summary>
      <param name="stream">Stream to deserialize.</param>
      <returns>
            T object
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.Deserialize(System.String)">
      <summary>
            Deserializes the specified Xml.
            </summary>
      <param name="xml">The Xml.</param>
      <returns>
            T object
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.Deserialize(System.String,`0@)">
      <summary>
            Deserializes the specified Xml.
            </summary>
      <param name="xml">Xml to deserialize.</param>
      <param name="obj">The object.</param>
      <returns>
            T object
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.Deserialize(System.String,`0@,System.Exception@)">
      <summary>
            Deserializes workflow markup into an BaseModel object
            </summary>
      <param name="xml">string workflow markup to deserialize</param>
      <param name="obj">Output BaseModel object</param>
      <param name="exception">output Exception value if deserialize failed</param>
      <returns>
        <strong>true</strong> if this XmlSerializer can deserialize the object; otherwise, <strong>false</strong></returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.GetStaticBindingValue(System.String)">
      <summary>
            Gets the static binding value by reflection.
            </summary>
      <param name="value">The value.</param>
      <returns>
            A <see cref="T:System.String" /> that contains property, method or raw value.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.LoadFromFile(System.String)">
      <summary>
            Loads from file.
            </summary>
      <param name="fileName">Name of the file.</param>
      <returns>
            T object
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.LoadFromFile(System.String,`0@)">
      <summary>
            Loads from file.
            </summary>
      <param name="fileName">Name of the file.</param>
      <param name="obj">The object.</param>
      <returns>
            T object
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.LoadFromFile(System.String,`0@,System.Exception@)">
      <summary>
            Deserializes xml markup from file into an BaseModel object
            </summary>
      <param name="fileName">string xml file to load and deserialize</param>
      <param name="obj">Output BaseModel object</param>
      <param name="exception">output Exception value if deserialize failed</param>
      <returns>
        <strong>true</strong> if this XmlSerializer can deserialize the object; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.LoadFromUri(System.Uri)">
      <summary>
            Loads from file.
            </summary>
      <param name="pathUri">Name of the file.</param>
      <returns>
            T object
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BaseModel`1.Properties">
      <summary>
            Gets or sets a reference to user-defined property list for this element.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.SaveToFile(System.String)">
      <summary>
            Saves to file.
            </summary>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.SaveToFile(System.String,System.Exception@)">
      <summary>
            Serializes current BaseModel object into file
            </summary>
      <param name="fileName">Full path of output Xml file</param>
      <param name="exception">Output Exception value if failed</param>
      <returns>
        <strong>true</strong> if can serialize and save into file; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.Serialize">
      <summary>
            Serializes current BaseModel object into an Xml document.
            </summary>
      <returns>
            string Xml value.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseModel`1.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.BaseSimpleModelCollection`2">
      <summary>
            Represents a strongly typed list of model objects that can be accessed by index, allow defines type of parent.
            Provides methods to search, sort, and manipulate lists.
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.#ctor(`1)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" /> class.
            </summary>
      <param name="parent">Parent type.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.Add(`0)">
      <summary>
            Adds an object to the end of the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
      <param name="item">The object to be added to the end of the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.</param>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.Clear">
      <summary>
            Removes all elements from the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.Contains(`0)">
      <summary>
            Determines whether an element is in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
      <param name="item">The object to locate in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />. The value can be <strong>null</strong> for reference types.</param>
      <returns>
        <strong>true</strong> if <paramref name="item" /> is found in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.CopyTo(`0[],System.Int32)">
      <summary>
            Copies the entire <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" /> to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <strong>null</strong>.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination array.</exception>
    </member>
    <member name="P:iTin.Export.Model.BaseSimpleModelCollection`2.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.Find(System.Predicate{`0})">
      <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
      <param name="match">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</param>
      <returns>
            The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type TItem.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator{TItem}.Enumerator" /> for the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.IndexOf(`0)">
      <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
      <param name="item">The object to locate in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />. The value can be <strong>null</strong> for reference types.</param>
      <returns>
            The zero-based index of the first occurrence of item within the entire <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />, if found; otherwise, –1.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.Insert(System.Int32,`0)">
      <summary>
            Inserts an item to the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" /> at the specified index.
            </summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert.  The value can be <strong>null</strong> for reference types.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 - or - index is greater than <see cref="P:iTin.Export.Model.BaseSimpleModelCollection`2.Count" />.</exception>
    </member>
    <member name="P:iTin.Export.Model.BaseSimpleModelCollection`2.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseSimpleModelCollection`2.IsReadOnly">
      <summary>
            Gets a value indicating whether the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" /> is read-only.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseSimpleModelCollection`2.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            </summary>
      <param name="index">Zero-based index of the element to get or set.</param>
      <returns>
            the value
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index for <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" /> is readonly.</exception>
    </member>
    <member name="P:iTin.Export.Model.BaseSimpleModelCollection`2.List">
      <summary>
            Gets a reference to the inner list.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BaseSimpleModelCollection`2.Parent">
      <summary>
            Gets a reference to the owner of the collection
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.Remove(`0)">
      <summary>
            Removes the first occurrence of a specific object from the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
      <param name="item">The object to remove from the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />. The value can be <strong>null</strong> for reference types.</param>
      <returns>
        <strong>true</strong> if item is successfully removed; otherwise, <strong>false</strong>. This method also returns <strong>false</strong> if item was not found in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.RemoveAt(System.Int32)">
      <summary>
            Removes the element at the specified index of the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.
            </summary>
      <param name="index">The zero-based index of the element to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 - or - index is greater than <see cref="P:iTin.Export.Model.BaseSimpleModelCollection`2.Count" />.</exception>
    </member>
    <member name="M:iTin.Export.Model.BaseSimpleModelCollection`2.SetOwner(`0)">
      <summary>
            Sets this collection as the owner of the specified item.
            </summary>
      <param name="item">Target item to set owner.</param>
    </member>
    <member name="T:iTin.Export.Model.BehaviorsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.BehaviorsModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BehaviorsModel.#ctor(iTin.Export.Model.ExporterModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.BehaviorsModel" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:iTin.Export.Model.BehaviorsModel.Execute(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Executes defined behaviors.
            </summary>
      <param name="writer">Writer to use.</param>
      <param name="settings">Writer settings.</param>
    </member>
    <member name="M:iTin.Export.Model.BehaviorsModel.Get``1">
      <summary>
            Returns specified behavior.
            </summary>
      <typeparam name="T">Behavior type</typeparam>
      <returns>
            Specified behavior.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BehaviorsModel.GetRange``1">
      <summary>
            Returns an enumerator to a field list containing only those who meet the condition of type.
            </summary>
      <typeparam name="T">Behavior type</typeparam>
      <returns>
            Enumerator that contains list of fields that meet the condition.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.BehaviorsModel.SetOwner(iTin.Export.Model.BaseBehaviorModel)">
      <summary>
            Sets this collection as the owner of the specified item.
            </summary>
      <param name="item">Target item to set owner.</param>
    </member>
    <member name="T:iTin.Export.Model.BindableProperty">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.BindableProperty</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BindableProperty.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BindableProperty</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BindableProperty.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BindableProperty</parameter>
          </include>
        </markup>
      </summary>
      <param name="functionName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>functionName</parameter>
            <parameter>M:iTin.Export.Model.BindableProperty.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.BindableProperty.#ctor(System.String,System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BindableProperty</parameter>
          </include>
        </markup>
      </summary>
      <param name="namespace">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>namespace</parameter>
            <parameter>M:iTin.Export.Model.BindableProperty.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="functionName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>functionName</parameter>
            <parameter>M:iTin.Export.Model.BindableProperty.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.BindableProperty.FunctionName">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BindableProperty.FunctionName</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BindableProperty.Namespace">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BindableProperty.Namespace</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BindableProperty.ToString">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.BindableProperty.ToString</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.BindableProperty.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:iTin.Export.Model.BindableProperty.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BindableProperty.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.BlockLineItemModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.BlockLineItemModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BlockLineItemModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BlockLineItemModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BlockLineItemModel.Keys">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BlockLineItemModel.Keys</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.BlockLineModel">
      <summary>
            Base class for model elements. 
            Implements functionality to record and read configuration files.
            <markup><include item="SMCMissingIncludeTarget"><parameter>T:iTin.Export.Model.BlockLineModel</parameter><parameter>..\..\iTin.Export.Documentation.xml</parameter><parameter>Model/Table/Class[@name='info']/*</parameter></include></markup></summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BlockLineModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BlockLineModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BlockLineModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.BlockLineModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.BlockLineModel.Items">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BlockLineModel.Items</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BlockLineModel.Key">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BlockLineModel.Key</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BlockLineModel.Location">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BlockLineModel.Location</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.BlockLineModel.Show">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.BlockLineModel.Show</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.BlockLinesModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseSimpleModelCollection{TItem, TParent}" /> class.<br />.
            Which acts as the base class for nodes of model which are of collection type
            <markup><include item="SMCMissingIncludeTarget"><parameter>T:iTin.Export.Model.BlockLinesModel</parameter><parameter>..\..\iTin.Export.Documentation.xml</parameter><parameter>Model/Table/Class[@name='info']/*</parameter></include></markup></summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BlockLinesModel.#ctor(iTin.Export.Model.ExportModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BlockLinesModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent"></param>
    </member>
    <member name="M:iTin.Export.Model.BlockLinesModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.BlockLinesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.BlockLinesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.BlockLinesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.BlockLinesModel.SetOwner(iTin.Export.Model.BlockLineModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.BlockLinesModel.SetOwner(iTin.Export.Model.BlockLineModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.BlockLinesModel.SetOwner(iTin.Export.Model.BlockLineModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.BorderModel">
      <summary>
            Includes definition for a font type, type of content, such as the background color, the alignment type and the data type.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BorderModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.BorderModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BorderModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.BorderModel.Color">
      <summary>
            Gets or sets preferred border color.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BorderModel.Combine(iTin.Export.Model.BorderModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.BorderModel.Combine(iTin.Export.Model.BorderModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.BorderModel.Default">
      <summary>
            Gets a default border.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BorderModel.Empty">
      <summary>
            Gets an empty border.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.BorderModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure preferred for this border.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.BorderModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BorderModel.IsEmpty">
      <summary>
            Gets a value indicating whether this style is an empty style.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BorderModel.LineStyle">
      <summary>
            Gets or sets preferred border line style.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BorderModel.Position">
      <summary>
            Gets or sets preferred border position.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.BorderModel.Weight">
      <summary>
            Gets or sets preferred border weight.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.BordersModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.BordersModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BordersModel.#ctor(iTin.Export.Model.StyleModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BordersModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.BordersModel.#ctor(iTin.Export.Model.StyleModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.BordersModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.BordersModel.Combine(iTin.Export.Model.BordersModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">The reference.</param>
    </member>
    <member name="M:iTin.Export.Model.BordersModel.GetBy(iTin.Export.Model.KnownBorderPosition)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.BordersModel.GetBy(iTin.Export.Model.KnownBorderPosition)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.BordersModel.GetBy(iTin.Export.Model.KnownBorderPosition)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.BordersModel.GetBy(iTin.Export.Model.KnownBorderPosition)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.BordersModel.SetOwner(iTin.Export.Model.BorderModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.BordersModel.SetOwner(iTin.Export.Model.BorderModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.BordersModel.SetOwner(iTin.Export.Model.BorderModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.BrightnessEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents brightness effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.BrightnessEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.BrightnessEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.BrightnessEffectModel.Apply">
      <summary>
            Gets the manipulation of the colors in an image to an effect.
            </summary>
      <returns>
            A <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that contains the information about how bitmap colors are manipulated. 
            </returns>
    </member>
    <member name="T:iTin.Export.Model.ChartAxesModel">
      <summary>
            Represents the visual setting for axes of a chart. Includes information of primary and secondary axes.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartAxesModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ChartAxesModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartAxesModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.ChartAxesModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.ChartAxesModel.Primary">
      <summary>
            Gets or sets a reference to information of primary axes.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartAxesModel.Secondary">
      <summary>
            Gets or sets a reference to information of secondary axes.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ChartBorderModel">
      <summary>
            Represents the visual setting of chart border. Includes visibility, shadow definition, line style, width and color.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartBorderModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ChartBorderModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartBorderModel.Color">
      <summary>
            Gets or sets preferred border color.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartBorderModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure that represents color for this border.
            </summary>
      <returns>
            A <see cref="T:System.Drawing.Color" /> structure that represents color for this border.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.ChartBorderModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.ChartBorderModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.ChartBorderModel.Shadow">
      <summary>
            Gets or sets a reference that contains the visual setting of shadow-border.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartBorderModel.Show">
      <summary>
            Gets or sets a value that determines whether to display the border.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ChartBorderModel.Style">
      <summary>
            Gets or sets preferred border line style.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartBorderModel.Width">
      <summary>
            Gets or sets preferred style for width of the border line.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ChartLegendModel">
      <summary>
            Represents the visual setting of chart legend. Includes visibility, location, border and font.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartLegendModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ChartLegendModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartLegendModel.Border">
      <summary>
            Gets or sets a reference that contains the visual setting of legend border.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartLegendModel.Font">
      <summary>
            Gets or sets a reference for font model defined for this legend.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartLegendModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ChartLegendModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.ChartLegendModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartLegendModel.Location">
      <summary>
            Gets or sets preferred location for chart legend.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ChartLegendModel.Show">
      <summary>
            Gets or sets a value that determines whether displays the chart legend.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.ChartModel">
      <summary>
            Represents a user-defined chart.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ChartModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.Axes">
      <summary>
            Gets or sets a reference that contains the visual setting of the chart axes.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.BackColor">
      <summary>
            Gets or sets preferred back color for this chart.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.Border">
      <summary>
            Gets or sets a reference that contains the visual setting of chart border.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.ChartSize">
      <summary>
            Gets the dimensions of chart.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.ChartType">
      <summary>
            Gets a value indicating chart type.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartModel.GetBackColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure than represents back color for this chart.
            </summary>
      <returns>
            A <see cref="T:System.Drawing.Color" /> structure that represents back color.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ChartModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.ChartModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.Legend">
      <summary>
            Gets or sets a reference that contains the visual setting of chart legend.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.Location">
      <summary>
            Gets or sets a reference which contains the chart location on the host, this can be by coordinates or by type of alignment, depending whether the host has or not a tabular format.
            You can only choose one of the modes. If this tag does not define the defaults is by coordinates
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.Plots">
      <summary>
            Gets or sets collection of plots for a chart.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.Size">
      <summary>
            Gets or sets width and height of the graphic.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartModel.SizeToPoints(System.IntPtr)">
      <summary>
            Converts chart size value in pixels to points for the specified device.
            </summary>
      <param name="hwnd">Pointer to device.</param>
      <returns>
            Returns size of chart, in points.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.ChartModel.Title">
      <summary>
            Gets or sets a reference that contains the visual setting of chart title.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.ChartPlotModel">
      <summary>
            Represents a chart plot.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartPlotModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ChartPlotModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartPlotModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.ChartPlotModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.ChartPlotModel.Name">
      <summary>
            Gets or sets name of plot.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">If <paramref name="value" /> not is a valid field identifier name.</exception>
    </member>
    <member name="P:iTin.Export.Model.ChartPlotModel.Series">
      <summary>
            Gets or sets collection of series for a plot.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartPlotModel.SetOwner(iTin.Export.Model.ChartPlotsModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.ChartPlotModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="P:iTin.Export.Model.ChartPlotModel.UseSecondaryAxis">
      <summary>
            Gets or sets a value that determines whether the plot uses secondary axis.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.ChartPlotsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ChartPlotsModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ChartPlotsModel.#ctor(iTin.Export.Model.ChartModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ChartPlotsModel" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="P:iTin.Export.Model.ChartPlotsModel.Border">
      <summary>
            Gets or sets a reference that contains the visual setting for common border of plots.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartPlotsModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ChartPlotsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.ChartPlotsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.ChartPlotsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:iTin.Export.Model.ChartPlotsModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.ChartPlotsModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="M:iTin.Export.Model.ChartPlotsModel.SetOwner(iTin.Export.Model.ChartPlotModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ChartPlotsModel.SetOwner(iTin.Export.Model.ChartPlotModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.ChartPlotsModel.SetOwner(iTin.Export.Model.ChartPlotModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.ChartPlotsModel.Validate">
      <summary>
            Validates chart definition list.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ChartSerieModel">
      <summary>
            Represents a data serie of a plot.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartSerieModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ChartSerieModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartSerieModel.Axis">
      <summary>
            Gets or sets the name of field that contains axis data of plot.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException">If <paramref name="value" /> not is a valid field identifier name.</exception>
    </member>
    <member name="P:iTin.Export.Model.ChartSerieModel.ChartType">
      <summary>
            Gets or sets preferred chart type.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ChartSerieModel.Color">
      <summary>
            Gets or sets preferred color for this data serie.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartSerieModel.Field">
      <summary>
            Gets or sets name of field that contains data.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException">If <paramref name="value" /> not is a valid field identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.ChartSerieModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure than represents color for this data serie.
            </summary>
      <returns>
            A <see cref="T:System.Drawing.Color" /> structure that represents color of data serie.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.ChartSerieModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.ChartSerieModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.ChartSerieModel.Name">
      <summary>
            Gets or sets name of this serie.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartSerieModel.SetOwner(iTin.Export.Model.ChartSeriesModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.ChartSerieModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="T:iTin.Export.Model.ChartSeriesModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ChartSeriesModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartSeriesModel.#ctor(iTin.Export.Model.ChartPlotModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ChartSeriesModel" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:iTin.Export.Model.ChartSeriesModel.SetOwner(iTin.Export.Model.ChartSerieModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ChartSeriesModel.SetOwner(iTin.Export.Model.ChartSerieModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.ChartSeriesModel.SetOwner(iTin.Export.Model.ChartSerieModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.ChartSeriesModel.Validate">
      <summary>
            Validates serie definition list.
            </summary>
      <exception cref="T:iTin.Export.Model.InvalidSeriesDefinitionException">Thrown if there are serie definition errors.</exception>
    </member>
    <member name="T:iTin.Export.Model.ChartsModel">
      <summary>
            Collection of user-defined charts. Each element represents a user-defined chart.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartsModel.#ctor(iTin.Export.Model.TableModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ChartsModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.ChartsModel.#ctor(iTin.Export.Model.TableModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.ChartsModel.SetOwner(iTin.Export.Model.BaseChartModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ChartsModel.SetOwner(iTin.Export.Model.BaseChartModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.ChartsModel.SetOwner(iTin.Export.Model.BaseChartModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.ChartsModel.Validate">
      <summary>
            Validates chart definition list.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ChartTitleModel">
      <summary>
            Represents the visual setting of title. Includes a text, visibility, orientation, border and font.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ChartTitleModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ChartTitleModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartTitleModel.Border">
      <summary>
            Gets or sets a reference that contains the visual setting for border of title.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartTitleModel.Font">
      <summary>
            Gets or sets a reference to the font model defined for this title.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ChartTitleModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.ChartTitleModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.ChartTitleModel.Orientation">
      <summary>
            Gets or sets preferred orientation for the title.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ChartTitleModel.Show">
      <summary>
            Gets or sets a value that determines whether displays the title.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ChartTitleModel.Text">
      <summary>
            Gets or sets text of title.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ColumnHeaderGroup">
      <summary>
            Base class for model elements. 
            Implements functionality to record and read configuration files.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ColumnHeaderGroup.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ColumnHeaderGroup" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderGroup.Collapsed">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderGroup.Collapsed</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderGroup.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderGroup.Level">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderGroup.Level</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ColumnHeaderGroup.SetParent(iTin.Export.Model.ColumnHeaderModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ColumnHeaderGroup.SetParent(iTin.Export.Model.ColumnHeaderModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.ColumnHeaderGroup.SetParent(iTin.Export.Model.ColumnHeaderModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderGroup.Show">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderGroup.Show</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.ColumnHeaderModel">
      <summary>
            Base class for model elements. 
            Implements functionality to record and read configuration files.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ColumnHeaderModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ColumnHeaderModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderModel.From">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderModel.From</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ColumnHeaderModel.GetStyle">
      <summary>
            Return the <see cref="T:iTin.Export.Model.StyleModel" /> for this column.
            </summary>
      <returns>
            A <see cref="T:iTin.Export.Model.StyleModel" /> for this column.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderModel.Group">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderModel.Group</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ColumnHeaderModel.SetOwner(iTin.Export.Model.ColumnHeadersModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.ColumnHeaderModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderModel.Show">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderModel.Show</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderModel.Style">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderModel.Style</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderModel.Text">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderModel.Text</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ColumnHeaderModel.To">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ColumnHeaderModel.To</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.ColumnHeadersModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ColumnHeadersModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ColumnHeadersModel.#ctor(iTin.Export.Model.TableModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ColumnHeadersModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.ColumnHeadersModel.#ctor(iTin.Export.Model.TableModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.ColumnHeadersModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ColumnHeadersModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.ColumnHeadersModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.ColumnHeadersModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.ColumnHeadersModel.SetOwner(iTin.Export.Model.ColumnHeaderModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ColumnHeadersModel.SetOwner(iTin.Export.Model.ColumnHeaderModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.ColumnHeadersModel.SetOwner(iTin.Export.Model.ColumnHeaderModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.CommentModel">
      <summary>
            Represents a comment. Includes comment text, format, including font face, size, and style attributes.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.CommentModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.CommentModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.CommentModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.CommentModel.Combine(iTin.Export.Model.CommentModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">The reference.</param>
    </member>
    <member name="P:iTin.Export.Model.CommentModel.Font">
      <summary>
            Gets or sets the font model.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.CommentModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.CommentModel.Show">
      <summary>
            Gets or sets a value indicating whether displays a comment that contains the original value of the field.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.CommentModel.Text">
      <summary>
            Gets or sets the comment text.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ConditionsItemModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ConditionsItemModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ConditionsItemModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ConditionsItemModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ConditionsItemModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.ConditionsItemModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.ConditionsItemModel.Items">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ConditionsItemModel.Items</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ConditionsItemModel.Keys">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ConditionsItemModel.Keys</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.ConditionsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ConditionsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ConditionsModel.#ctor(iTin.Export.Model.GlobalResourcesModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ConditionsModel" /> class.
            </summary>
      <param name="parent">c.</param>
    </member>
    <member name="M:iTin.Export.Model.ConditionsModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.ConditionsModel.GetBy(System.String)">
      <summary>
            Gets a specified condition by name
            </summary>
      <param name="name">Name of condition</param>
      <param name="value">The object to locate in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.</param>
      <returns>
            The condition specified.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.ConditionsModel.SetOwner(iTin.Export.Model.BaseConditionModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ConditionsModel.SetOwner(iTin.Export.Model.BaseConditionModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.ConditionsModel.SetOwner(iTin.Export.Model.BaseConditionModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.ContentAlignmentModel">
      <summary>
            Defines content alignment.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ContentAlignmentModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ContentAlignmentModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ContentAlignmentModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.ContentAlignmentModel.Combine(iTin.Export.Model.ContentAlignmentModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.ContentAlignmentModel.Combine(iTin.Export.Model.ContentAlignmentModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.ContentAlignmentModel.Default">
      <summary>
            Gets default alignament.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ContentAlignmentModel.Horizontal">
      <summary>
            Gets or sets horizontal alignment.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ContentAlignmentModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ContentAlignmentModel.Vertical">
      <summary>
            Gets or sets vertical alignment.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.ContentModel">
      <summary>
            Defines as shown the content of a field.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ContentModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ContentModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ContentModel.Alignment">
      <summary>
            Gets or sets content distribution.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ContentModel.AlternateColor">
      <summary>
            Gets or sets alternative color preferred of content.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ContentModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.ContentModel.Color">
      <summary>
            Gets or sets color preferred of content.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ContentModel.Combine(iTin.Export.Model.ContentModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">The reference.</param>
    </member>
    <member name="P:iTin.Export.Model.ContentModel.DataType">
      <summary>
            Gets or sets content data type.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ContentModel.Default">
      <summary>
            Gets default content definition
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ContentModel.GetAlternateColor">
      <summary>
            Gets a reference to the alternate <see cref="T:System.Drawing.Color" /> structure preferred for this content.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.</returns>
    </member>
    <member name="M:iTin.Export.Model.ContentModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure preferred for this content.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.</returns>
    </member>
    <member name="P:iTin.Export.Model.ContentModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ContentModel.Pattern">
      <summary>
            Gets or sets the fill pattern content.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.CoordenatesModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.CoordenatesModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.CoordenatesModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.CoordenatesModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.CoordenatesModel.#ctor</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Coordenates/Public/Constructors/Constructor[@name="ctor1"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.CoordenatesModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.CoordenatesModel.Coordenates">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.CoordenatesModel.Coordenates</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.CoordenatesModel.Coordenates</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Coordenates/Public/Properties/Property[@name="Coordenates"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.CoordenatesModel.TableCoordenates">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.CoordenatesModel.TableCoordenates</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.CoordenatesModel.TableCoordenates</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Coordenates/Public/Properties/Property[@name="TableCoordenates"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.CurrencyDataTypeModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.NumericDataTypeModel" /> class.<br />
            Represents currency format, the currency symbol appears right next to the first digit.
            You can specify the number of decimal places that you want to use and how you want to display negative numbers.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.CurrencyDataTypeModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.CurrencyDataTypeModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.CurrencyDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.CurrencyDataTypeModel.Combine(iTin.Export.Model.CurrencyDataTypeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">The reference.</param>
    </member>
    <member name="P:iTin.Export.Model.CurrencyDataTypeModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.CurrencyDataTypeModel.Locale">
      <summary>
            Gets or sets preferred output culture.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.DarkEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents dark effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.DarkEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.DarkEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.DarkEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.DarkEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.DarkEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.DataFieldModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseDataFieldModel" /> class.<br />
            Which acts as the base class for different data fields.<br />
            Represents a data field.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.DataFieldModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.DataFieldModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DataFieldModel.FieldType">
      <summary>
            Gets a value indicating data field type.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DataFieldModel.Name">
      <summary>
            Gets or sets the name of the field.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException">If <paramref name="value" /> not is a valid field identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.DataFieldModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.DataFilterModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.DataFilterModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.DataFilterModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.DataFilterModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DataFilterModel.Active">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DataFilterModel.Active</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.DataFilterModel.BuildFilterExpression">
      <summary>
            Builds filter expression to execute.
            </summary>
      <returns>
            A expression to use for filter data
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException"></exception>
    </member>
    <member name="P:iTin.Export.Model.DataFilterModel.Criterial">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DataFilterModel.Criterial</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DataFilterModel.Empty">
      <summary>
            Gets an empty filter.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DataFilterModel.Field">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DataFilterModel.Field</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DataFilterModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DataFilterModel.Key">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DataFilterModel.Key</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.DataFilterModel.SetOwner(iTin.Export.Model.DataFiltersModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.DataFiltersModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="P:iTin.Export.Model.DataFilterModel.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DataFilterModel.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.DataFiltersModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.DataFiltersModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.DataFiltersModel.#ctor(iTin.Export.Model.GlobalResourcesModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.DataFiltersModel" /> class.
            </summary>
      <param name="parent">c.</param>
    </member>
    <member name="M:iTin.Export.Model.DataFiltersModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.DataFiltersModel.GetBy(System.String)">
      <summary>
            Gets a specified condition by name
            </summary>
      <param name="name">Name of condition</param>
      <param name="value">The object to locate in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.</param>
      <returns>
            The condition specified.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.DataFiltersModel.SetOwner(iTin.Export.Model.DataFilterModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.DataFiltersModel.SetOwner(iTin.Export.Model.DataFilterModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.DataFiltersModel.SetOwner(iTin.Export.Model.DataFilterModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.DatetimeDataTypeModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseDataTypeModel" /> class.<br />
            Displays data field as datetime format. You can specify the output culture.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.DatetimeDataTypeModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.DatetimeDataTypeModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.DatetimeDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.DatetimeDataTypeModel.Combine(iTin.Export.Model.DatetimeDataTypeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.DatetimeDataTypeModel.Combine(iTin.Export.Model.DatetimeDataTypeModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.DatetimeDataTypeModel.Error">
      <summary>
            Gets or sets a reference that contains datetime data type error settings.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DatetimeDataTypeModel.Format">
      <summary>
            Gets or sets preferred output date time format.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.DatetimeDataTypeModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DatetimeDataTypeModel.Locale">
      <summary>
            Gets or sets preferred output culture.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.DatetimeErrorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseErrorModel" /> class.<br />
            Represents the error structure for datetime data type. Allows us to set a default value and an additional comment.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.DatetimeErrorModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.DatetimeErrorModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.DatetimeErrorModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.DatetimeErrorModel.Combine(iTin.Export.Model.DatetimeErrorModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.DatetimeErrorModel.Combine(iTin.Export.Model.DatetimeErrorModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.DatetimeErrorModel.DateTimeValue">
      <summary>
            Gets a value that represent the date time value.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DatetimeErrorModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DatetimeErrorModel.Value">
      <summary>
            Gets or sets preferred default value when occurs an error.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.DisabledEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents disabled effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.DisabledEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.DisabledEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.DisabledEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.DisabledEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.DisabledEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.DocumentHeaderFooterModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.DocumentHeaderFooterModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.DocumentHeaderFooterModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.DocumentHeaderFooterModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentHeaderFooterModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentHeaderFooterModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentHeaderFooterModel.Sections">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentHeaderFooterModel.Sections</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.DocumentMetadataModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.DocumentMetadataModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.DocumentMetadataModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.DocumentMetadataModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Author">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Author</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Category">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Category</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Comments">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Comments</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Company">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Company</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Keywords">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Keywords</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Manager">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Manager</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Subject">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Subject</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Title">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Title</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentMetadataModel.Url">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentMetadataModel.Url</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.DocumentModel">
      <summary>
            Includes the description of export table.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.DocumentModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.DocumentModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentModel.Footer">
      <summary>
            Gets or sets a reference to footer document configuration, it allow define margin and data.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentModel.Header">
      <summary>
            Gets or sets a reference to header document configuration, it allow define margin and data.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentModel.Margins">
      <summary>
            Gets or sets a reference to configuration of margins, it allow define top margin, right margin, bottom margin and left margin of a document.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentModel.Metadata">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentModel.Metadata</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.DocumentModel.Orientation">
      <summary>
            Gets or sets the preferred orientation of document.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.DocumentModel.Size">
      <summary>
            Gets or sets the preferred size of document.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.DocumentModel.View">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.DocumentModel.View</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.DownloadBehaviorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseBehaviorModel" /> class.<br />
            Which represents download behavior. Applies only in web mode.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.DownloadBehaviorModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.DownloadBehaviorModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.DownloadBehaviorModel.Default">
      <summary>
            Gets a reference to default behavior.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.DownloadBehaviorModel.ExecuteBehavior(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Code for execute download behavior.
            </summary>
      <param name="writer">The writer.</param>
      <param name="settings">Exporter settings.</param>
    </member>
    <member name="P:iTin.Export.Model.DownloadBehaviorModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.DownloadBehaviorModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup><markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.DownloadBehaviorModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.DownloadBehaviorModel.LocalCopy">
      <summary>
            Gets or sets a value indicating whether saves local copy of this export.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.EmptyLineModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.EmptyLineModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.EmptyLineModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.EmptyLineModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.EmptyLineModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.EmptyLineModel.LineType">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.EmptyLineModel.LineType</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.EmptyLineModel.Merge">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.EmptyLineModel.Merge</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.ExporterModel">
      <summary>
            Defines the type of exporter to use and their behavior.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ExporterModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ExporterModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ExporterModel.Behaviors">
      <summary>
            Gets or sets collection of writer behaviors.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExporterModel.Current">
      <summary>
            Gets or sets a reference to the exporter to be used for export.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExporterModel.ExporterType">
      <summary>
            Gets a value indicating data field type.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExporterModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ExporterModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.ExporterModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.ExportModel">
      <summary>
            Defines an export, includes the description and data table definition to export. 
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ExportModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ExportModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExportModel.BlockLines">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ExportModel.BlockLines</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.ExportModel.BlockLines</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Export/Public/Properties/Property[@name="BlockLines"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ExportModel.Current">
      <summary>
            Gets or sets a value indicating whether this definition is used.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ExportModel.Description">
      <summary>
            Gets or sets the description of the export.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExportModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExportModel.Name">
      <summary>
            Gets or sets name of the export.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <b>null</b>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">If <paramref name="value" /> not is a valid field identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.ExportModel.ParseRelativeFilePath(iTin.Export.Model.KnownRelativeFilePath)">
      <summary>
            Gets a valid full path from a relative path.
            </summary>
      <param name="element">The element.</param>
      <returns>
            The valid full path.
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="M:iTin.Export.Model.ExportModel.ParseRelativeFilePath(System.String)">
      <summary>
            Gets a valid full path from a relative path.
            </summary>
      <param name="relativePath">The relative path to parsed.</param>
      <returns>
            The valid full path.
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ExportModel.Resources">
      <summary>
            Gets a reference to the global resources.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExportModel.Table">
      <summary>
            Gets or sets a reference to the definition of the table to export.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ExportsModel">
      <summary>
             Root element of <strong>iTin Export Engine</strong> configuration file that contains a list with export definition.
             </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ExportsModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ExportsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ExportsModel.GetDefaultPropertyValue``1(System.Type,System.String)">
      <summary>
            Gets the default value for specified property.
            </summary>
      <param name="type">Type containing the property to check.</param>
      <param name="property">Property name.</param>
      <typeparam name="T">Property type</typeparam>
      <returns>
            Property Default.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.ExportsModel.GetRelativeFilePathParsed(iTin.Export.Model.ExportModel,iTin.Export.Model.KnownRelativeFilePath)">
      <summary>
            Gets a valid full path from a relative path.
            </summary>
      <param name="model">Model in which search.</param>
      <param name="element">Element to recover.</param>
      <returns>
            Valid full path.
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="M:iTin.Export.Model.ExportsModel.GetXmlEnumAttributeFromItem(System.Enum)">
      <summary>
            Gets a string containing the attribute value an element <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.
            </summary>
      <param name="item">Element containing the attribute.</param>
      <returns>
            The attribute value of the element.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.ExportsModel.Items">
      <summary>
             Gets or sets collection of export configurations.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExportsModel.References">
      <summary>
            Gets a reference to the assembly references.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ExportsModel.Resources">
      <summary>
             Gets or sets global resources.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ExportsModel.ToString">
      <summary>
            Returns a string that represents the current data type.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.FieldAggregateModel">
      <summary>
            Reference to visual setting of aggregate function of the data field.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.FieldAggregateModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.FieldAggregateModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FieldAggregateModel.AggregateType">
      <summary>
            Gets or sets preferred location in which to add the aggregate.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="M:iTin.Export.Model.FieldAggregateModel.CheckStyleName">
      <summary>
            Performs a test for check if there this name of the style into the user-defined styles list.
            </summary>
      <returns>
        <strong>true</strong> if exist; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldAggregateModel.GetStyle">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.FieldAggregateModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FieldAggregateModel.Location">
      <summary>
            Gets or sets preferred location in which to add the aggregate.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.FieldAggregateModel.Show">
      <summary>
            Gets or sets a value that determines visibility of the element
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.FieldAggregateModel.Style">
      <summary>
            Gets or sets one of the styles defined in the element styles.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">
        <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="P:iTin.Export.Model.FieldAggregateModel.Text">
      <summary>
            Gets or sets preferred text for this aggregate.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FieldAggregateModel.TryGetResourceInformation(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the image resource information.
            </summary>
      <param name="resource">Resource information.</param>
      <returns>
        <strong>true</strong> if exist available information about resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldAggregateModel.TryGetStyle(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <param name="style">A <see cref="T:iTin.Export.Model.StyleModel" /> resource.</param>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.FieldHeaderHyperLink">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.FieldHeaderHyperLink</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderHyperLink.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.FieldHeaderHyperLink" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderHyperLink.CheckStyleName">
      <summary>
            Performs a test for check if there this name of the style into the user-defined styles list.
            </summary>
      <returns>
        <strong>true</strong> if exist; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderHyperLink.Current">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.FieldHeaderHyperLink.Current</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderHyperLink.GetStyle">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderHyperLink.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderHyperLink.Show">
      <summary>
            Gets or sets a value that determines whether displays hyperlink. The default is <see cref="F:iTin.Export.Model.YesNo.No" />.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderHyperLink.Style">
      <summary>
            Gets or sets one of the styles defined in the element styles.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">
        <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderHyperLink.Tooltip">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.FieldHeaderHyperLink.Tooltip</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderHyperLink.TryGetResourceInformation(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the image resource information.
            </summary>
      <param name="resource">Resource information.</param>
      <returns>
        <strong>true</strong> if exist available information about resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderHyperLink.TryGetStyle(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <param name="style">A <see cref="T:iTin.Export.Model.StyleModel" /> resource.</param>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.FieldHeaderModel">
      <summary>
            Reference to visual setting of header of the data field.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.FieldHeaderModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderModel.CheckStyleName">
      <summary>
            Performs a test for check if there this name of the style into the user-defined styles list.
            </summary>
      <returns>
        <strong>true</strong> if exist; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderModel.GetStyle">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderModel.HyperLink">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.FieldHeaderModel.HyperLink</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderModel.Show">
      <summary>
            Gets or sets a value that determines visibility of the element
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.FieldHeaderModel.Style">
      <summary>
            Gets or sets one of the styles defined in the element styles.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">
        <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderModel.TryGetResourceInformation(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the image resource information.
            </summary>
      <param name="resource">Resource information.</param>
      <returns>
        <strong>true</strong> if exist available information about resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldHeaderModel.TryGetStyle(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <param name="style">A <see cref="T:iTin.Export.Model.StyleModel" /> resource.</param>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.FieldsModel">
      <summary>
            Collection of data fields. Each element defines a data field.
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.#ctor(iTin.Export.Model.TableModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.FieldsModel" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.GetBy(System.String)">
      <summary>
            Returns specified field by identifier.
            </summary>
      <param name="value">The field to locate on this collection" /&gt;.</param>
      <returns>
        <b>true</b> if <paramref name="value" /> is found in this collection; otherwise, <b>false</b>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.GetRange(iTin.Export.Model.KnownAggregateLocation)">
      <summary>
            Gets an enumerator to a list of fields that meet the test of being added at the indicated position and this is visible.
            </summary>
      <param name="location">Table position</param>
      <returns>
            Enumerator that contains list of fields that meet the condition and is visible.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.GetRange(iTin.Export.Model.KnownFieldType)">
      <summary>
            Returns an enumerator to a field list containing only those who meet the condition of type.
            </summary>
      <param name="field">Type of the field.</param>
      <returns>
            Enumerator that contains list of fields that meet the condition.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.GetRange(iTin.Export.Model.YesNo)">
      <summary>
            Gets an enumerator to a list of fields that has visible headers.
            </summary>
      <param name="visibleHeaders">Table position</param>
      <returns>
            Enumerator that contains list of fields that has visible headers.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.HasVisibleAggregatesByLocation(iTin.Export.Model.KnownAggregateLocation)">
      <summary>
            Gets a value indicating whether there is a field with a visible aggregate and at specified position.
            </summary>
      <param name="location">Aggregate location</param>
      <returns>
        <strong>true</strong> if there is a field with a visible aggregate and at the specified location; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.HasVisibleHeaders">
      <summary>
            Gets a value indicating whether there are field with a visible header.
            </summary>
      <returns>
        <strong>true</strong> if there are field with a visible header; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.SetOwner(iTin.Export.Model.BaseDataFieldModel)">
      <summary>
            Sets this collection as the owner of the specified item.
            </summary>
      <param name="item">Target item to set owner.</param>
    </member>
    <member name="M:iTin.Export.Model.FieldsModel.Validate">
      <summary>
            Validates the field definition list and the definition of field styles.
            </summary>
      <exception cref="T:iTin.Export.Model.InvalidFieldsDefinitionException">Thrown if there are field definition errors.</exception>
    </member>
    <member name="T:iTin.Export.Model.FieldValueModel">
      <summary>
            Reference to visual setting of value of the data field.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.FieldValueModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.FieldValueModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FieldValueModel.CheckStyleName">
      <summary>
            Performs a test for check if there this name of the style into the user-defined styles list.
            </summary>
      <returns>
        <strong>true</strong> if exist; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldValueModel.GetValue">
      <summary>
            Gets the value.
            </summary>
      <returns>
            The value
            </returns>
    </member>
    <member name="M:iTin.Export.Model.FieldValueModel.GetValue(System.Collections.Generic.IEnumerable{System.Char})">
      <summary>
            Gets the value.
            </summary>
      <param name="specialChars">The special chars.</param>
      <returns>
            The value
            </returns>
    </member>
    <member name="P:iTin.Export.Model.FieldValueModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FieldValueModel.Show">
      <summary>
            Gets or sets a value that determines visibility of the element.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.FieldValueModel.Style">
      <summary>
            Gets or sets one of the styles defined in the element styles.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">
        <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.FieldValueModel.TryGetStyle(iTin.Export.Model.StyleModel@)">
      <summary>
            Gets a reference to the <see cref="T:iTin.Export.Model.StyleModel" /> from global resources.
            </summary>
      <param name="style">A <see cref="T:iTin.Export.Model.StyleModel" /> resource.</param>
      <returns>
        <strong>true</strong> if returns the style from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.FilterModel">
      <summary>
            Reference to set of properties that allow you to specify a writer.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.FilterModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.FilterModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FilterModel.Author">
      <summary>
            Gets or sets the author of writer. Select * for any author.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FilterModel.Company">
      <summary>
            Gets or sets the company name of the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FilterModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FilterModel.Path">
      <summary>
            Gets or sets the path where is located the writer.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidPathNameException">If <paramref name="value" /> is an invalid path name.</exception>
    </member>
    <member name="P:iTin.Export.Model.FilterModel.Version">
      <summary>
            Gets or sets the version of the writer.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FilterModel.WriterStyles">
      <summary>
             Gets a value that represents the different attributes defined for a writer.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.FixedFieldModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseDataFieldModel" /> class.<br />
            Represents a piece of a field fixed-width data.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.FixedFieldModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.FixedFieldModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.FixedFieldModel.FieldType">
      <summary>
            Gets a value indicating data field type.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FixedFieldModel.Piece">
      <summary>
            Gets or sets name of the piece.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">If <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="P:iTin.Export.Model.FixedFieldModel.Pieces">
      <summary>
            Gets or sets the name of the field.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">If <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.FixedFieldModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.FixedItemModel">
      <summary>
            Contains a collection of pieces. Each element is a new collection of smaller fields resulting from splitting a reference field.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.FixedItemModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.FixedItemModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.FixedItemModel.DataSource">
      <summary>
            Gets or sets a reference to source data of pieces.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FixedItemModel.Name">
      <summary>
            Gets or sets the name of the pieces.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">If <paramref name="value" /> not is a valid identifier.</exception>
    </member>
    <member name="P:iTin.Export.Model.FixedItemModel.Pieces">
      <summary>
            Gets or sets collection of smaller fields resulting from splitting a reference field.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FixedItemModel.Reference">
      <summary>
            Gets or sets the name of the reference field.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException">If <paramref name="value" /> not is a valid field identifier.</exception>
    </member>
    <member name="M:iTin.Export.Model.FixedItemModel.SetOwner(iTin.Export.Model.FixedModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.FixedModel" />.
            </summary>
      <param name="own">Reference to owner.</param>
    </member>
    <member name="M:iTin.Export.Model.FixedItemModel.ToDictionary">
      <summary>
            Returns a dictionary of <see cref="T:System.String" />/<see cref="T:System.String" /> pairs containing the name of the piece and its value.
            </summary>
      <returns>
            A dictionary of <see cref="T:System.String" />/<see cref="T:System.String" /> pairs containing the name of the piece and its value.
            </returns>
      <exception cref="T:System.ArgumentNullException">Thrown if <see cref="P:iTin.Export.Model.FixedItemModel.DataSource" /> property is <strong>null</strong>.</exception>
    </member>
    <member name="M:iTin.Export.Model.FixedItemModel.ToString">
      <summary>
            Returns a string that represents the current data type.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.FixedModel">
      <summary>
            Collection of user-defined pieces. Each element is a collection of smaller pieces result of splitting the reference field.
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.FixedModel.#ctor(iTin.Export.Model.GlobalResourcesModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.FixedModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.FixedModel.#ctor(iTin.Export.Model.GlobalResourcesModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.FixedModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.FixedModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.FixedModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.FixedModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.FixedModel.SetOwner(iTin.Export.Model.FixedItemModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.FixedModel.SetOwner(iTin.Export.Model.FixedItemModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.FixedModel.SetOwner(iTin.Export.Model.FixedItemModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.FlipModel">
      <summary>
            Flip mode for an image.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FlipModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.FlipModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FlipModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.FlipModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.FlipModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.FlipModel.Mode">
      <summary>
            Gets or sets preferred flip style to apply to an image.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.FontModel">
      <summary>
            Represents a font. Defines a particular format for text, including font face, size, and style attributes.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FontModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.FontModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FontModel.Bold">
      <summary>
            Gets or sets a value indicating whether bold style is applied for this font.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FontModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.FontModel.Color">
      <summary>
            Gets or sets preferred font color.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FontModel.Combine(iTin.Export.Model.FontModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.FontModel.Combine(iTin.Export.Model.FontModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.FontModel.Default">
      <summary>
            Gets default font.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FontModel.FontStyles">
      <summary>
            Gets a value that represents the different styles defined for this font.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FontModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure preferred for this font.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.FontModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FontModel.Italic">
      <summary>
            Gets or sets a value indicating whether italic style is applied for this font.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FontModel.Name">
      <summary>
            Gets or sets preferred font name.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.FontModel.Size">
      <summary>
            Gets or sets preferred font size.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.FontModel.ToFont">
      <summary>
            Gets a reference to native .NET font representing the font model
            </summary>
      <returns>
            Native .NET font representing the font model
            </returns>
    </member>
    <member name="P:iTin.Export.Model.FontModel.Underline">
      <summary>
            Gets or sets a value indicating whether the underline style is applied for this font.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.GapFieldModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseDataFieldModel" /> class.<br />
            Represents an empty data field.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GapFieldModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GapFieldModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.GapFieldModel.CanSetData">
      <summary>
            Gets a value indicating whether current data field supports data.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GapFieldModel.FieldType">
      <summary>
            Gets a value indicating data field type.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.GlobalResourcesModel">
      <summary>
            Includes the description and data table definition to export. 
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GlobalResourcesModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GlobalResourcesModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.Conditions">
      <summary>
            Gets or sets the collection of user-defined conditions.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.Filters">
      <summary>
            Gets or sets the collection of user-defined filters.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.Fixed">
      <summary>
            Gets or sets collection of user-defined pieces.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.GlobalResourcesModel.GetImageResourceByKey(System.String)">
      <summary>
            Gets specified image resource by key.
            </summary>
      <param name="key">Key of resource.</param>
      <returns>
            A <see cref="T:iTin.Export.Model.ImageModel" /> which contains specified image resource.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.GlobalResourcesModel.GetResourceByKey(System.String)">
      <summary>
            Gets specified resource by key.
            </summary>
      <param name="key">Key of resource.</param>
      <returns>
            An <see cref="T:System.Object" /> which contains specified resource.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.GlobalResourcesModel.GetStyleResourceByName(System.String)">
      <summary>
            Gets specified style resource by name.
            </summary>
      <param name="name">Name of style.</param>
      <returns>
            A <see cref="T:iTin.Export.Model.StyleModel" /> which contains specified style resource.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.Groups">
      <summary>
            Gets or sets collection of user-defined groups.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.Hosts">
      <summary>
            Gets or sets collection of user-defined groups.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.Images">
      <summary>
            Gets or sets the collection of user-defined styles.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.Lines">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.GlobalResourcesModel.Lines</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.GlobalResourcesModel.Lines</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Lines"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.GlobalResourcesModel.Styles">
      <summary>
            Gets or sets the collection of user-defined styles.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.GrayScaleBlueEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents gray-scale blue effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GrayScaleBlueEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GrayScaleBlueEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.GrayScaleBlueEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.GrayScaleBlueEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.GrayScaleBlueEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.GrayScaleEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents gray-scale effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GrayScaleEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GrayScaleEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.GrayScaleEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.GrayScaleEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.GrayScaleEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.GrayScaleGreenEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents gray-scale green effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GrayScaleGreenEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GrayScaleGreenEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.GrayScaleGreenEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.GrayScaleGreenEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.GrayScaleGreenEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.GrayScaleRedEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents gray-scale red effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GrayScaleRedEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GrayScaleRedEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.GrayScaleRedEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.GrayScaleRedEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.GrayScaleRedEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.GroupFieldModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.DataFieldModel" /> class.<br />
            Represents a field as union of several data field.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GroupFieldModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GroupFieldModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.GroupFieldModel.FieldType">
      <summary>
            Gets a value indicating data field type.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.GroupFieldModel.GetSeparatorChar(System.String)">
      <summary>
            Returns separator char.
            </summary>
      <param name="separator">Separator text.</param>
      <returns>
            A value than represents separator char.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.GroupFieldModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.GroupItemModel">
      <summary>
            Defines field name and a field separator of a group item.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GroupItemModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.GroupItemModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GroupItemModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GroupItemModel.Name">
      <summary>
            Gets or sets the name of the field.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException">If <paramref name="value" /> not is a valid field identifier name.</exception>
    </member>
    <member name="P:iTin.Export.Model.GroupItemModel.Separator">
      <summary>
             Gets or sets the field separator.
             </summary>
    </member>
    <member name="M:iTin.Export.Model.GroupItemModel.SetOwner(iTin.Export.Model.GroupModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.GroupItemModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="M:iTin.Export.Model.GroupItemModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.GroupModel">
      <summary>
            Contains a collection of field names. Each element is result of the union of a field list.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GroupModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GroupModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.GroupModel.Fields">
      <summary>
             Gets or sets collection of fields contained within the group.
             </summary>
    </member>
    <member name="P:iTin.Export.Model.GroupModel.Multiline">
      <summary>
            Gets a value indicating whether this is a multiline field. 
            </summary>
    </member>
    <member name="P:iTin.Export.Model.GroupModel.Name">
      <summary>
             Gets or sets the name of the group.
             </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException">If <paramref name="value" /> not is a valid field identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.GroupModel.SetOwner(iTin.Export.Model.GroupsModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.GroupModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="T:iTin.Export.Model.GroupsModel">
      <summary>
            Userdefined groups.
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.GroupsModel.#ctor(iTin.Export.Model.GlobalResourcesModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.GroupsModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.GroupsModel.#ctor(iTin.Export.Model.GlobalResourcesModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.GroupsModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.GroupsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.GroupsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.GroupsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.GroupsModel.SetOwner(iTin.Export.Model.GroupModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.GroupsModel.SetOwner(iTin.Export.Model.GroupModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.GroupsModel.SetOwner(iTin.Export.Model.GroupModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.HeaderFooterSectionModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.HeaderFooterSectionModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.HeaderFooterSectionModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.HeaderFooterSectionModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.HeaderFooterSectionModel.Alignment">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.HeaderFooterSectionModel.Alignment</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.HeaderFooterSectionModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.HeaderFooterSectionModel.SetOwner(iTin.Export.Model.HeaderFooterSectionsModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.HeaderFooterSectionModel.SetOwner(iTin.Export.Model.HeaderFooterSectionsModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.HeaderFooterSectionModel.SetOwner(iTin.Export.Model.HeaderFooterSectionsModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.HeaderFooterSectionModel.Text">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.HeaderFooterSectionModel.Text</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.HeaderFooterSectionModel.Type">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.HeaderFooterSectionModel.Type</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.HeaderFooterSectionsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.HeaderFooterSectionsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.HeaderFooterSectionsModel.#ctor(iTin.Export.Model.DocumentHeaderFooterModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.HeaderFooterSectionsModel" /> class.
            </summary>
      <param name="parent">c.</param>
    </member>
    <member name="M:iTin.Export.Model.HeaderFooterSectionsModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.HeaderFooterSectionsModel.GetBy(System.String)">
      <summary>
            Gets a specified condition by name
            </summary>
      <param name="name">Name of condition</param>
      <param name="value">The object to locate in the <see cref="T:iTin.Export.Model.BaseSimpleModelCollection`2" />.</param>
      <returns>
            The condition specified.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.HeaderFooterSectionsModel.SetOwner(iTin.Export.Model.HeaderFooterSectionModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.HeaderFooterSectionsModel.SetOwner(iTin.Export.Model.HeaderFooterSectionModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.HeaderFooterSectionsModel.SetOwner(iTin.Export.Model.HeaderFooterSectionModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.HostModel">
      <summary>
            Includes the description of export table.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.HostModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.HostModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.HostModel.Document">
      <summary>
            Gets or sets a reference to document configuration, it allow define size, orientation and margins.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.HostModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.HostModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.HostModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.HostModel.Key">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.HostModel.Key</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.HostModel.SetOwner(iTin.Export.Model.HostsModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.HostModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="T:iTin.Export.Model.HostsModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseComplexModelCollection{TItem, TParent, TSearch}" /> class.<br />.
            Which acts as the base class for nodes of model which are of collection type
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.HostsModel.#ctor(iTin.Export.Model.GlobalResourcesModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.HostsModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent"></param>
    </member>
    <member name="M:iTin.Export.Model.HostsModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.HostsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.HostsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.HostsModel.SetOwner(iTin.Export.Model.HostModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.HostsModel.SetOwner(iTin.Export.Model.HostModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item"></param>
    </member>
    <member name="T:iTin.Export.Model.IBehavior">
      <summary>
            Declares a generic behavior to use to with an exporter.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.IBehavior.CanExecute">
      <summary>
            Gets a value indicating whether executes behavior.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.IBehavior.Execute(iTin.Export.ComponentModel.Writer.IWriter)">
      <summary>
            Execute behavior.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.IBehavior.Execute(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Execute behavior.
            </summary>
      <param name="writer">The writer.</param>
      <param name="settings">Exporter settings.</param>
    </member>
    <member name="P:iTin.Export.Model.IBehavior.Owner">
      <summary>
            Gets the element that owns this data field.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.IBehavior.SetOwner(iTin.Export.Model.BehaviorsModel)">
      <summary>
            Sets a reference to the owner object that contains this instance.
            </summary>
      <param name="reference">Owner reference.</param>
    </member>
    <member name="T:iTin.Export.Model.ICondition">
      <summary>
            Declares a generic condition to use.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ICondition.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="row">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>row</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="col">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </summary>
      <param name="row">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>row</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="col">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="target">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.ICondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.ImageModel">
      <summary>
            Includes definition for a font type, type of content, such as the background color, the alignment type and the data type.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ImageModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ImageModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ImageModel.Effects">
      <summary>
            Gets or sets collection of image effects.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ImageModel.Flip">
      <summary>
            Gets or sets the flip.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ImageModel.GetImage(iTin.Export.Model.ExportModel)">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Image" /> object that contains modified image.
            </summary>
      <param name="model">The model.</param>
      <returns>
            A <see cref="T:System.Drawing.Image" /> object that represents modified image.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.ImageModel.GetOriginalImage(iTin.Export.Model.ExportModel)">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Image" /> object that contains original image.
            </summary>
      <param name="model">The model.</param>
      <returns>
            A <see cref="T:System.Drawing.Image" /> object that represents original image.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.ImageModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ImageModel.Key">
      <summary>
            Gets or sets the key of image resource.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">
        <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="P:iTin.Export.Model.ImageModel.Path">
      <summary>
            Gets or sets the image file path.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidFileNameException">If <paramref name="value" /> is an invalid filename.</exception>
    </member>
    <member name="M:iTin.Export.Model.ImageModel.SetOwner(iTin.Export.Model.ImagesModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.ImagesModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="T:iTin.Export.Model.ImagesModel">
      <summary>
             Contains a collection of user-defined styles. Each element includes definition for a font type, type of content, such as the background color, the alignment type and the data type.
             </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ImagesModel.#ctor(iTin.Export.Model.GlobalResourcesModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ImagesModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.ImagesModel.#ctor(iTin.Export.Model.GlobalResourcesModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.ImagesModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ImagesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.ImagesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.ImagesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.ImagesModel.SetOwner(iTin.Export.Model.ImageModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ImagesModel.SetOwner(iTin.Export.Model.ImageModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.ImagesModel.SetOwner(iTin.Export.Model.ImageModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.InvalidFieldIdentifierNameException">
      <summary>
            This class represents the exception that is thrown when the field identifier in export model is invalid.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldIdentifierNameException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldIdentifierNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException" /> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldIdentifierNameException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldIdentifierNameException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldIdentifierNameException.#ctor(System.Text.StringBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:iTin.Export.Model.InvalidFieldsDefinitionException">
      <summary>
            This class represents the exception that is thrown when the field identifier in export model is invalid.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldsDefinitionException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldsDefinitionException" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldsDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldsDefinitionException" /> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldsDefinitionException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldsDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldsDefinitionException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldsDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFieldsDefinitionException.#ctor(System.Text.StringBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFieldsDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:iTin.Export.Model.InvalidFileNameException">
      <summary>
            This class represents the exception that is thrown when the filename in export model is invalid.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidFileNameException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFileNameException" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidFileNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFileNameException" /> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFileNameException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFileNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFileNameException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFileNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidFileNameException.#ctor(System.Text.StringBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidFileNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:iTin.Export.Model.InvalidIdentifierNameException">
      <summary>
            This class represents the exception that is thrown when the identifier in export model is invalid.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidIdentifierNameException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidIdentifierNameException" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidIdentifierNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidIdentifierNameException" /> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidIdentifierNameException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidIdentifierNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidIdentifierNameException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidIdentifierNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidIdentifierNameException.#ctor(System.Text.StringBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidIdentifierNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:iTin.Export.Model.InvalidPathNameException">
      <summary>
            This class represents the exception that is thrown when the path in export model is invalid.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidPathNameException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidPathNameException" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidPathNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidPathNameException" /> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidPathNameException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidPathNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidPathNameException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidPathNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidPathNameException.#ctor(System.Text.StringBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidPathNameException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:iTin.Export.Model.InvalidSeriesDefinitionException">
      <summary>
            This class represents the exception that is thrown when the serie field or axis in export model is invalid.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidSeriesDefinitionException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidSeriesDefinitionException" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidSeriesDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidSeriesDefinitionException" /> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidSeriesDefinitionException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidSeriesDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidSeriesDefinitionException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidSeriesDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidSeriesDefinitionException.#ctor(System.Text.StringBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidSeriesDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:iTin.Export.Model.InvalidStylesDefinitionException">
      <summary>
            This class represents the exception that is thrown when the style identifier in export model is invalid.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidStylesDefinitionException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidStylesDefinitionException" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.InvalidStylesDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidStylesDefinitionException" /> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidStylesDefinitionException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidStylesDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidStylesDefinitionException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidStylesDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<strong>Nothing</strong> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:iTin.Export.Model.InvalidStylesDefinitionException.#ctor(System.Text.StringBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.InvalidStylesDefinitionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:iTin.Export.Model.KnownAggregateLocation">
      <summary>
            Specifies known locations for aggregate functions
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateLocation.Top">
      <summary>
            This aggregate is vertically aligned at the top.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateLocation.Bottom">
      <summary>
            This aggregate is vertically aligned at the bottom.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownAggregateType">
      <summary>
            Specifies the known aggregate types.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateType.None">
      <summary>
            None aggregate
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateType.Average">
      <summary>
            Average aggregate
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateType.Count">
      <summary>
            Count aggregate
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateType.Max">
      <summary>
            Max aggregate
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateType.Min">
      <summary>
            Min aggregate
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateType.Sum">
      <summary>
            Sum aggregate
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAggregateType.Text">
      <summary>
            Custom text
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownAxisOrientation">
      <summary>
            Specifies the orientation of titles on the axis.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAxisOrientation.Downward">
      <summary>
            The orientation is downward.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAxisOrientation.Horizontal">
      <summary>
            The orientation is horizontal.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAxisOrientation.Upward">
      <summary>
            The orientation is upward.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownAxisOrientation.Vertical">
      <summary>
            The orientation is vertical.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownBasicColor">
      <summary>
            Specifies known primary system colors.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBasicColor.Black">
      <summary>
            Gets a system-defined color that has an RGB value of #000000.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBasicColor.Blue">
      <summary>
            Gets a system-defined color that has an RGB value of #0000FF.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBasicColor.Green">
      <summary>
            Gets a system-defined color that has an RGB value of #00FF00.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBasicColor.Cyan">
      <summary>
            Gets a system-defined color that has an RGB value of #00FFFF.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBasicColor.Red">
      <summary>
            Gets a system-defined color that has an RGB value of #FF0000.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBasicColor.Magenta">
      <summary>
            Gets a system-defined color that has an RGB value of #FF00FF.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBasicColor.Yellow">
      <summary>
            Gets a system-defined color that has an RGB value of #FFFF00.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBasicColor.White">
      <summary>
            Gets a system-defined color that has an RGB value of #FFFFFF.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownBorderLineStyle">
      <summary>
            Specifies the known style lines.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderLineStyle.None">
      <summary>
            No border.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderLineStyle.Continuous">
      <summary>
            Continuous line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderLineStyle.Dash">
      <summary>
            Dashed line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderLineStyle.DashDot">
      <summary>
            Dash-Dot line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderLineStyle.DashDotDot">
      <summary>
            Dash-Dot-Dot line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderLineStyle.Dot">
      <summary>
            Dot line.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownBorderPosition">
      <summary>
            Specifies known border positions
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderPosition.Left">
      <summary>
            Left border.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderPosition.Top">
      <summary>
            Top border.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderPosition.Right">
      <summary>
            Right border.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderPosition.Bottom">
      <summary>
            Bottom border.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderPosition.DiagonalLeft">
      <summary>
            Diagonal-left border.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownBorderPosition.DiagonalRight">
      <summary>
            Diagonal-right border.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownChartType">
      <summary>
            Specifies known chart types.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Bars">
      <summary>
            The bars
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Bars3D">
      <summary>
            The bars
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Columns">
      <summary>
            The bars
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.XYScatter">
      <summary>
            The XY scatter
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Radar">
      <summary>
            The radar
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Doughnut">
      <summary>
            The doughnut
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Pie3D">
      <summary>
            The pie 3D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Line3D">
      <summary>
            The line 3D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Column3D">
      <summary>
            The bars
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Area3D">
      <summary>
            The bars
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Area">
      <summary>
            The bars
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Line">
      <summary>
            The line
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Pie">
      <summary>
            The pie
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Bubble">
      <summary>
            The bubble
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ColumnClustered">
      <summary>
            The column clustered
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ColumnStacked">
      <summary>
            The column stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ColumnStacked100">
      <summary>
            The column stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ColumnClustered3D">
      <summary>
            The column clustered3 D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ColumnStacked3D">
      <summary>
            The column stacked3 D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ColumnStacked1003D">
      <summary>
            The column stacked1003 D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.BarClustered">
      <summary>
            The bar clustered
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.BarStacked">
      <summary>
            The bar stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.BarStacked100">
      <summary>
            The bar stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.BarClustered3D">
      <summary>
            The bar clustered3 D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.BarStacked3D">
      <summary>
            The bar stacked3 D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.BarStacked1003D">
      <summary>
            The bar stacked1003 D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.LineStacked">
      <summary>
            The line stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.LineStacked100">
      <summary>
            The line stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.LineMarkers">
      <summary>
            The line markers
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.LineMarkersStacked">
      <summary>
            The line markers stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.LineMarkersStacked100">
      <summary>
            The line markers stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PieOfPie">
      <summary>
            The pie of pie
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PieExploded">
      <summary>
            The pie exploded
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PieExploded3D">
      <summary>
            The pie exploded 3D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.BarOfPie">
      <summary>
            The bar of pie
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.XYScatterSmooth">
      <summary>
            The XY scatter smooth
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.XYScatterSmoothNoMarkers">
      <summary>
            The XY scatter smooth no markers
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.XYScatterLines">
      <summary>
            The XY scatter lines
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.XYScatterLinesNoMarkers">
      <summary>
            The XY scatter lines no markers
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.AreaStacked">
      <summary>
            The area stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.AreaStacked100">
      <summary>
            The area stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.AreaStacked3D">
      <summary>
            The area stacked3 D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.AreaStacked1003D">
      <summary>
            The area stacked1003 D
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.DoughnutExploded">
      <summary>
            The doughnut exploded
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.RadarMarkers">
      <summary>
            The radar markers
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.RadarFilled">
      <summary>
            The radar filled
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Surface">
      <summary>
            The surface
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.SurfaceWireframe">
      <summary>
            The surface wireframe
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.SurfaceTopView">
      <summary>
            The surface top view
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.SurfaceTopViewWireframe">
      <summary>
            The surface top view wireframe
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.Bubble3DEffect">
      <summary>
            The bubble3 D effect
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.StockHLC">
      <summary>
            The stock HLC
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.StockOHLC">
      <summary>
            The stock OHLC
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.StockVHLC">
      <summary>
            The stock VHLC
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.StockVOHLC">
      <summary>
            The stock VOHLC
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.CylinderColClustered">
      <summary>
            The cylinder col clustered
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.CylinderColStacked">
      <summary>
            The cylinder col stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.CylinderColStacked100">
      <summary>
            The cylinder col stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.CylinderBarClustered">
      <summary>
            The cylinder bar clustered
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.CylinderBarStacked">
      <summary>
            The cylinder bar stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.CylinderBarStacked100">
      <summary>
            The cylinder bar stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.CylinderCol">
      <summary>
            The cylinder col
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ConeColClustered">
      <summary>
            The cone col clustered
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ConeColStacked">
      <summary>
            The cone col stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ConeColStacked100">
      <summary>
            The cone col stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ConeBarClustered">
      <summary>
            The cone bar clustered
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ConeBarStacked">
      <summary>
            The cone bar stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ConeBarStacked100">
      <summary>
            The cone bar stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.ConeCol">
      <summary>
            The cone col
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PyramidColClustered">
      <summary>
            The pyramid col clustered
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PyramidColStacked">
      <summary>
            The pyramid col stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PyramidColStacked100">
      <summary>
            The pyramid col stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PyramidBarClustered">
      <summary>
            The pyramid bar clustered
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PyramidBarStacked">
      <summary>
            The pyramid bar stacked
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PyramidBarStacked100">
      <summary>
            The pyramid bar stacked100
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartType.PyramidCol">
      <summary>
            The pyramid col
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownChartTypes">
      <summary>
            Specifies data field type.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartTypes.ChartType">
      <summary>
            Chart, please see <see cref="T:iTin.Export.Model.ChartModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownChartTypes.MiniChartType">
      <summary>
            Mini-Chart, please see <see cref="T:iTin.Export.Model.MiniChartModel" /> for more information.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownCulture">
      <summary>
            Known cultures.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.Current">
      <summary>
            Current culture
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.af">
      <summary>
            Afrikaans
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.afZA">
      <summary>
            Afrikaans (South Africa)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.am">
      <summary>
            Amharic
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.amET">
      <summary>
            Amharic (Ethiopia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ar">
      <summary>
            Arabic
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arSA">
      <summary>
            Arabic (Saudi Arabia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arIQ">
      <summary>
            Arabic (Iraq)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arEG">
      <summary>
            Arabic (Egypt)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arLY">
      <summary>
            Arabic (Libya)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arDZ">
      <summary>
            Arabic (Algeria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arMA">
      <summary>
            Arabic (Morocco)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arTN">
      <summary>
            Arabic (Tunisia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arOM">
      <summary>
            Arabic (Oman)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arYE">
      <summary>
            Arabic (Yemen)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arSY">
      <summary>
            Arabic (Syria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arJO">
      <summary>
            Arabic (Jordan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arLB">
      <summary>
            Arabic (Lebanon)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arKW">
      <summary>
            Arabic (Kuwait)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arAE">
      <summary>
            Arabic (U.A.E.)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arBH">
      <summary>
            Arabic (Bahrain)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arQA">
      <summary>
            Arabic (Qatar)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arn">
      <summary>
            Mapudungun
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.arnCL">
      <summary>
            Mapudungun (Chile)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.as">
      <summary>
            Assamese
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.asIN">
      <summary>
            Assamese (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.az">
      <summary>
            Azeri
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.azLatnAZ">
      <summary>
            Azeri (Latin, Azerbaijan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.azCyrlAZ">
      <summary>
            Azeri (Cyrillic, Azerbaijan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.azCyrl">
      <summary>
            Azeri (Cyrillic)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.azLatn">
      <summary>
            Azeri (Latin)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ba">
      <summary>
            Bashkir
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.baRU">
      <summary>
            Bashkir (Russia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.be">
      <summary>
            Belarusian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.beBY">
      <summary>
            Belarusian (Belarus)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bg">
      <summary>
            Bulgarian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bgBG">
      <summary>
            Bulgarian (Bulgaria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bn">
      <summary>
            Bengali
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bnIN">
      <summary>
            Bengali (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bnBD">
      <summary>
            Bengali (Bangladesh)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bo">
      <summary>
            Tibetan
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.boCN">
      <summary>
            Tibetan (PRC)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.br">
      <summary>
            Breton
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.brFR">
      <summary>
            Breton (France)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bsLatnBA">
      <summary>
            Bosnian (Latin, Bosnia and Herzegovina)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bsCyrlBA">
      <summary>        
            Bosnian (Cyrillic, Bosnia and Herzegovina)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bsCyrl">
      <summary>
            Bosnian (Cyrillic)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bsLatn">
      <summary>
            Bosnian (Latin)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.bs">
      <summary>
            Bosnian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ca">
      <summary>
            Catalan
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.caES">
      <summary>
            Catalan (Catalan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.co">
      <summary>
            Corsican
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.coFR">
      <summary>
            Corsican (France)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.cs">
      <summary>
            Czech
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.csCZ">
      <summary>
            Czech (Czech Republic)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.cy">
      <summary>
            Welsh
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.cyGB">
      <summary>
            Welsh (United Kingdom)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.da">
      <summary>
            Danish
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.daDK">
      <summary>
            Danish (Denmark)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.de">
      <summary>
            German
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.deDE">
      <summary>
            German (Germany)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.deCH">
      <summary>
            German (Switzerland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.deAT">
      <summary>
            German (Austria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.deLU">
      <summary>
            German (Luxembourg)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.deLI">
      <summary>
            German (Liechtenstein)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.dsbDE">
      <summary>
            Lower Sorbian (Germany)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.dsb">
      <summary>
            Lower Sorbian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.dv">
      <summary>
            Divehi
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.dvMV">
      <summary>
            Divehi (Maldives)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.el">
      <summary>
            Greek
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.elGR">
      <summary>
            Greek (Greece)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.en">
      <summary>
            English
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enUS">
      <summary>
            English (United States)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enGB">
      <summary>
            English (United Kingdom)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enAU">
      <summary>
            English (Australia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enCA">
      <summary>
            English (Canada)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enNZ">
      <summary>
            English (New Zealand)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enIE">
      <summary>
            English (Ireland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enZA">
      <summary>
            English (South Africa)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enJM">
      <summary>
            English (Jamaica)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.en029">
      <summary>
            English (Caribbean)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enBZ">
      <summary>
            English (Belize)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enTT">
      <summary>
            English (Trinidad and Tobago)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enZW">
      <summary>
            English (Zimbabwe)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enPH">
      <summary>
            English (Republic of the Philippines)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enIN">
      <summary>
            English (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enMY">
      <summary>
            English (Malaysia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.enSG">
      <summary>
            English (Singapore)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.es">
      <summary>
            Spanish
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esMX">
      <summary>
            Spanish (Mexico)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esES">
      <summary>
            Spanish (Spain, International Sort)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esGT">
      <summary>
            Spanish (Guatemala)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esCR">
      <summary>
            Spanish (Costa Rica)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esPA">
      <summary>
            Spanish (Panama)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esDO">
      <summary>
            Spanish (Dominican Republic)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esVE">
      <summary>
            Spanish (Bolivarian Republic of Venezuela)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esCO">
      <summary>
            Spanish (Colombia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esPE">
      <summary>
            Spanish (Peru)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esAR">
      <summary>
            Spanish (Argentina)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esEC">
      <summary>
            Spanish (Ecuador)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esCL">
      <summary>
            Spanish (Chile)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esUY">
      <summary>
            Spanish (Uruguay)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esPY">
      <summary>
            Spanish (Paraguay)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esBO">
      <summary>
            Spanish (Bolivia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esSV">
      <summary>
            Spanish (El Salvador)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esHN">
      <summary>
            Spanish (Honduras)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esNI">
      <summary>
            Spanish (Nicaragua)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esPR">
      <summary>
            Spanish (Puerto Rico)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.esUS">
      <summary>
            Spanish (United States)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.et">
      <summary>
            Estonian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.etEE">
      <summary>
            Estonian (Estonia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.eu">
      <summary>
            Basque
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.euES">
      <summary>
            Basque (Basque)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.fa">
      <summary>
            Persian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.faIR">
      <summary>
            Persian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.fi">
      <summary>
            Finnish
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.fiFI">
      <summary>
            Finnish (Finland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.fil">
      <summary>
            Filipino
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.filPH">
      <summary>
            Filipino (Philippines)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.fo">
      <summary>
            Faroese
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.foFO">
      <summary>
            Faroese (Faroe Islands)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.fr">
      <summary>
            French
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.frFR">
      <summary>
            French (France)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.frBE">
      <summary>
            French (Belgium)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.frCA">
      <summary>
            French (Canada)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.frCH">
      <summary>
            French (Switzerland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.frLU">
      <summary>
            French (Luxembourg)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.frMC">
      <summary>
            French (Monaco)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.fy">
      <summary>
            Frisian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.fyNL">
      <summary>
            Frisian (Netherlands)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ga">
      <summary>
            Irish
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.gaIE">
      <summary>
            Irish (Ireland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.gd">
      <summary>
            Scottish Gaelic
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.gdGB">
      <summary>
            Scottish Gaelic (United Kingdom)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.gl">
      <summary>
            Galician
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.glES">
      <summary>
            Galician (Galician)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.gsw">
      <summary>
            Alsatian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.gswFR">
      <summary>
            Alsatian (France)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.gu">
      <summary>
            Gujarati
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.guIN">
      <summary>
            Gujarati (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ha">
      <summary>
            Hausa
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.haLatnNG">
      <summary>
            Hausa (Latin, Nigeria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.haLatn">
      <summary>
            Hausa (Latin)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.he">
      <summary>
            Hebrew
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.heIL">
      <summary>
            Hebrew (Israel)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hi">
      <summary>
            Hindi
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hiIN">
      <summary>
            Hindi (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hr">
      <summary>
            Croatian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hrHR">
      <summary>
            Croatian (Croatia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hrBA">
      <summary>
            Croatian (Latin, Bosnia and Herzegovina)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hsb">
      <summary>
            Upper Sorbian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hsbDE">
      <summary>
            Upper Sorbian (Germany)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hu">
      <summary>
            Hungarian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.huHU">
      <summary>
            Hungarian (Hungary)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hy">
      <summary>
            Armenian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.hyAM">
      <summary>
            Armenian (Armenia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.id">
      <summary>
            Indonesian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.idID">
      <summary>
            Indonesian (Indonesia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ig">
      <summary>
            Igbo
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.igNG">
      <summary>
            Igbo (Nigeria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ii">
      <summary>
            Yi
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.iiCN">
      <summary>
            Yi (PRC)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.is">
      <summary>
            Icelandic
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.isIS">
      <summary>
            Icelandic (Iceland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.it">
      <summary>
            Italian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.itIT">
      <summary>
            Italian (Italy)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.itCH">
      <summary>
            Italian (Switzerland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.iu">
      <summary>
            Inuktitut
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.iuCansCA">
      <summary>
            Inuktitut (Syllabics, Canada)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.iuLatnCA">
      <summary>
            Inuktitut (Latin, Canada)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.iuCans">
      <summary>
            Inuktitut (Syllabics)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.iuLatn">
      <summary>
            Inuktitut (Latin)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ja">
      <summary>
            Japanese
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.jaJP">
      <summary>
            Japanese (Japan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ka">
      <summary>
            Georgian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kaGE">
      <summary>
            Georgian (Georgia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kk">
      <summary>
            Kazakh
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kkKZ">
      <summary>
            Kazakh (Kazakhstan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kl">
      <summary>
            Greenlandic
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.klGL">
      <summary>
            Greenlandic (Greenland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.km">
      <summary>
            Khmer
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kmKH">
      <summary>
            Khmer (Cambodia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kn">
      <summary>
            Kannada
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.knIN">
      <summary>
            Kannada (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ko">
      <summary>
            Korean
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.koKR">
      <summary>
            Korean (Korea)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kok">
      <summary>
            Konkani
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kokIN">
      <summary>
            Konkani (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ky">
      <summary>
            Kyrgyz
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.kyKG">
      <summary>
            Kyrgyz (Kyrgyzstan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.lb">
      <summary>
            Luxembourgish
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.lbLU">
      <summary>
            Luxembourgish (Luxembourg)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.lo">
      <summary>
            Lao
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.loLA">
      <summary>
            Lao (Lao P.D.R.)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.lt">
      <summary>
            Lithuanian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ltLT">
      <summary>
            Lithuanian (Lithuania)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.lv">
      <summary>
            Latvian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.lvLV">
      <summary>
            Latvian (Latvia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mi">
      <summary>
            Maori
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.miNZ">
      <summary>
            Maori (New Zealand)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mk">
      <summary>
            Macedonian (FYROM)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mkMK">
      <summary>
            Macedonian (Former Yugoslav Republic of Macedonia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ml">
      <summary>
            Malayalam
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mlIN">
      <summary>
            Malayalam (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mn">
      <summary>
            Mongolian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mnMN">
      <summary>
            Mongolian (Cyrillic, Mongolia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mnMongCN">
      <summary>
            Mongolian (Traditional Mongolian, PRC)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mnCyrl">
      <summary>
            Mongolian (Cyrillic)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mnMong">
      <summary>
            Mongolian (Traditional Mongolian)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.moh">
      <summary>
            Mohawk
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mohCA">
      <summary>
            Mohawk (Mohawk)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mr">
      <summary>
            Marathi
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mrIN">
      <summary>
            Marathi (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ms">
      <summary>
            Malay
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.msMY">
      <summary>
            Malay (Malaysia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.msBN">
      <summary>
            Malay (Brunei Darussalam)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mt">
      <summary>
            Maltese
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.mtMT">
      <summary>
            Maltese (Malta)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.no">
      <summary>
            Norwegian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nbNO">
      <summary>
            Norwegian, Bokmål (Norway)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nb">
      <summary>
            Norwegian (Bokmål)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ne">
      <summary>
            Nepali
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.neNP">
      <summary>
            Nepali (Nepal)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nl">
      <summary>
            Dutch
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nlNL">
      <summary>
            Dutch (Netherlands)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nlBE">
      <summary>
            Dutch (Belgium)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nnNO">
      <summary>
            Norwegian, Nynorsk (Norway)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nn">
      <summary>
            Norwegian (Nynorsk)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nso">
      <summary>
            Sesotho sa Leboa
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.nsoZA">
      <summary>
            Sesotho sa Leboa (South Africa)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.oc">
      <summary>
            Occitan
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ocFR">
      <summary>
            Occitan (France)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.or">
      <summary>
            Oriya
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.orIN">
      <summary>
            Oriya (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.pa">
      <summary>
            Punjabi
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.paIN">
      <summary>
            Punjabi (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.pl">
      <summary>
            Polish
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.plPL">
      <summary>
            Polish (Poland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.prs">
      <summary>
            Dari
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.prsAF">
      <summary>
            Dari (Afghanistan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ps">
      <summary>
            Pashto
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.psAF">
      <summary>
            Pashto (Afghanistan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.pt">
      <summary>
            Portuguese
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ptBR">
      <summary>
            Portuguese (Brazil)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ptPT">
      <summary>
            Portuguese (Portugal)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.qut">
      <summary>
            K'iche
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.qutGT">
      <summary>
            K'iche (Guatemala)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.quz">
      <summary>
            Quechua
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.quzBO">
      <summary>        
            Quechua (Bolivia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.quzEC">
      <summary>
            Quechua (Ecuador)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.quzPE">
      <summary>
            Quechua (Peru)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.rm">
      <summary>
            Romansh
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.rmCH">
      <summary>
            Romansh (Switzerland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ro">
      <summary>
            Romanian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.roRO">
      <summary>
            Romanian (Romania)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ru">
      <summary>
            Russian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ruRU">
      <summary>
            Russian (Russia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.rw">
      <summary>
            Kinyarwanda
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.rwRW">
      <summary>
            Kinyarwanda (Rwanda)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sa">
      <summary>
            Sanskrit
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.saIN">
      <summary>
            Sanskrit (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sah">
      <summary>
            Yakut
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sahRU">
      <summary>
            Yakut (Russia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.se">
      <summary>
            Sami (Northern)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.seNO">
      <summary>
            Sami, Northern (Norway)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.seSE">
      <summary>
            Sami, Northern (Sweden)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.seFI">
      <summary>
            Sami, Northern (Finland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.si">
      <summary>
            Sinhala
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.siLK">
      <summary>
            Sinhala (Sri Lanka)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sk">
      <summary>
            Slovak
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.skSK">
      <summary>
            Slovak (Slovakia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sl">
      <summary>
            Slovenian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.slSI">
      <summary>
            Slovenian (Slovenia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.smaNO">
      <summary>
            Sami, Southern (Norway)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.smaSE">
      <summary>
            Sami, Southern (Sweden)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sma">
      <summary>
            Sami (Southern)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.smjNO">
      <summary>
            Sami, Lule (Norway)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.smjSE">
      <summary>
            Sami, Lule (Sweden)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.smj">
      <summary>
            Sami (Lule)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.smnFI">
      <summary>
            Sami, Inari (Finland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.smn">
      <summary>
            Sami (Inari)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.smsFI">
      <summary>
            Sami, Skolt (Finland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sms">
      <summary>
            Sami (Skolt)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sq">
      <summary>
            Albanian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sqAL">
      <summary>
            Albanian (Albania)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srLatnCS">
      <summary>
            Serbian (Latin, Serbia and Montenegro (Former))
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srCyrlCS">
      <summary>
            Serbian (Cyrillic, Serbia and Montenegro (Former))
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srLatnBA">
      <summary>
            Serbian (Latin, Bosnia and Herzegovina)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srCyrlBA">
      <summary>
            Serbian (Cyrillic, Bosnia and Herzegovina)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srLatnRS">
      <summary>
            Serbian (Latin, Serbia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srCyrlRS">
      <summary>
            Serbian (Cyrillic, Serbia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srLatnME">
      <summary>
            Serbian (Latin, Montenegro)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srCyrlME">
      <summary>
            Serbian (Cyrillic, Montenegro)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srCyrl">
      <summary>
            Serbian (Cyrillic)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.srLatn">
      <summary>
            Serbian (Latin)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sr">
      <summary>
            Serbian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sv">
      <summary>        
            Swedish
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.svSE">
      <summary>
            Swedish (Sweden)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.svFI">
      <summary>
            Swedish (Finland)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.sw">
      <summary>
            Kiswahili
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.swKE">
      <summary>
            Kiswahili (Kenya)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.syr">
      <summary>
            Syriac
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.syrSY">
      <summary>
            Syriac (Syria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ta">
      <summary>
            Tamil
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.taIN">
      <summary>
            Tamil (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.te">
      <summary>
            Telugu
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.teIN">
      <summary>
            Telugu (India)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tg">
      <summary>
            Tajik
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tgCyrlTJ">
      <summary>
            Tajik (Cyrillic, Tajikistan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tgCyrl">
      <summary>        
            Tajik (Cyrillic)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.th">
      <summary>
            Thai
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.thTH">
      <summary>
            Thai (Thailand)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tk">
      <summary>
            Turkmen
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tkTM">
      <summary>
            Turkmen (Turkmenistan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tn">
      <summary>
            Setswana
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tnZA">
      <summary>
            Setswana (South Africa)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tr">
      <summary>
            Turkish
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.trTR">
      <summary>
            Turkish (Turkey)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tt">
      <summary>
            Tatar
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ttRU">
      <summary>
            Tatar (Russia)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tzm">
      <summary>
            Tamazight
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tzmLatnDZ">
      <summary>
            Tamazight (Latin, Algeria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.tzmLatn">
      <summary>
            Tamazight (Latin)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ug">
      <summary>
            Uyghur
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ugCN">
      <summary>
            Uyghur (PRC)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.uk">
      <summary>
            Ukrainian
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ukUA">
      <summary>
            Ukrainian (Ukraine)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.ur">
      <summary>
            Urdu
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.urPK">
      <summary>
            Urdu (Islamic Republic of Pakistan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.uz">
      <summary>
            Uzbek
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.uzLatnUZ">
      <summary>
            Uzbek (Latin, Uzbekistan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.uzCyrlUZ">
      <summary>
            Uzbek (Cyrillic, Uzbekistan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.uzCyrl">
      <summary>
            Uzbek (Cyrillic)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.uzLatn">
      <summary>
            Uzbek (Latin)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.vi">
      <summary>
            Vietnamese
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.viVN">
      <summary>
            Vietnamese (Vietnam)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.wo">
      <summary>
            Wolof
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.woSN">
      <summary>
            Wolof (Senegal)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.xh">
      <summary>
            isiXhosa
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.xhZA">
      <summary>
            isiXhosa (South Africa)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.yo">
      <summary>
            Yoruba
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.yoNG">
      <summary>
            Yoruba (Nigeria)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhHans">
      <summary>
            Chinese (Simplified)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhTW">
      <summary>
            Chinese (Traditional, Taiwan)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhCN">
      <summary>
            Chinese (Simplified, PRC)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhHK">
      <summary>
            Chinese (Traditional, Hong Kong S.A.R.)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhSG">
      <summary>
            Chinese (Simplified, Singapore)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhMO">
      <summary>
            Chinese (Traditional, Macao S.A.R.)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zh">
      <summary>
            Chinese
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhHant">
      <summary>
            Chinese (Traditional)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhCHS">
      <summary>
            Chinese (Simplified) Legacy
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zhCHT">
      <summary>
            Chinese (Traditional) Legacy
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zu">
      <summary>
            isiZulu
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownCulture.zuZA">
      <summary>
            isiZulu (South Africa)
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownDataType">
      <summary>
            Specifies content data type.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDataType.Numeric">
      <summary>
            Numeric data type, please see <see cref="T:iTin.Export.Model.NumericDataTypeModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDataType.Text">
      <summary>
            Text data type, please see <see cref="T:iTin.Export.Model.TextDataTypeModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDataType.Percentage">
      <summary>
            Text data type, please see <see cref="T:iTin.Export.Model.PercentageDataTypeModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDataType.Scientific">
      <summary>
            Scientific data type, please see <see cref="T:iTin.Export.Model.ScientificDataTypeModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDataType.Currency">
      <summary>
            Currency data type, please see <see cref="T:iTin.Export.Model.CurrencyDataTypeModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDataType.Datetime">
      <summary>
            Date time data type, please see <see cref="T:iTin.Export.Model.DatetimeDataTypeModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDataType.Special">
      <summary>
            Special data type, please see <see cref="T:iTin.Export.Model.SpecialDataTypeModel" /> for more information.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownDatetimeFormat">
      <summary>
            Output datetime formats.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.GeneralDatePattern">
      <summary>
            General date according to the locale specified.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.ShortDatePattern">
      <summary>
            Short date according to the locale specified.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.LongDatePattern">
      <summary>
            Long date according to the locale specified.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.FullDatePattern">
      <summary>
            Full date according to the locale specified.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.Rfc1123Pattern">
      <summary>
            RFC1123 date pattern according to the locale specified.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.ShortTimePattern">
      <summary>
            Short time according to the locale specified.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.LongTimePattern">
      <summary>
            Long time according to the locale specified.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.MonthDayPattern">
      <summary>
            Month-day according to the locale specified.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDatetimeFormat.YearMonthPattern">
      <summary>
            Year-month according to the locale specified.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownDocumentOrientation">
      <summary>
            Specifies known document orientations.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentOrientation.Portrait">
      <summary>
            Portrait orientation
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentOrientation.Landscape">
      <summary>
            Landscape orientation 
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownDocumentSize">
      <summary>
            Specifies the known size of documents.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A0">
      <summary>
            DIN A0. (841 × 1189)mm, (33.11 × 46.81)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A1">
      <summary>
            DIN A1. (594 × 841)mm, (23.39 × 33.11) in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A2">
      <summary>
            DIN A2. (420 × 594)mm, (16.54 × 23.39)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A3">
      <summary>
            DIN A3. (297 × 420)m, (11.69 × 16.54)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A4">
      <summary>
            DIN A4. (210 × 297)mm, (8.27 × 11.69)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A5">
      <summary>
            DIN A5. (148.5 × 210)mm, (5.83 × 8.27)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A6">
      <summary>
            DIN A6. (105 × 148.5)mm, (4.13 × 5.83)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A7">
      <summary>
            DIN A7. (74 × 105)mm, (2.91 × 4.13)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A8">
      <summary>
            DIN A8. (52 × 74)mm, (2.05 × 2.91)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A9">
      <summary>
            DIN A9. (37 × 52)mm, (1.46 × 2.05)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.A10">
      <summary>
            DIN A10. (26 × 37)mm, (1.02 × 1.46)in
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.Executive">
      <summary>
            Executive size.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.HalfLetter">
      <summary>
            Half letter size.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.Letter">
      <summary>
            Letter size.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.Note">
      <summary>
            Note size.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownDocumentSize.PostCard">
      <summary>
            PostCard size.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownDocumentView">
      <summary>
            Known document view modes
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownEffectType">
      <summary>
            Specifies effects applicable to an image
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.None">
      <summary>
            Specifies that the image is drawn without applying any effect.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.Disabled">
      <summary>
            Specifies that the image is drawn disabled.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.GrayScale">
      <summary>
            Specifies that the image is drawn in grayscale.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.GrayScaleRed">
      <summary>
            Specifies that the image is drawn in grayscale except red color.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.GrayScaleGreen">
      <summary>
            Specifies that the image is drawn in grayscale except green color.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.GrayScaleBlue">
      <summary>
            Specifies that the image is drawn in grayscale except blue color.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.Brightness">
      <summary>
            Specifies that the image is drawn with a little more brightness.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.MoreBrightness">
      <summary>
            Specifies that the image is drawn with much more brightness.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.Dark">
      <summary>
            Specifies that the image is drawn with a little less brightness.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.MoreDark">
      <summary>
            Specifies that the image is drawn with much less brightness.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent05">
      <summary>
            Specifies that the image is drawn with a level of 5 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent10">
      <summary>
            Specifies that the image is drawn with a level of 10 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent20">
      <summary>
            Specifies that the image is drawn with a level of 20 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent30">
      <summary>
            Specifies that the image is drawn with a level of 30 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent40">
      <summary>
            Specifies that the image is drawn with a level of 40 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent50">
      <summary>
            Specifies that the image is drawn with a level of 50 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent60">
      <summary>
            Specifies that the image is drawn with a level of 60 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent70">
      <summary>
            Specifies that the image is drawn with a level of 70 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent80">
      <summary>
            Specifies that the image is drawn with a level of 80 percent opacity.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownEffectType.OpacityPercent90">
      <summary>
            Specifies that the image is drawn with a level of 90 percent opacity.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownElementLocation">
      <summary>
            Specifies the known element location.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownElementLocation.ByCoordenates">
      <summary>
            Defines element location by coordenates system, please see <see cref="T:iTin.Export.Model.CoordenatesModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownElementLocation.ByAlignment">
      <summary>
            Defines element location by alignment, please see <see cref="T:iTin.Export.Model.AlignmentModel" /> for more information.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownExporter">
      <summary>
            Specifies the known exporters.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownExporter.Writer">
      <summary>
            Custom Writer, please see <see cref="T:iTin.Export.Model.WriterModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownExporter.Template">
      <summary>
            Template Writer, please see <see cref="T:iTin.Export.Model.TemplateModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownExporter.Xslt">
      <summary>
            Xslt transform file, please see <see cref="T:iTin.Export.Model.XsltModel" /> for more information.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownFieldType">
      <summary>
            Specifies data field type.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFieldType.Field">
      <summary>
            Data field, please see <see cref="T:iTin.Export.Model.DataFieldModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFieldType.Gap">
      <summary>
            Gap field, please see <see cref="T:iTin.Export.Model.GapFieldModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFieldType.Group">
      <summary>
            Group field, please see <see cref="T:iTin.Export.Model.GroupFieldModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFieldType.Fixed">
      <summary>
            Fixed field, please see <see cref="T:iTin.Export.Model.FixedFieldModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFieldType.Packet">
      <summary>
            Packet data field, please see <see cref="T:iTin.Export.Model.PacketFieldModel" /> for more information.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownFlipStyle">
      <summary>
            Specifies the orientation of a control on the drawing surface.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFlipStyle.None">
      <summary>
            Control is oriented to the left.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFlipStyle.X">
      <summary>
            Control is oriented to the top.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFlipStyle.Y">
      <summary>
            Control is oriented to the right.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownFlipStyle.XY">
      <summary>
            Control is oriented to the bottom.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownHeaderFooterAlignment">
      <summary>
            Known header and footer alignment.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownHeaderFooterSectionType">
      <summary>
            Specifies the known header or footer types.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownHeaderFooterSectionType.Odd">
      <summary>
            None aggregate
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownHeaderFooterSectionType.Even">
      <summary>
            Evenn
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownHorizontalAlignment">
      <summary>
            Specifies how an object or text is horizontally aligned relative to a content
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownHorizontalAlignment.Left">
      <summary>
            Content is aligned horizontally on the left.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownHorizontalAlignment.Center">
      <summary>
            Content is aligned horizontally in the center.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownHorizontalAlignment.Right">
      <summary>
            Content is aligned horizontally on the right.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownHyperLinkTooltip">
      <summary>
            Specifies the known hyperlink tooltip.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownInputPacketFormat">
      <summary>
            Defines availables packet input data formats.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownInputPacketFormat.FullDateFormat">
      <summary>
            Represents FullDateFormat. For more information please see <see cref="P:iTin.Export.Model.PacketFieldModel.InputFormat" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownInputPacketFormat.LongDateFormat">
      <summary>
            Represents LongDateFormat. For more information please see <see cref="P:iTin.Export.Model.PacketFieldModel.InputFormat" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownInputPacketFormat.ShortDateFormat">
      <summary>
            Represents ShortDateFormat. For more information please see <see cref="P:iTin.Export.Model.PacketFieldModel.InputFormat" />.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownItemGroupSeparator">
      <summary>
            Defines of the field separators available.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.BackslashSeparator">
      <summary>
            Represents the backslash character. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.ColonSeparator">
      <summary>
            Represents the colon character. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.CommaSeparator">
      <summary>
            Represents the comma character. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.DashSeparator">
      <summary>
            Represents the dash character. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.DotSeparator">
      <summary>
            Represents the dot character. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.EmptySeparator">
      <summary>
            Represents a empty string. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.NewLineSeparator">
      <summary>
            Represents the new line value. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.NewLineSeparatorForXmlFormat">
      <summary>
            Represents the new line value for XML format. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.SemiColonSeparator">
      <summary>
            Represents the semicolon character. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.SlashSeparator">
      <summary>
            Represents the slash character. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownItemGroupSeparator.SpaceSeparator">
      <summary>
            Represents the space character. For more information please see <see cref="P:iTin.Export.Model.GroupItemModel.Separator" />.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownLabelOrientation">
      <summary>
            Specifies the orientation of labels on the axis.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelOrientation.Automatic">
      <summary>
            The orientation is automatic.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelOrientation.Downward">
      <summary>
            The orientation is downward.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelOrientation.Horizontal">
      <summary>
            The orientation is horizontal.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelOrientation.Upward">
      <summary>
            The orientation is upward.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelOrientation.Vertical">
      <summary>
            The orientation is vertical.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownLabelPosition">
      <summary>
            Describes the position of labels on the axis.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelPosition.None">
      <summary>
            No labels.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelPosition.High">
      <summary>
            Top or right side of the chart.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelPosition.Low">
      <summary>
            Bottom or left side of the chart.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLabelPosition.NextToAxis">
      <summary>
            Next to axis.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownLegendLocation">
      <summary>
             Specifies the known locations for legend.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLegendLocation.Top">
      <summary>
            The top
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLegendLocation.Right">
      <summary>
            The right
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLegendLocation.Bottom">
      <summary>
            The bottom
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLegendLocation.Left">
      <summary>
            The left
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownLineStyle">
      <summary>
            Specifies the known style lines.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLineStyle.Continuous">
      <summary>
            Continuous line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLineStyle.Dash">
      <summary>
            Dashed line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLineStyle.DashDot">
      <summary>
            Dash-Dot line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLineStyle.DashDotDot">
      <summary>
            Dash-Dot-Dot line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLineStyle.Dot">
      <summary>
            Dot line.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownLineType">
      <summary>
            Specifies line type.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLineType.TextLine">
      <summary>
            Data field, please see <see cref="T:iTin.Export.Model.TextLineModel" /> for more information.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownLineType.EmptyLine">
      <summary>
            Gap field, please see <see cref="T:iTin.Export.Model.EmptyLineModel" /> for more information.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownMiniChartType">
      <summary>
            Specifies the known mini-chart types.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownMiniChartType.Column">
      <summary>
            Column mini-chart type
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownMiniChartType.Line">
      <summary>
            Line mini-chart type
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownMiniChartType.WinLoss">
      <summary>
            Win-Loss mini-chart type
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownNegativeSign">
      <summary>
            Specifies known negative sign style
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownNegativeSign.Standard">
      <summary>
            -value
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownNegativeSign.None">
      <summary>
            value
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownNegativeSign.Parenthesis">
      <summary>
            (value)
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownNegativeSign.Brackets">
      <summary>
            [value]
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownOperator">
      <summary>
            Specifies the orientation of a control on the drawing surface.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.EqualTo">
      <summary>
            Value is equals to.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.NotEqualTo">
      <summary>
            Value is not equals to.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.LessThan">
      <summary>
            Value is less than to.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.LessOrEqualThan">
      <summary>
            Value is less or equal than to.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.GreatherThan">
      <summary>
            Value is less or equal than to.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.GreatherOrEqualsThan">
      <summary>
            Value is greather or equal than to.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.In">
      <summary>
            Value into value-list.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.Like">
      <summary>
            Value select into match pattern.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOperator.Beetween">
      <summary>
             Value into two values
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownOutputTarget">
      <summary>
            Specifies the output known operating system
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOutputTarget.DOS">
      <summary>
            MS-DOS
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOutputTarget.MacOS">
      <summary>
            Mac OS
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownOutputTarget.Windows">
      <summary>
            Microsoft Windows
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownPatternType">
      <summary>
            Specifies the known pattern type of content.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownPlotGridLine">
      <summary>
            Specifies the known plot grid lines.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownPlotGridLine.None">
      <summary>
            Do not draw major and minor grid lines.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownPlotGridLine.Both">
      <summary>
            Draws major and minor grid lines.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownPlotGridLine.Major">
      <summary>
            Draws major grid lines.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownPlotGridLine.Minor">
      <summary>
            Draws minor grid lines.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownRecordToShow">
      <summary>
            Specifies the number of records to export
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRecordToShow.All">
      <summary>
            All records
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRecordToShow.First">
      <summary>
            First record
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRecordToShow.Last">
      <summary>
            Last record
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRecordToShow.Random">
      <summary>
            Random record
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownRelativeFilePath">
      <summary>
            Specifies the known relative item path.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRelativeFilePath.Template">
      <summary>
            Template file.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRelativeFilePath.Transform">
      <summary>
            Transform file.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRelativeFilePath.TransformFileBehaviorDir">
      <summary>
            Transform file behavior directory.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRelativeFilePath.WriterFilter">
      <summary>
            Writer Filter file.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownRelativeFilePath.Output">
      <summary>
            Output file.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownSpecialFormat">
      <summary>
            Known special formats.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownSpecialFormat.ShortDateFormat">
      <summary>
             Represent a short date format. '999999' -&gt; '99/99/99'
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownSpecialFormat.LongDateFormat">
      <summary>
            Represent a long date format. '99999999' -&gt; '99/99/9999'
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownTickMarkStyle">
      <summary>
            Specifies the position of major and minor tick marks for an axis.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownTickMarkStyle.None">
      <summary>
            No mark.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownTickMarkStyle.Cross">
      <summary>
            Crosses the axis.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownTickMarkStyle.Inside">
      <summary>
            Inside the axis.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownTickMarkStyle.Outside">
      <summary>
            Outside the axis.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownTrimMode">
      <summary>
            Specifies trim mode for strings.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownTrimMode.All">
      <summary>
            Removes all blanks current <see cref="T:System.String" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownTrimMode.End">
      <summary>
            Removes all white-space from the end of the current <see cref="T:System.String" />.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownTrimMode.Start">
      <summary>
            Removes all white-space from the beginning of the current <see cref="T:System.String" />.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownUnit">
      <summary>
            Specifies the measure units.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownUnit.Inches">
      <summary>
            Measured in inches.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownUnit.Millimeters">
      <summary>
            Measured in millimeters.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownVerticalAlignment">
      <summary>
            Specifies how an object or text is vertically aligned relative to a content
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownVerticalAlignment.Top">
      <summary>
            Content is aligned vertically at the top.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownVerticalAlignment.Center">
      <summary>
            Content is aligned vertically at the center.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownVerticalAlignment.Bottom">
      <summary>
            Content is aligned vertically at the bottom.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownWidthLineStyle">
      <summary>
            Specifies width of lines.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownWidthLineStyle.Hairline">
      <summary>
            Hairline.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownWidthLineStyle.Thin">
      <summary>
            Thin line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownWidthLineStyle.Medium">
      <summary>
            Medium line.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownWidthLineStyle.Thick">
      <summary>
            Thick line.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.KnownWriterFilter">
      <summary>
            Specifies the known writer search criteria.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownWriterFilter.Name">
      <summary>
            The name
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownWriterFilter.Author">
      <summary>
            The author
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownWriterFilter.Version">
      <summary>
            The version
            </summary>
    </member>
    <member name="F:iTin.Export.Model.KnownWriterFilter.Company">
      <summary>
            The company
            </summary>
    </member>
    <member name="T:iTin.Export.Model.LinesModel">
      <summary>
            A set of lines. Before and after lines.
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.LinesModel.#ctor(iTin.Export.Model.GlobalResourcesModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.LinesModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.LinesModel.#ctor(iTin.Export.Model.GlobalResourcesModel)</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Fields/Public/Constructors/Constructor[@name='ctor1']/*</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.LinesModel.#ctor(iTin.Export.Model.GlobalResourcesModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.LinesModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.LinesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.LinesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.LinesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.LinesModel.SetOwner(iTin.Export.Model.BaseLineModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.LinesModel.SetOwner(iTin.Export.Model.BaseLineModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.LinesModel.SetOwner(iTin.Export.Model.BaseLineModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.LocationModel">
      <summary>
            Base class for model elements. 
            Implements functionality to record and read configuration files.
            <markup><include item="SMCMissingIncludeTarget"><parameter>T:iTin.Export.Model.LocationModel</parameter><parameter>..\..\iTin.Export.Documentation.xml</parameter><parameter>Model/Location/Class[@name='Location']/*</parameter></include></markup></summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.LocationModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.LocationModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.LocationModel.#ctor</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Location/Public/Constructors/Constructor[@name="ctor1"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.LocationModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.LocationModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.LocationModel.LocationType">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.LocationModel.LocationType</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.LocationModel.LocationType</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Location/Public/Properties/Property[@name="LocationType"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.LocationModel.Mode">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.LocationModel.Mode</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.LocationModel.Mode</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Location/Public/Properties/Property[@name="Mode"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.LogoImageModel">
      <summary>
            Represents a logo.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.LogoImageModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.LogoImageModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.LogoImageModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.LogoImageModel.Key">
      <summary>
            Gets or sets the key.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.LogoImageModel.TryGetImage(System.Drawing.Image@)">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Image" /> object that contains modified image.
            </summary>
      <param name="image">A <see cref="T:System.Drawing.Image" /> object that represents modified image.</param>
      <returns>
        <strong>true</strong> if returns the image from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.LogoImageModel.TryGetOriginalImage(System.Drawing.Image@)">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Image" /> object that contains modified image.
            </summary>
      <param name="image">A <see cref="T:System.Drawing.Image" /> object that represents modified image.</param>
      <returns>
        <strong>true</strong> if returns the image from resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.LogoImageModel.TryGetResourceInformation(iTin.Export.Model.ImageModel@)">
      <summary>
            Gets a reference to the image resource information.
            </summary>
      <param name="resource">Resource information.</param>
      <returns>
        <strong>true</strong> if exist available information about resource; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.LogoModel">
      <summary>
            Represents a logo.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.LogoModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.LogoModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.LogoModel.#ctor</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Logo/Public/Constructors/Constructor[@name="ctor1"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.LogoModel.Image">
      <summary>
            Gets or sets the logo image file path.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.LogoModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.LogoModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.LogoModel.Location">
      <summary>
            Gets or sets a reference which contains the location of the logo in the host, this can be by coordinates or by type of alignment, depending whether the host has or not a tabular format.
            You can only choose one of the modes. If this tag does not define the defaults is by coordinates
            </summary>
    </member>
    <member name="P:iTin.Export.Model.LogoModel.LogoSize">
      <summary>
            Gets the dimensions of logo.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.LogoModel.Show">
      <summary>
            Gets or sets a value that determines whether displays the logo.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.LogoModel.Size">
      <summary>
            Gets or sets width and height of the logo.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.LogoModel.SizeToPoints(System.IntPtr)">
      <summary>
            Converts chart size value in pixels to points for the specified device.
            </summary>
      <param name="hwnd">Pointer to device.</param>
      <returns>
            Returns size of chart, in points.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.MailBehaviorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseBehaviorModel" /> class.<br />
            Which Represents a email behavior.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.MailBehaviorModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MailBehaviorModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailBehaviorModel.Async">
      <summary>
            Gets or sets a value indicating whether to execute asynchronously the behavior.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.MailBehaviorModel.Default">
      <summary>
            Gets a reference to default behavior.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.MailBehaviorModel.ExecuteBehavior(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Code for execute download behavior.
            </summary>
      <param name="writer">The writer.</param>
      <param name="settings">Exporter settings.</param>
      <exception cref="T:iTin.Export.Web.MissingPageAsyncAttributeException">Throw if web page not is async.</exception>
    </member>
    <member name="P:iTin.Export.Model.MailBehaviorModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.MailBehaviorModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.MailBehaviorModel.Messages">
      <summary>
            Gets or sets collection of e-mail messages.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailBehaviorModel.Server">
      <summary>
            Gets or sets a reference to mail server configuration.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.MailMessageAttachmentModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MailMessageAttachmentModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>T:iTin.Export.Model.MailMessageAttachmentModel</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/MailMessageAttachment/Class[@name="info"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MailMessageAttachmentModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MailMessageAttachmentModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageAttachmentModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.MailMessageAttachmentModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageAttachmentModel.Path">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MailMessageAttachmentModel.Path</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.MailMessageAttachmentModel.Path</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/MailMessageAttachment/Public/Properties/Property[@name="Path"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MailMessageAttachmentModel.SetOwner(iTin.Export.Model.MailMessageAttachmentsModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.MailMessageAttachmentModel.SetOwner(iTin.Export.Model.MailMessageAttachmentsModel)</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.MailMessageAttachmentModel.SetOwner(iTin.Export.Model.MailMessageAttachmentsModel)</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/MailMessageAttachment/Public/Methods/Method[@name="SetOwner"]/*</parameter>
          </include>
        </markup>
      </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.MailMessageAttachmentModel.SetOwner(iTin.Export.Model.MailMessageAttachmentsModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.MailMessageAttachmentsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MailMessageAttachmentsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MailMessageAttachmentsModel.#ctor(iTin.Export.Model.MailMessageModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MailMessageAttachmentsModel" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:iTin.Export.Model.MailMessageAttachmentsModel.SetOwner(iTin.Export.Model.MailMessageAttachmentModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.MailMessageAttachmentsModel.SetOwner(iTin.Export.Model.MailMessageAttachmentModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.MailMessageAttachmentsModel.SetOwner(iTin.Export.Model.MailMessageAttachmentModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.MailMessageCcModel">
      <summary>
            The address collection that contains the carbon copy (CC) recipients for this e-mail message.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.MailMessageCcModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MailMessageCcModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageCcModel.Addresses">
      <summary>
            Gets or sets collection of e-mail addresses.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageCcModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.MailMessageFromModel">
      <summary>
            Represents the from address for this e-mail message.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.MailMessageFromModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MailMessageFromModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageFromModel.Address">
      <summary>
            Gets or sets a e-mail address.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageFromModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.MailMessageFromModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="T:iTin.Export.Model.MailMessageModel">
      <summary>
            Represents an e-mail message.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.MailMessageModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MailMessageModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.Attachments">
      <summary>
            Gets or sets the attachment collection used to store data attached to this e-mail message.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.Body">
      <summary>
            Gets or sets the message body.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.CC">
      <summary>
            Gets or sets address collection that contains the carbon copy (CC) recipients for this e-mail message.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.Credential">
      <summary>
            Gets or sets name of credential to use for this message.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.From">
      <summary>
             Gets or sets the from address for this e-mail message.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.MailMessageModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.Send">
      <summary>
            Gets or sets a value that determines whether to send the message.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="M:iTin.Export.Model.MailMessageModel.SetOwner(iTin.Export.Model.MailMessagesModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.MailMessageModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.Subject">
      <summary>
            Gets or sets the subject line for this e-mail message.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageModel.To">
      <summary>
            Gets or sets the address collection that contains the recipients of this e-mail message.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.MailMessagesModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MailMessagesModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MailMessagesModel.#ctor(iTin.Export.Model.MailBehaviorModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MailMessagesModel" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:iTin.Export.Model.MailMessagesModel.GetRange(System.Collections.Generic.IEnumerable{iTin.Export.Model.MailMessageModel},iTin.Export.Model.YesNo)">
      <summary>
            Returns an enumerator to message list containing only those who meet the condition.
            </summary>
      <param name="messages">Message List.</param>
      <param name="send">Indicates if message will to send.</param>
      <returns>
            Enumerator that contains message list that meet the condition.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.MailMessagesModel.GetRange(System.Collections.Generic.IEnumerable{iTin.Export.Model.MailMessageModel},System.String)">
      <summary>
            Returns an enumerator to message list containing only those who meet the credential condition.
            </summary>
      <param name="messages">Message List.</param>
      <param name="credential">Server credential.</param>
      <returns>
            Enumerator that contains message list that meet the condition.
            </returns>
    </member>
    <member name="M:iTin.Export.Model.MailMessagesModel.SetOwner(iTin.Export.Model.MailMessageModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.MailMessagesModel.SetOwner(iTin.Export.Model.MailMessageModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.MailMessagesModel.SetOwner(iTin.Export.Model.MailMessageModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.MailMessageToModel">
      <summary>
            The address collection that contains the recipients of this e-mail message.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.MailMessageToModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MailMessageToModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageToModel.Addresses">
      <summary>
            Gets or sets collection of e-mail addresses.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailMessageToModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.MailServerModel">
      <summary>
            Collection of mail server credentials authentication. Each element defines a server credential authentication.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.MailServerModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MailServerModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MailServerModel.Credentials">
      <summary>
            Gets or sets collection of mail server credentials authentication.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailServerModel.Default">
      <summary>
            Gets a reference to default behavior.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MailServerModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MailServerModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.MailServerModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MarginsModel">
      <summary>
            Represents margins of a document. Allow define top margin, right margin, bottom margin and left margin of a document. 
            All margins are measured in <c>mm</c>.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.MarginsModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MarginsModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MarginsModel.Bottom">
      <summary>
            Gets or sets the preferred bottom margin of document.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MarginsModel.Default">
      <summary>
            Gets default Margins.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MarginsModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MarginsModel.Left">
      <summary>
            Gets or sets the preferred left margin of document.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MarginsModel.Right">
      <summary>
            Gets or sets the preferred right margin of document.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MarginsModel.Top">
      <summary>
            Gets or sets the preferred top margin of document.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MarginsModel.Units">
      <summary>
            Gets or sets the preferred units of margins. 
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.MaximumCondition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MaximumCondition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MaximumCondition.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MaximumCondition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MaximumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.MaximumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </summary>
      <param name="row">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>row</parameter>
            <parameter>M:iTin.Export.Model.MaximumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="col">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:iTin.Export.Model.MaximumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="target">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:iTin.Export.Model.MaximumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.MaximumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.MaximumCondition.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.MaximumCondition.Empty">
      <summary>
            Gets an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MaximumCondition.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MaximumCondition.IsEmpty">
      <summary>
            Gets a value indicating whether this condition is an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MaximumCondition.Style">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MaximumCondition.Style</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartAxesModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartAxesModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartAxesModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartAxesModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartAxesModel.Horizontal">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartAxesModel.Horizontal</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartAxesModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartAxesModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartAxesModel.Vertical">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartAxesModel.Vertical</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartColumnPointsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartColumnPointsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartColumnPointsModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartColumnPointsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartColumnSerieModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartColumnSerieModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartColumnSerieModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartColumnSerieModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartColumnTypeModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartColumnTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartColumnTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartColumnTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartColumnTypeModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartColumnTypeModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartColumnTypeModel.Points">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartColumnTypeModel.Points</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartColumnTypeModel.Serie">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartColumnTypeModel.Serie</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartEmptyValuesAs">
      <summary>
            Specifies mini-chart empty values
            </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartFirstPointModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartFirstPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartFirstPointModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartFirstPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartHighPointModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartHighPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartHighPointModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartHighPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartHorizontalAxisModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartHorizontalAxisModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartHorizontalAxisModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MiniChartHorizontalAxisModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartHorizontalAxisModel.Color">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartHorizontalAxisModel.Color</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartHorizontalAxisModel.GetAxisField">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.MiniChartHorizontalAxisModel.GetAxisField</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.MiniChartHorizontalAxisModel.GetAxisField</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.MiniChartHorizontalAxisModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure preferred for this axis.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.MiniChartHorizontalAxisModel.IsDateAxis">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartHorizontalAxisModel.IsDateAxis</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartHorizontalAxisModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartHorizontalAxisModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartHorizontalAxisModel.RightToLeft">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartHorizontalAxisModel.RightToLeft</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartHorizontalAxisModel.Show">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartHorizontalAxisModel.Show</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartHorizontalAxisModel.Type">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartHorizontalAxisModel.Type</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartLastPointModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartLastPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartLastPointModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartLastPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartLinePointsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartLinePointsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartLinePointsModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartLinePointsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartLinePointsModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartLinePointsModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartLinePointsModel.Markers">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartLinePointsModel.Markers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartLineSerieModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartLineSerieModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartLineSerieModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MiniChartLineSerieModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartLineSerieModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartLineSerieModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartLineSerieModel.Width">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartLineSerieModel.Width</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartLineTypeModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartLineTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartLineTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartLineTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartLineTypeModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartLineTypeModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartLineTypeModel.Points">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartLineTypeModel.Points</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartLineTypeModel.Serie">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartLineTypeModel.Serie</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartLowPointModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartLowPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartLowPointModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartLowPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartMarkersPointModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartMarkersPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartMarkersPointModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartMarkersPointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartModel">
      <summary>
            Represents a user-defined mini-chart.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MiniChartModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartModel.Axes">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartModel.Axes</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartModel.ChartType">
      <summary>
            Gets a value indicating chart type.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartModel.DisplayHidden">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartModel.DisplayHidden</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartModel.EmptyValueAs">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartModel.EmptyValueAs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartModel.Field">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartModel.Field</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.MiniChartModel.Type">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartModel.Type</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartNegativePointModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartNegativePointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartNegativePointModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartNegativePointModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartTypeModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartTypeModel.Active">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartTypeModel.Active</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartTypeModel.Column">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartTypeModel.Column</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartTypeModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartTypeModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartTypeModel.Line">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartTypeModel.Line</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartTypeModel.WinLoss">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartTypeModel.WinLoss</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartVerticalAxisModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartVerticalAxisModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartVerticalAxisModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.MiniChartVerticalAxisModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartVerticalAxisModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartVerticalAxisModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartVerticalAxisModel.Max">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartVerticalAxisModel.Max</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartVerticalAxisModel.Min">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartVerticalAxisModel.Min</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartWinLossPointsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartWinLossPointsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartWinLossPointsModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartWinLossPointsModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartWinLossSerieModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartWinLossSerieModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartWinLossSerieModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartWinLossSerieModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MiniChartWinLossTypeModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MiniChartWinLossTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MiniChartWinLossTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MiniChartWinLossTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartWinLossTypeModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartWinLossTypeModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartWinLossTypeModel.Points">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartWinLossTypeModel.Points</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.MiniChartWinLossTypeModel.Serie">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MiniChartWinLossTypeModel.Serie</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MinimumCondition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.MinimumCondition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MinimumCondition.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MinimumCondition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MinimumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.MinimumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </summary>
      <param name="row">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>row</parameter>
            <parameter>M:iTin.Export.Model.MinimumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="col">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:iTin.Export.Model.MinimumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="target">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:iTin.Export.Model.MinimumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.MinimumCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.MinimumCondition.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.MinimumCondition.Empty">
      <summary>
            Gets an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MinimumCondition.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MinimumCondition.IsEmpty">
      <summary>
            Gets a value indicating whether this condition is an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.MinimumCondition.Style">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.MinimumCondition.Style</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.MoreBrightnessEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents more brightness effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.MoreBrightnessEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MoreBrightnessEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MoreBrightnessEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.MoreBrightnessEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.MoreBrightnessEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.MoreDarkEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents more dark effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.MoreDarkEffectModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.MoreDarkEffectModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.MoreDarkEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.MoreDarkEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.MoreDarkEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.NegativeModel">
      <summary>
            Represents a negative number format. Contains the definition of negative number in a numeric data type.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.NegativeModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.NegativeModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.NegativeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.NegativeModel.Color">
      <summary>
            Gets or sets preferred color for display a negative number.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="M:iTin.Export.Model.NegativeModel.Combine(iTin.Export.Model.NegativeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.NegativeModel.Combine(iTin.Export.Model.NegativeModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.NegativeModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure preferred for this negative format.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.NegativeModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.NegativeModel.Sign">
      <summary>
            Gets or sets visual format of negative value.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.NumberDataTypeModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.NumericDataTypeModel" /> class.<br />
            You can specify the number of decimal places that you want to use, whether you want to use a thousands separator, and how you want to display negative numbers. 
            </summary>
    </member>
    <member name="M:iTin.Export.Model.NumberDataTypeModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.NumberDataTypeModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.NumberDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.NumberDataTypeModel.Combine(iTin.Export.Model.NumberDataTypeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.NumberDataTypeModel.Combine(iTin.Export.Model.NumberDataTypeModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.NumberDataTypeModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.NumberDataTypeModel.Separator">
      <summary>
            Gets or sets a value indicating whether displays thousands separator.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.NumericDataTypeModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.RealDataTypeModel" /> class.<br />.
            Which acts as base class for the data types negative numbers with decimals .
            </summary>
    </member>
    <member name="M:iTin.Export.Model.NumericDataTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.NumericDataTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.NumericDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.NumericDataTypeModel.Combine(iTin.Export.Model.NumericDataTypeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.NumericDataTypeModel.Combine(iTin.Export.Model.NumericDataTypeModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.NumericDataTypeModel.Error">
      <summary>
            Gets or sets a reference that contains numeric data type error settings.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.NumericDataTypeModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.NumericDataTypeModel.Negative">
      <summary>
            Gets or sets a reference that contains the negative number format.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.NumericErrorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseErrorModel" /> class.
            Which acts as the base class of error structures for numerical data.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.NumericErrorModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.NumericErrorModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.NumericErrorModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.NumericErrorModel.Combine(iTin.Export.Model.NumericErrorModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.NumericErrorModel.Combine(iTin.Export.Model.NumericErrorModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.NumericErrorModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.NumericErrorModel.Value">
      <summary>
            Gets or sets preferred default value when occurs an error.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.OpacityEffectModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseEffectModel" /> class.<br />
            Which represents opacity effect.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.OpacityEffectModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.OpacityEffectModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.OpacityEffectModel.Apply">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.OpacityEffectModel.Apply</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.OpacityEffectModel.Apply</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:iTin.Export.Model.OpacityEffectModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.OpacityEffectModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.OpacityEffectModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.OpacityEffectModel.Percent">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.OpacityEffectModel.Percent</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.OutputModel">
      <summary>
            Base class for model elements. 
            Implements functionality to record and read configuration files.
            <markup><include item="SMCMissingIncludeTarget"><parameter>T:iTin.Export.Model.OutputModel</parameter><parameter>..\..\iTin.Export.Documentation.xml</parameter><parameter>Model/Output/Class[@name="info"]/*</parameter></include></markup></summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.OutputModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.OutputModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.OutputModel.#ctor</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Output/Public/Constructors/Constructor[@name="ctor1"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.OutputModel.EndOfFile">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.OutputModel.EndOfFile</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.OutputModel.EndOfFile</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Output/Public/Properties/Property[@name="EndOfFile"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.OutputModel.File">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.OutputModel.File</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.OutputModel.File</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Output/Public/Properties/Property[@name="File"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.OutputModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.OutputModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.OutputModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.OutputModel.NewLineDelimiter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.OutputModel.NewLineDelimiter</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.OutputModel.NewLineDelimiter</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Output/Public/Properties/Property[@name="NewLineDelimiter"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.OutputModel.Path">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.OutputModel.Path</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.OutputModel.Path</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Output/Public/Properties/Property[@name="Path"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.OutputModel.Target">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.OutputModel.Target</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.OutputModel.Target</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Output/Public/Properties/Property[@name="Target"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.OutputModel.ToUri">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.OutputModel.ToUri</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.OutputModel.ToUri</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:iTin.Export.Model.PacketFieldModel">
      <summary>
            Base class for the different types of data fields supported by <strong><c>iTin Export Engine</c></strong>.<br />
            Which acts as the base class for different data fields.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.PacketFieldModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.PacketFieldModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.PacketFieldModel.FieldType">
      <summary>
            Gets a value indicating packet data field type.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.PacketFieldModel.GetInputFormat(System.String)">
      <summary>
            Returns input packet data format.
            </summary>
      <param name="format">Input format.</param>
      <returns>
            A value than represents input packet data format.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.PacketFieldModel.InputFormat">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PacketFieldModel.InputFormat</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.PacketFieldModel.Name">
      <summary>
            Gets or sets the name of the field.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidFieldIdentifierNameException">If <paramref name="value" /> not is a valid field identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.PacketFieldModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.PatternModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.PatternModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PatternModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.PatternModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.PatternModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.PatternModel.Color">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PatternModel.Color</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PatternModel.Combine(iTin.Export.Model.PatternModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.PatternModel.Combine(iTin.Export.Model.PatternModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.PatternModel.GetColor">
      <summary>
            Gets a reference to the <see cref="T:System.Drawing.Color" /> structure preferred for this content.
            </summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> structure that represents a .NET color.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.PatternModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.PatternModel.PatternType">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PatternModel.PatternType</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.PercentageDataTypeModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.RealDataTypeModel" /> class.<br />
            Displays the result with a percent sign (%). You can specify the number of decimal places to use.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.PercentageDataTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.PercentageDataTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PercentageDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.PercentageDataTypeModel.Combine(iTin.Export.Model.PercentageDataTypeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.PercentageDataTypeModel.Combine(iTin.Export.Model.PercentageDataTypeModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.PercentageDataTypeModel.Error">
      <summary>
            Gets or sets a reference that contains percentage data type error settings.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.PercentageDataTypeModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.PercentageErrorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.NumericErrorModel" /> class.
            Represents the error structure for percentage data type. Allows us to set a default value and an additional comment.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.PercentageErrorModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.PercentageErrorModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PercentageErrorModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="T:iTin.Export.Model.PieceModel">
      <summary>
            Represents a new field composed of a field name and initial position and final position into the reference field.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.PieceModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.PieceModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.PieceModel.From">
      <summary>
            Gets or sets the initial character of the piece into field reference.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>value</c> is less than zero <br />
            - or - <br /><c>value</c> is greater than length of <see cref="P:iTin.Export.Model.PiecesModel.Reference" /> property.
            </exception>
    </member>
    <member name="M:iTin.Export.Model.PieceModel.GetValue">
      <summary>
            Returns the value containing this piece.
            </summary>
      <returns>
            The piece value.
            </returns>
      <exception cref="T:System.ArgumentNullException">Thrown if <see cref="P:iTin.Export.Model.FixedItemModel.DataSource" /> is <strong>null</strong> or <see cref="P:iTin.Export.Model.PiecesModel.Reference" /> not found.</exception>
    </member>
    <member name="P:iTin.Export.Model.PieceModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.PieceModel.Lenght">
      <summary>
            Gets or sets the length in characters of the piece.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <c>value</c> is less than zero <br />
            - or - <br /><c>value</c> is greater than lenght of <see cref="P:iTin.Export.Model.PiecesModel.Reference" /> property minus property value <see cref="P:iTin.Export.Model.PieceModel.From" />. 
            </exception>
    </member>
    <member name="P:iTin.Export.Model.PieceModel.Name">
      <summary>
            Gets or sets the name of the piece.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">If <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="M:iTin.Export.Model.PieceModel.SetOwner(iTin.Export.Model.PiecesModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.PiecesModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="M:iTin.Export.Model.PieceModel.ToString">
      <summary>
            Returns a string that represents the current object.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="P:iTin.Export.Model.PieceModel.Trim">
      <summary>
            Gets or sets a value indicating whether to trim the blanks in this piece.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.PieceModel.TrimMode">
      <summary>
            Gets or sets a value that determines trim mode for strings.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.PiecesModel">
      <summary>
            Contains a collection of pieces. Each element is a new collection of smaller fields resulting from splitting a reference field.
            </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.PiecesModel.#ctor(iTin.Export.Model.FixedItemModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.PiecesModel" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:iTin.Export.Model.PiecesModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PiecesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.PiecesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.PiecesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.PiecesModel.SetOwner(iTin.Export.Model.PieceModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PiecesModel.SetOwner(iTin.Export.Model.PieceModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.PiecesModel.SetOwner(iTin.Export.Model.PieceModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.PivotModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.PivotModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PivotModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.PivotModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.PivotModel.Location">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PivotModel.Location</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.PropertiesModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.PropertiesModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>T:iTin.Export.Model.PropertiesModel</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Properties/Class[@name="info"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.PropertiesModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.Add(iTin.Export.Model.PropertyModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Add(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Add(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.Clear">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Clear</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.Clone">
      <summary> 
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.Contains(iTin.Export.Model.PropertyModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Contains(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Contains(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Contains(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.Contains(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Contains(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="name">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Contains(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Contains(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.CopyTo(iTin.Export.Model.PropertyModel[],System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.CopyTo(iTin.Export.Model.PropertyModel[],System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="array">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>array</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.CopyTo(iTin.Export.Model.PropertyModel[],System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="arrayIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>arrayIndex</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.CopyTo(iTin.Export.Model.PropertyModel[],System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.PropertiesModel.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.GetEnumerator">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.GetEnumerator</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.GetEnumerator</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.IndexOf(iTin.Export.Model.PropertyModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.IndexOf(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.IndexOf(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.IndexOf(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.Insert(System.Int32,iTin.Export.Model.PropertyModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Insert(System.Int32,iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="index">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Insert(System.Int32,iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </param>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Insert(System.Int32,iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.PropertiesModel.IsDefault">
      <summary>
            When overridden in a derived class, gets a value indicating whether this instance contains the default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.PropertiesModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.PropertiesModel.IsReadOnly">
      <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:iTin.Export.Model.PropertiesModel.Item(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PropertiesModel.Item(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.PropertiesModel.Item(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PropertiesModel.Item(System.String)</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.Remove(iTin.Export.Model.PropertyModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Remove(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Remove(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.Remove(iTin.Export.Model.PropertyModel)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.PropertiesModel.RemoveAt(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.RemoveAt(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="index">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:iTin.Export.Model.PropertiesModel.RemoveAt(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.PropertyModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.PropertyModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>T:iTin.Export.Model.PropertyModel</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Property/Class[@name="info"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PropertyModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.PropertyModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.PropertyModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.PropertyModel.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PropertyModel.Name</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.PropertyModel.Name</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Property/Public/Properties/Property[@name="Name"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.PropertyModel.Owner">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PropertyModel.Owner</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.PropertyModel.Owner</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Property/Public/Properties/Property[@name="Owner"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.PropertyModel.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.PropertyModel.Value</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.PropertyModel.Value</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Property/Public/Properties/Property[@name="Value"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.RealDataTypeModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseDataTypeModel" /> class.<br />
            Which acts as the base class for data types with decimal numbers.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.RealDataTypeModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.RealDataTypeModel" /> class.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.RealDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.RealDataTypeModel.Combine(iTin.Export.Model.RealDataTypeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.RealDataTypeModel.Combine(iTin.Export.Model.RealDataTypeModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.RealDataTypeModel.Decimals">
      <summary>
            Gets or sets number of decimal places.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than 0.</exception>
    </member>
    <member name="P:iTin.Export.Model.RealDataTypeModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ReferenceModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ReferenceModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ReferenceModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ReferenceModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ReferenceModel.Assembly">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ReferenceModel.Assembly</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ReferenceModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ReferenceModel.IsDefault</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ReferenceModel.Path">
      <summary>
            Gets or sets the path where is located the assembly.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidPathNameException">If <paramref name="value" /> is an invalid path name.</exception>
    </member>
    <member name="M:iTin.Export.Model.ReferenceModel.SetOwner(iTin.Export.Model.ReferencesModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ReferenceModel.SetOwner(iTin.Export.Model.ReferencesModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.ReferenceModel.SetOwner(iTin.Export.Model.ReferencesModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.ReferencesModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ReferencesModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ReferencesModel.#ctor(iTin.Export.Model.ExportsModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ReferencesModel</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.ReferencesModel.#ctor(iTin.Export.Model.ExportsModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.ReferencesModel.SetOwner(iTin.Export.Model.ReferenceModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ReferencesModel.SetOwner(iTin.Export.Model.ReferenceModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.ReferencesModel.SetOwner(iTin.Export.Model.ReferenceModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.RemarksCondition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.RemarksCondition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.RemarksCondition.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.RemarksCondition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.RemarksCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.RemarksCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </summary>
      <param name="row">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>row</parameter>
            <parameter>M:iTin.Export.Model.RemarksCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="col">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:iTin.Export.Model.RemarksCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="target">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:iTin.Export.Model.RemarksCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.RemarksCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.RemarksCondition.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.RemarksCondition.Criterial">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.RemarksCondition.Criterial</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.RemarksCondition.Empty">
      <summary>
            Gets an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.RemarksCondition.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.RemarksCondition.IsEmpty">
      <summary>
            Gets a value indicating whether this condition is an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.RemarksCondition.Style">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.RemarksCondition.Style</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.RemarksCondition.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.RemarksCondition.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.ScientificDataTypeModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.RealDataTypeModel" /> class.<br />
            Displays a number in exponential notation, which replaces part of the number with E + n, where E (exponent) multiplies the preceding number by 10 to n.
            You can specify the number of decimal places you want to use.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ScientificDataTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ScientificDataTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ScientificDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.ScientificDataTypeModel.Combine(iTin.Export.Model.ScientificDataTypeModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.ScientificDataTypeModel.Combine(iTin.Export.Model.ScientificDataTypeModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.ScientificDataTypeModel.Error">
      <summary>
            Gets or sets a reference that contains scientific data type error settings.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ScientificDataTypeModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ScientificErrorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.NumericErrorModel" /> class.
            Represents the error structure for scientific data type. Allows us to set a default value and an additional comment.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ScientificErrorModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ScientificErrorModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ScientificErrorModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="T:iTin.Export.Model.ServerCredentialModel">
      <summary>
            Representing a server credential authentication.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ServerCredentialModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ServerCredentialModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ServerCredentialModel.Domain">
      <summary>
            Gets or sets the domain or computer name that verifies the credential.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ServerCredentialModel.Host">
      <summary>
            Gets or sets the name or IP address of the host used for SMTP transactions.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ServerCredentialModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ServerCredentialModel.Name">
      <summary>
            Gets or sets the identifier name of credential.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ServerCredentialModel.Password">
      <summary>
            Gets or sets the password for the user name associated with the credential.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ServerCredentialModel.Port">
      <summary>
            Gets or sets the port used for SMTP transactions.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ServerCredentialModel.SetOwner(iTin.Export.Model.ServerCredentialsModel)">
      <summary>
            Sets the element that owns this <see cref="T:iTin.Export.Model.ServerCredentialModel" />.
            </summary>
      <param name="reference">Reference to owner.</param>
    </member>
    <member name="P:iTin.Export.Model.ServerCredentialModel.SSL">
      <summary>
            Gets or sets a value indicating whether uses Secure Sockets Layer (SSL) to encrypt the connection.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ServerCredentialModel.UserName">
      <summary>
            Gets or sets the user name associated with the credential.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ServerCredentialsModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ServerCredentialsModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="TItem">The type of elements in the list.</typeparam>
      <typeparam name="TParent">The owner type of list.</typeparam>
      <typeparam name="TSearch">The type of search element.</typeparam>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ServerCredentialsModel.#ctor(iTin.Export.Model.MailServerModel)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ServerCredentialsModel" /> class.
            </summary>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:iTin.Export.Model.ServerCredentialsModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ServerCredentialsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.ServerCredentialsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.ServerCredentialsModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.ServerCredentialsModel.SetOwner(iTin.Export.Model.ServerCredentialModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ServerCredentialsModel.SetOwner(iTin.Export.Model.ServerCredentialModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.ServerCredentialsModel.SetOwner(iTin.Export.Model.ServerCredentialModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.ShadowModel">
      <summary>
            Represents the visual setting of shadow-border. Includes shadow visibility and transparency.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.ShadowModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.ShadowModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ShadowModel.IsDefault">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ShadowModel.IsDefault</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.ShadowModel.IsDefault</parameter>
            <parameter>..\..\iTin.Export.Documentation.Common.xml</parameter>
            <parameter>Common/Model/Public/Overrides/Properties/Property[@name="IsDefault"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.ShadowModel.Show">
      <summary>
            Gets or sets a value that determines whether displays shadow.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.ShadowModel.Transparency">
      <summary>
            Gets or sets a value that determines preferred degree of transparency of the shadow as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
      <exception cref="T:System.InvalidOperationException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.StyleModel">
      <summary>
            Defines a single style, includes definition for a font type, type of content, such as the background color, the alignment type and the data type.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.StyleModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.StyleModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.Borders">
      <summary>
            Gets or sets the collection of border properties.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.StyleModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.StyleModel.Combine(iTin.Export.Model.StyleModel)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.StyleModel.Combine(iTin.Export.Model.StyleModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.StyleModel.Combine(iTin.Export.Model.StyleModel,System.Boolean)">
      <summary>
            Combines this instance with reference parameter.
            </summary>
      <param name="reference">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:iTin.Export.Model.StyleModel.Combine(iTin.Export.Model.StyleModel,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="forceInherits">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>forceInherits</parameter>
            <parameter>M:iTin.Export.Model.StyleModel.Combine(iTin.Export.Model.StyleModel,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.Content">
      <summary>
            Gets or sets a reference to the content model.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.Default">
      <summary>
            Gets a default style.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.Empty">
      <summary>
            Gets an empty style.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.Font">
      <summary>
            Gets or sets the font model.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.Inherits">
      <summary>
            Gets or sets the name of parent style.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.IsEmpty">
      <summary>
            Gets a value indicating whether this style is an empty style.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.StyleModel.Name">
      <summary>
            Gets or sets the name of the style.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">
        <paramref name="value" /> not is a valid identifier name.</exception>
    </member>
    <member name="F:iTin.Export.Model.StyleModel.NameOfDefaultStyle">
      <summary>
            The name of default style. Always is '_Default_'.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.StyleModel.TryGetInheritStyle">
      <summary>
            Try gets a reference to inherit model.
            </summary>
      <returns>A inherit style.</returns>
    </member>
    <member name="T:iTin.Export.Model.StylesModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.StylesModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>T:iTin.Export.Model.StylesModel</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Styles/Class[@name='info']/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.StylesModel.#ctor(iTin.Export.Model.GlobalResourcesModel)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.StylesModel</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.StylesModel.#ctor(iTin.Export.Model.GlobalResourcesModel)</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Styles/Public/Constructors/Constructor[@name='ctor1']/*</parameter>
          </include>
        </markup>
      </summary>
      <param name="parent">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:iTin.Export.Model.StylesModel.#ctor(iTin.Export.Model.GlobalResourcesModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:iTin.Export.Model.StylesModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:iTin.Export.Model.StylesModel.GetBy(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.StylesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:iTin.Export.Model.StylesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.StylesModel.GetBy(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.StylesModel.SetOwner(iTin.Export.Model.StyleModel)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.StylesModel.SetOwner(iTin.Export.Model.StyleModel)</parameter>
          </include>
        </markup>
      </summary>
      <param name="item">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:iTin.Export.Model.StylesModel.SetOwner(iTin.Export.Model.StyleModel)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:iTin.Export.Model.TableModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.TableModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.TableModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.TableModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Alias">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Alias</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Alias</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Alias"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.AutoFilter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.AutoFilter</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.AutoFilter</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="AutoFilter"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.AutoFitColumns">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.AutoFitColumns</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.AutoFitColumns</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="AutoFitColumns"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Charts">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Charts</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Charts</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Charts"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Conditions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Conditions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Exporter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Exporter</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Exporter</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Exporter"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Fields">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Fields</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Fields</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Fields"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Filter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Filter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.FreezePanes">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.FreezePanes</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.FreezePanesPoint">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.FreezePanesPoint</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.TableModel.GetHeaderColumnsSize(iTin.Export.ComponentModel.Provider.IProvider)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.TableModel.GetHeaderColumnsSize(iTin.Export.ComponentModel.Provider.IProvider)</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>M:iTin.Export.Model.TableModel.GetHeaderColumnsSize(iTin.Export.ComponentModel.Provider.IProvider)</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Methods/Method[@name="GetHeaderColumnsSize"]/*</parameter>
          </include>
        </markup>
      </summary>
      <param name="adapter">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>adapter</parameter>
            <parameter>M:iTin.Export.Model.TableModel.GetHeaderColumnsSize(iTin.Export.ComponentModel.Provider.IProvider)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.TableModel.GetHeaderColumnsSize(iTin.Export.ComponentModel.Provider.IProvider)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:iTin.Export.Model.TableModel.HasConditions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.HasConditions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.HasFields">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.HasFields</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.HasFields</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="HasFields"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Headers">
      <summary>
            Gets or sets the headers.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Host">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Host</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Host</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Alias"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Location">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Location</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Location</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Location"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Logo">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Logo</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Logo</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Logo"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Name</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Name</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Name"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.Output">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.Output</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.Output</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="Output"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.ShowColumnHeaders">
      <summary>
            Gets or sets the show column headers.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TableModel.ShowGridLines">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TableModel.ShowGridLines</parameter>
          </include>
        </markup>
        <markup>
          <include item="SMCMissingIncludeTarget">
            <parameter>P:iTin.Export.Model.TableModel.ShowGridLines</parameter>
            <parameter>..\..\iTin.Export.Documentation.xml</parameter>
            <parameter>Model/Table/Public/Properties/Property[@name="ShowGridLines"]/*</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.TableModel.ToString">
      <summary>
            Returns a string that represents the current object.
            <markup><include item="SMCMissingIncludeTarget"><parameter>M:iTin.Export.Model.TableModel.ToString</parameter><parameter>..\..\iTin.Export.Documentation.xml</parameter><parameter>Model/Table/Public/Overrides/Methods/Method[@name='ToString']/*</parameter></include></markup></summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current object.
            </returns>
    </member>
    <member name="T:iTin.Export.Model.TemplateModel">
      <summary>
            Represents an exporter based on a template file.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.TemplateModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.TemplateModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TemplateModel.File">
      <summary>
            Gets or sets template file name. To specify a relative path use the character (~).
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidPathNameException">If <paramref name="value" /> is an invalid path.</exception>
    </member>
    <member name="P:iTin.Export.Model.TemplateModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TemplateModel.Writer">
      <summary>
            Gets or sets the template writer used by the exporter.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.TemplateWriterModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.WriterModel" /> class.<br />
            Represents a template writer used by a exporter.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.TemplateWriterModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.TemplateWriterModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TemplateWriterModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TemplateWriterModel.Settings">
      <summary>
            Gets or sets a reference to the settings defined for this writer.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.TemplateWriterSettingsModel">
      <summary>
            Reference to the settings defined for this writer.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.TemplateWriterSettingsModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.TemplateWriterSettingsModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TemplateWriterSettingsModel.FieldPrefix">
      <summary>
            Gets or sets the preferred previous delimiter for field.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TemplateWriterSettingsModel.FieldSufix">
      <summary>
            Gets or sets the preferred posterior delimiter for field.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TemplateWriterSettingsModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TemplateWriterSettingsModel.RecordsToShow">
      <summary>
            Gets or sets number of affected records.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.TemplateWriterSettingsModel.TrimFields">
      <summary>
            Gets or sets a value indicating whether to trim the blanks.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.TemplateWriterSettingsModel.TrimMode">
      <summary>
            Gets or sets a value that determines trim mode for strings.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.TextDataTypeModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseDataTypeModel" /> class.<br />
            Treats the content as text and displays the content exactly as written, even when numbers are typed.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.TextDataTypeModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.TextDataTypeModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.TextDataTypeModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="T:iTin.Export.Model.TextLineModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.TextLineModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.TextLineModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.TextLineModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TextLineModel.Items">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TextLineModel.Items</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TextLineModel.LineType">
      <summary>
            Gets a value indicating line type.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.TextModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.TextModel</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.TextModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.TextModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TextModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TextModel.Merge">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TextModel.Merge</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.TextModel.SetOwner(iTin.Export.Model.TextLineModel)">
      <summary>
            Sets a reference to the owner object that contains this instance.
            </summary>
      <param name="reference">Owner reference.</param>
    </member>
    <member name="P:iTin.Export.Model.TextModel.Show">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TextModel.Show</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TextModel.Style">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TextModel.Style</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.TextModel.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.TextModel.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.ToDropboxBehaviorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.ToDropboxBehaviorModel" /> class.<br />
            Which represents a upload file behavior to Dropbox cloud service. Upload the result of export to Dropbox.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ToDropboxBehaviorModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ToDropboxBehaviorModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ToDropboxBehaviorModel.ExecuteBehavior(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Code for execute download behavior.
            </summary>
      <param name="writer">The writer.</param>
      <param name="settings">Exporter settings.</param>
    </member>
    <member name="T:iTin.Export.Model.ToSkyDriveBehaviorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.ToSkyDriveBehaviorModel" /> class.<br />
            Which represents a upload file behavior to SkyDrive cloud service. Upload the result of export to microsoft SkyDrive.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.ToSkyDriveBehaviorModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ToSkyDriveBehaviorModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ToSkyDriveBehaviorModel.ExecuteBehavior(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Code for execute download behavior.
            </summary>
      <param name="writer">The writer.</param>
      <param name="settings">Exporter settings.</param>
    </member>
    <member name="T:iTin.Export.Model.TransformFileBehaviorModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.BaseBehaviorModel" /> class.<br />
            Which represents a transform file behavior. If the writer that we are using generates a Xml transform file, 
            this element allows us to define their behavior. Allows indicate if you want save it, where and if Xml code generated will indented.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.TransformFileBehaviorModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Model.TransformFileBehaviorModel" /> class.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.TransformFileBehaviorModel.Default">
      <summary>
            Gets a reference to default behavior.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.TransformFileBehaviorModel.ExecuteBehavior(iTin.Export.ComponentModel.Writer.IWriter,iTin.Export.ExportSettings)">
      <summary>
            Code for execute download behavior.
            </summary>
      <param name="writer">The writer.</param>
      <param name="settings">Exporter settings.</param>
    </member>
    <member name="P:iTin.Export.Model.TransformFileBehaviorModel.Indented">
      <summary>
            Gets or sets a value that determines whether transform file is saved indented.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="P:iTin.Export.Model.TransformFileBehaviorModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            <markup><include item="SMCMissingIncludeTarget"><parameter>P:iTin.Export.Model.TransformFileBehaviorModel.IsDefault</parameter><parameter>..\..\iTin.Export.Documentation.Common.xml</parameter><parameter>Common/Model/Public/Overrides/Properties/Property[@name='IsDefault']/*</parameter></include></markup></summary>
    </member>
    <member name="P:iTin.Export.Model.TransformFileBehaviorModel.Path">
      <summary>
            Gets or sets the path of transformation file, applies only in desktop mode.    
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidPathNameException">If <paramref name="value" /> is an invalid path.</exception>
    </member>
    <member name="P:iTin.Export.Model.TransformFileBehaviorModel.Save">
      <summary>
            Gets or sets a value that determines whether to save the transform file.
            If the writer has been designed to generate transform files, set this attribute to <see cref="F:iTin.Export.Model.YesNo.Yes" /> for get a copy of the file.
            </summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
    </member>
    <member name="T:iTin.Export.Model.WebHyperLink">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.WebHyperLink</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.WebHyperLink.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.WebHyperLink</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.WebHyperLink.Address">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.WebHyperLink.Address</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.WhenChangeConditionModel">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.WhenChangeConditionModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.WhenChangeConditionModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.WhenChangeConditionModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.WhenChangeConditionModel.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.WhenChangeConditionModel.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </summary>
      <param name="row">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>row</parameter>
            <parameter>M:iTin.Export.Model.WhenChangeConditionModel.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="col">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:iTin.Export.Model.WhenChangeConditionModel.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="target">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:iTin.Export.Model.WhenChangeConditionModel.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.WhenChangeConditionModel.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.WhenChangeConditionModel.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.WhenChangeConditionModel.Empty">
      <summary>
            Gets an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.WhenChangeConditionModel.FirstSwapStyle">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.WhenChangeConditionModel.FirstSwapStyle</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.WhenChangeConditionModel.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.WhenChangeConditionModel.IsEmpty">
      <summary>
            Gets a value indicating whether this condition is an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.WhenChangeConditionModel.SecondSwapStyle">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.WhenChangeConditionModel.SecondSwapStyle</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Model.WriterModel">
      <summary>
            A Specialization of <see cref="T:iTin.Export.Model.WriterModelBase" /> class.<br />
            Which acts as the base class for different writers.<br />
            Represents an exporter based on a custom writer.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.WriterModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.WriterModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.WriterModel.Name">
      <summary>
            Gets or sets the name of the writer.
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidIdentifierNameException">If <paramref name="value" /> not is a valid identifier.</exception>
    </member>
    <member name="T:iTin.Export.Model.WriterModelBase">
      <summary>
            Base class for different types of writers.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.WriterModelBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.WriterModelBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.WriterModelBase.Filter">
      <summary>
            Gets or sets a referenceto set of properties that allow you to specify a writer.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.XsltExtensions">
      <summary>
            Static class that contains helper extension methods for objects <see cref="T:System.Xml.XmlWriter" /> that allows create <strong>Xslt</strong> sentences easily.
            </summary>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltEndChoose(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltEndIf(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltEndOtherwise(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltEndVariable(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltEndWhen(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltStartChoose(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltStartIf(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltStartIf(System.Xml.XmlWriter,System.String)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
      <param name="condition">The condition.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltStartOtherwise(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltStartVariable(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltStartVariable(System.Xml.XmlWriter,System.String)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
      <param name="name">The condition.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltStartWhen(System.Xml.XmlWriter)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:iTin.Export.Model.XsltExtensions.WriteXsltStartWhen``1(System.Xml.XmlWriter,System.String,``0)">
      <summary>
            Gets the appropriate formula for this aggregate.
            </summary>
      <param name="writer">The writer.</param>
      <param name="test">The condition.</param>
      <param name="testok">The test true.</param>
      <typeparam name="T">Test data type</typeparam>
    </member>
    <member name="T:iTin.Export.Model.XsltModel">
      <summary>
            Represents an exporter based on xslt transformation file.
            </summary>
      <typeparam name="T">Represents a model node type</typeparam>
    </member>
    <member name="M:iTin.Export.Model.XsltModel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.XsltModel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:iTin.Export.Model.XsltModel.File">
      <summary>
            Gets or sets the xslt file. To specify a relative path use the character (~).
            </summary>
      <exception cref="T:System.ArgumentNullException">If <paramref name="value" /> is <strong>null</strong>.</exception>
      <exception cref="T:iTin.Export.Model.InvalidPathNameException">If <paramref name="value" /> is an invalid path name.</exception>
    </member>
    <member name="T:iTin.Export.Model.YesNo">
      <summary>
            Represents a boolean value.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.YesNo.Yes">
      <summary>
            Represents the boolean value <strong>true</strong>.
            </summary>
    </member>
    <member name="F:iTin.Export.Model.YesNo.No">
      <summary>
            Represents the boolean value <strong>false</strong>.
            </summary>
    </member>
    <member name="T:iTin.Export.Model.ZeroCondition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:iTin.Export.Model.ZeroCondition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ZeroCondition.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Model.ZeroCondition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Model.ZeroCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:iTin.Export.Model.ZeroCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </summary>
      <param name="row">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>row</parameter>
            <parameter>M:iTin.Export.Model.ZeroCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="col">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:iTin.Export.Model.ZeroCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <param name="target">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:iTin.Export.Model.ZeroCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:iTin.Export.Model.ZeroCondition.Apply(System.Int32,System.Int32,iTin.Export.ComponentModel.FieldValueInformation)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:iTin.Export.Model.ZeroCondition.Clone">
      <summary>
            Clones this instance.
            </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="P:iTin.Export.Model.ZeroCondition.Empty">
      <summary>
            Gets an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ZeroCondition.IsDefault">
      <summary>
            Gets a value indicating whether this instance is default.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ZeroCondition.IsEmpty">
      <summary>
            Gets a value indicating whether this condition is an empty condition.
            </summary>
    </member>
    <member name="P:iTin.Export.Model.ZeroCondition.Style">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:iTin.Export.Model.ZeroCondition.Style</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:iTin.Export.Providers.DataSetProvider">
      <summary>
            Implements interface <see cref="T:iTin.Export.ComponentModel.Provider.IProvider" />.
            Represents a source object based on the <see cref="T:System.Data.DataSet" />.
            </summary>
    </member>
    <member name="M:iTin.Export.Providers.DataSetProvider.#ctor(iTin.Export.ComponentModel.Provider.ProviderParameters)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Providers.DataSetProvider" /> class.
            </summary>
      <param name="constructorParams">The constructor parameters.</param>
    </member>
    <member name="M:iTin.Export.Providers.DataSetProvider.#ctor(System.Data.DataSet)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Providers.DataSetProvider" /> class.
            </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> object than contains the information.</param>
    </member>
    <member name="P:iTin.Export.Providers.DataSetProvider.CanCreateInputXml">
      <summary>
            Gets a value indicating whether you can create an <strong>Xml</strong> file from the current instance of the object.
            </summary>
    </member>
    <member name="P:iTin.Export.Providers.DataSetProvider.CanGetDataTable">
      <summary>
            Gets a value indicating whether this instance can get data table.
            </summary>
    </member>
    <member name="M:iTin.Export.Providers.DataSetProvider.OnCreateInputXml">
      <summary>
            Concrete implementation by object type.
            </summary>
    </member>
    <member name="M:iTin.Export.Providers.DataSetProvider.OnGetDataTable">
      <summary>
            Gets a reference to the <see cref="T:System.Data.DataTable" /> object that contains the data this instance.
            </summary>
      <returns>
            Reference to the <see cref="T:System.Data.DataTable" /> object.
            </returns>
    </member>
    <member name="T:iTin.Export.Providers.XmlProvider">
      <summary>
            A Specialization of <see cref="T:iTin.Export.ComponentModel.BaseAdapter" /> than represents a source object based on the <c>Xml</c>.
            </summary>
    </member>
    <member name="M:iTin.Export.Providers.XmlProvider.#ctor(iTin.Export.ComponentModel.Provider.ProviderParameters)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Providers.XmlProvider" /> class.
            </summary>
      <param name="constructorParams">The constructor parameters.</param>
    </member>
    <member name="M:iTin.Export.Providers.XmlProvider.#ctor(System.Uri)">
      <summary>
            Initializes a new instance of the <see cref="T:iTin.Export.Providers.XmlProvider" /> class.
            </summary>
      <param name="inputUri">Target uri</param>
    </member>
    <member name="T:iTin.Export.Writers.CsvWriter">
      <summary>
            Represents custom writer for Comma-Seperated Values (csv format).    
            </summary>
    </member>
    <member name="M:iTin.Export.Writers.CsvWriter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Writers.CsvWriter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Writers.CsvWriter.Execute">
      <summary>
            Generates output in <c>CSV</c> format.
            </summary>
    </member>
    <member name="T:iTin.Export.Writers.MarkdownWriter">
      <summary>
            Represents custom writer for tab delimited text (txt format).
            </summary>
    </member>
    <member name="M:iTin.Export.Writers.MarkdownWriter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Writers.MarkdownWriter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Writers.MarkdownWriter.Execute">
      <summary>
            Generates the output in tab-separated values ​​format.
            </summary>
    </member>
    <member name="T:iTin.Export.Writers.Spreadsheet2003TabularWriter">
      <summary>
            Represents a custom XML Spreadsheet 2003 tabular writer.
            </summary>
    </member>
    <member name="M:iTin.Export.Writers.Spreadsheet2003TabularWriter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Writers.Spreadsheet2003TabularWriter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Writers.Spreadsheet2003TabularWriter.Execute">
      <summary>
            Generates output in MS Excel format.
            </summary>
    </member>
    <member name="P:iTin.Export.Writers.Spreadsheet2003TabularWriter.Host">
      <summary>
            Gets a reference to the current host model.
            </summary>
    </member>
    <member name="P:iTin.Export.Writers.Spreadsheet2003TabularWriter.IsTransformationFile">
      <summary>
            Gets a value indicating that this writer generates a transformation file to be processed later.
            </summary>
    </member>
    <member name="P:iTin.Export.Writers.Spreadsheet2003TabularWriter.ResponseEx">
      <summary>
            Gets a reference to an object <see cref="T:iTin.Export.AspNet.ComponentModel.HttpResponseEx" /> than contains the <strong>MIME</strong> type of the output stream and response header for a <strong>ASP.NET</strong> operation.
            </summary>
    </member>
    <member name="T:iTin.Export.Writers.SqlScriptWriter">
      <summary>
            Represents custom writer for SQL script (SQL format). 
            </summary>
    </member>
    <member name="M:iTin.Export.Writers.SqlScriptWriter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Writers.SqlScriptWriter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Writers.SqlScriptWriter.Execute">
      <summary>
            Generates <c>SQL</c> script.
            </summary>
    </member>
    <member name="T:iTin.Export.Writers.TsvWriter">
      <summary>
            Represents custom writer for tab delimited text (txt format).
            </summary>
    </member>
    <member name="M:iTin.Export.Writers.TsvWriter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>iTin.Export.Writers.TsvWriter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:iTin.Export.Writers.TsvWriter.Execute">
      <summary>
            Generates the output in tab-separated values ​​format.
            </summary>
    </member>
  </members>
</doc>