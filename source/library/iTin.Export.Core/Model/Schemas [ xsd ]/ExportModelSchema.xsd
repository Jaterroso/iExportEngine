<?xml version="1.0" encoding="utf-8"?>

<xs:schema id="ExportConfigurationSchema"
           targetNamespace="http://schemas.itin.com/export/engine/2014/configuration/v1.0"
           elementFormDefault="qualified"
           xmlns="http://schemas.itin.com/export/engine/2014/configuration/v1.0"
           xmlns:mstns="http://schemas.itin.com/export/engine/2014/configuration/v1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           version="1.0">

  <!-- Base types -->
  <xs:include schemaLocation="ExportModelSharedTypes.xsd" />

  <!-- Exports element -->
  <xs:element name="Exports" type="ExportsModel" />

  <!-- Exports -->
  <xs:complexType name="ExportsModel" id="ExportsModel">
    <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
      <xs:documentation xml:lang="en">
        Root element of iTin Export Engine (ITEE) configuration file that contains a collection of export configurations. Each element is composed of a description and a data table definition.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="References" type="ReferencesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of assembly references. Each element is an assembly reference.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Global.Resources" type="GlobalResourcesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines a common resources for exports.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Export" type="ExportModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines an export with a description and a data table definition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this root node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Exports: References -->
  <xs:complexType name="ReferencesModel" id="ReferencesModel">
    <xs:sequence>
      <xs:element name="Reference" type="ReferenceModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            An assembly reference.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- References: Reference -->
  <xs:complexType name="ReferenceModel" id="ReferenceModel">
    <xs:attribute name="Assembly" type="xs:string" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Assembly reference. The default is an empty string ("").
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Path" use="optional" default="Default">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Path where is located the assembly. To specify a relative path use the character (~). The default is 'Default'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="referencePathAttribute">
        <xs:union memberTypes="KnownDefaultPathValue pathType" />
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Exports: Resources -->
  <xs:complexType name="GlobalResourcesModel" id="GlobalResourcesModel">
    <xs:all>
      <xs:element name="Hosts" type="HostsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of user-defined groups. Each element is result from the union of several data field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Groups" type="GroupsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of user-defined groups. Each element is result from the union of several data field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Fixed" type="FixedModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of user-defined pieces. Each element is a collection of smaller pieces result of splitting the reference field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Images" type="ImagesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of image resources. Each element defines the image path, collection of effects and flip mode to apply.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Lines" type="LinesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of lines. Each element defines a line.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Styles" type="StylesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of user-defined styles. Each element defines type of content, such as the background color, the alignment type, the data type and the font type.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Conditions" type="ConditionsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of field conditions defined by the user. Each element defines a field condition
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Filters" type="DataFiltersModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of field filters defined by the user. Each element defines a field filter
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>


  <!-- Resources: Headers -->
  <xs:complexType name="ColumnHeadersModel" id="ColumnHeadersModel">
    <xs:sequence>
      <xs:element name="Header" type="ColumnHeader" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines column headers.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Headers: Header -->
  <xs:complexType name="ColumnHeader" id="ColumnHeader">
    <xs:all>
      <xs:element name="Group" type="ColumnHeaderGroup" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines group column behavior.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="From" type="xs:string" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Field which represents the begin column
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="To" type="xs:string" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Field which represents the end column
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Style" type="ElementNameString" default="Default" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Name of a style defined in the list of styles. The default is 'Default'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the columns headers. The default 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Text" type="xs:string" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Columns header text. The default is an empty string.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Header: Group -->
  <xs:complexType name="ColumnHeaderGroup" id="ColumnHeaderGroup">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Collapsed" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Indicates whether group its show as collapsed. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Level" type="xs:nonNegativeInteger" use="optional" default="1">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Defines the depth level of the group. The default is '1'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the column group. The default 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Resources: Hosts -->
  <xs:complexType name="HostsModel" id="HostsModel">
    <xs:sequence>
      <xs:element name="Host" type="HostModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Hosts: Host -->
  <xs:complexType name="HostModel" id="HostModel">
    <xs:all>
      <xs:element name="Document" type="DocumentModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a document. Allow define size, orientation and margins.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Key" type="xs:string" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] The alias of the table. The default is an empty string ("").
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Host: Document -->
  <xs:complexType name="DocumentModel" id="DocumentModel">
    <xs:all>
      <xs:element name="Metadata" type="DocumentMetadataModel" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Contains information related to footers.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Footer" type="DocumentHeaderFooterModel" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Contains information related to footers.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Header" type="DocumentHeaderFooterModel" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Contains information related to headers.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Margins" type="MarginsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents margins of a document. Allow define top margin, right margin, bottom margin and left margin of a document.
            All margins are measured in mm.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Size" use="optional" default="A4">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred size of document. The default is 'A4'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownDocumentSize">
        <xs:restriction base="xs:string">
          <xs:enumeration value="A0">
            <xs:annotation>
              <xs:documentation>DIN A0. (841 × 1189)mm, (33.11 × 46.81)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A1">
            <xs:annotation>
              <xs:documentation>DIN A1. (594 × 841)mm, (23.39 × 33.11) in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A2">
            <xs:annotation>
              <xs:documentation>DIN A2. (420 × 594)mm, (16.54 × 23.39)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A3">
            <xs:annotation>
              <xs:documentation>DIN A3. (297 × 420)m, (11.69 × 16.54)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A4">
            <xs:annotation>
              <xs:documentation>DIN A4. (210 × 297)mm, (8.27 × 11.69)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A5">
            <xs:annotation>
              <xs:documentation>DIN A5. (148.5 × 210)mm, (5.83 × 8.27)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A6">
            <xs:annotation>
              <xs:documentation>DIN A6. (105 × 148.5)mm, (4.13 × 5.83)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A7">
            <xs:annotation>
              <xs:documentation>DIN A7. (74 × 105)mm, (2.91 × 4.13)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A8">
            <xs:annotation>
              <xs:documentation>DIN A8. (52 × 74)mm, (2.05 × 2.91)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A9">
            <xs:annotation>
              <xs:documentation>DIN A9. (37 × 52)mm, (1.46 × 2.05)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="A10">
            <xs:annotation>
              <xs:documentation>DIN A10. (26 × 37)mm, (1.02 × 1.46)in</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Executive">
            <xs:annotation>
              <xs:documentation>Executive</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="HalfLetter">
            <xs:annotation>
              <xs:documentation>Half letter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Letter">
            <xs:annotation>
              <xs:documentation>Letter</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Note">
            <xs:annotation>
              <xs:documentation>Note</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PostCard">
            <xs:annotation>
              <xs:documentation>PostCard</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Orientation" use="optional" default="Portrait">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies whether the page orientation is portrait or landscape. The default is 'Portrait'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownDocumentOrientation">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Portrait">
            <xs:annotation>
              <xs:documentation>Portrait orientation.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Landscape">
            <xs:annotation>
              <xs:documentation>Landscape orientation.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="View" use="optional" default="Normal">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies the document view mode. The default is 'Normal'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownDocumentView">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Normal">
            <xs:annotation>
              <xs:documentation>Shows the document in default mode.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Design">
            <xs:annotation>
              <xs:documentation>Shows the document in layout mode.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Print">
            <xs:annotation>
              <xs:documentation>Shows the document in print mode.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Document: HeaderFooter -->
  <xs:complexType name="DocumentHeaderFooterModel" id="DocumentHeaderFooterModel">
    <xs:all>
      <xs:element name="Sections" type="HeaderFooterSectionsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Contains information related to headers or footer sections.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- HeaderFooter: Sections -->
  <xs:complexType name="HeaderFooterSectionsModel" id="HeaderFooterSectionsModel">
    <xs:sequence>
      <xs:element name="Section" type="HeaderFooterSectionModel" minOccurs="1" maxOccurs="6">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Sections: Section -->
  <xs:complexType name="HeaderFooterSectionModel" id="HeaderFooterSectionModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Text" type="xs:string" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Section text The default is an empty string ("").
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Alignment" use="optional" default="Center">
      <xs:annotation>
        <xs:documentation>[Optional] Specifies ... The default is 'Center'.</xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownHeaderFooterAlignment2">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Right">
            <xs:annotation>
              <xs:documentation>Right alignment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Center">
            <xs:annotation>
              <xs:documentation>Center alignment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Left">
            <xs:annotation>
              <xs:documentation>Left alignment</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Type" use="optional" default="Odd">
      <xs:annotation>
        <xs:documentation>Specifies ... The default is 'Odd'.</xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownHeaderFooterSectionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Odd">
            <xs:annotation>
              <xs:documentation>Odd</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Even">
            <xs:annotation>
              <xs:documentation>Even</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>



  <!-- Document: Metadata -->
  <xs:complexType name="DocumentMetadataModel" id="DocumentMetadataModel">
    <xs:all>
      <xs:element name="Title" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document title.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Subject" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document subject.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Author" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document author.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Manager" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document manager.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Company" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document company.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Category" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document category.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Keywords" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document keywords.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Comments" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document comments.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Url" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Document hyperlink base.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Document: Header -->
  <!--
    <xs:complexType name="MarginsModel" id="MarginsModel">
      <xs:all>
        <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines custom properties for this table node. Contains a list of keys item with name / value.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:all>
      <xs:attribute name="Units" use="optional" default="Millimeters">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            [Optional] Preferred units of margins. The default is 'Millimeters'.
          </xs:documentation>
        </xs:annotation>
        <xs:simpleType id="KnownUnit">
          <xs:restriction base="xs:string">
            <xs:enumeration value="Inches">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  Margins measured in inches
                </xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Millimeters">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  Margins measured in millimeters
                </xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="Top" type="xs:double" use="optional" default="20">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            [Optional] Specifies the size in millimeters of the top margin. The default is '20'.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Right" type="xs:double" use="optional" default="20">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            [Optional] Specifies the size in millimeters of the right margin. The default is '20'.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Bottom" type="xs:double" use="optional" default="20">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            [Optional] Specifies the size in millimeters of the bottom margin. The default is '20'.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Left" type="xs:double" use="optional" default="20">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            [Optional] Specifies the size in millimeters of the left margin. The default is '20'.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>-->

  <!-- Document: Margins -->
  <xs:complexType name="MarginsModel" id="MarginsModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Units" use="optional" default="Millimeters">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred units of margins. The default is 'Millimeters'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownUnit">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Inches">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Margins measured in inches
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Millimeters">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Margins measured in millimeters
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Top" type="xs:double" use="optional" default="20">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies the size in millimeters of the top margin. The default is '20'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Right" type="xs:double" use="optional" default="20">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies the size in millimeters of the right margin. The default is '20'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Bottom" type="xs:double" use="optional" default="20">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies the size in millimeters of the bottom margin. The default is '20'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Left" type="xs:double" use="optional" default="20">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies the size in millimeters of the left margin. The default is '20'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>


  <!-- Resources: Images -->
  <xs:complexType name="ImagesModel" id="ImagesModel">
    <xs:sequence>
      <xs:element name="Image" type="ImageModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the image path, collection of effects and flip mode to apply.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Images: Image -->
  <xs:complexType name="ImageModel" id="ImageModel">
    <xs:all>
      <xs:element name="Effects" type="ImageEffectsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of effects to apply to an image. Each element is an image effect.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Flip" type="FlipModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines flip style to apply to an image.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Path" type="pathType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The image file path. To specify a relative path use the character (~).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this chart node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Key" type="xs:string" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred back color. The default is 'White'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Image: Effects -->
  <xs:complexType name="ImageEffectsModel" id="ImageEffectsModel">
    <xs:group ref="EffectTypes" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <!-- Image: Flip -->
  <xs:complexType name="FlipModel" id="FlipModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this element. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Mode" use="optional" default="None">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Use this attribute to specify the horizontal and vertical flip style applied to an image. The default is 'None'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownFlipStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>None.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="X">
            <xs:annotation>
              <xs:documentation>Horizontal flip.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Y">
            <xs:annotation>
              <xs:documentation>Vertical flip.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="XY">
            <xs:annotation>
              <xs:documentation>Horizontal and vertical flip.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Effects: Types -->
  <xs:group id="EffectTypes" name="EffectTypes">
    <xs:all>
      <xs:element name="Disabled" type="DisabledEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GrayScale" type="GrayScaleEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GrayScaleRed" type="GrayScaleRedEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GrayScaleGreen" type="GrayScaleGreenEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="GrayScaleBlue" type="GrayScaleBlueEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Brightness" type="BrightnessEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MoreBrightness" type="MoreBrightnessEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Dark" type="DarkEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MoreDark" type="MoreDarkEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Opacity" type="OpacityEffectModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:group>

  <!-- Effects: Disabled -->
  <xs:complexType name="DisabledEffectModel" id="DisabledEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: GrayScale -->
  <xs:complexType name="GrayScaleEffectModel" id="GrayScaleEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: GrayScaleRed -->
  <xs:complexType name="GrayScaleRedEffectModel" id="GrayScaleRedEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: GrayScaleGreen -->
  <xs:complexType name="GrayScaleGreenEffectModel" id="GrayScaleGreenEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: GrayScaleBlue -->
  <xs:complexType name="GrayScaleBlueEffectModel" id="GrayScaleBlueEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: Brightness -->
  <xs:complexType name="BrightnessEffectModel" id="BrightnessEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: MoreBrightness -->
  <xs:complexType name="MoreBrightnessEffectModel" id="MoreBrightnessEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: Dark -->
  <xs:complexType name="DarkEffectModel" id="DarkEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: MoreDark -->
  <xs:complexType name="MoreDarkEffectModel" id="MoreDarkEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Effects: Opacity -->
  <xs:complexType name="OpacityEffectModel" id="OpacityEffectModel">
    <xs:complexContent>
      <xs:extension base="BaseEffectModel">
        <xs:attribute name="percent" use="optional" default="100">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Determines whether transform the file is saved indented. The default is 'Yes'.
            </xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:float">
              <xs:minInclusive value="0.00" />
              <xs:maxInclusive value="100.00" />
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


  <!-- Resources: Lines -->
  <xs:complexType name="LinesModel" id="LinesModel">
    <xs:sequence>
      <xs:group ref="LineType" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <!-- Lines: Types -->
  <xs:group id="LineType" name="LineType">
    <xs:choice>
      <xs:element name="EmptyLine" type="EmptyLineModel"  minOccurs="0" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents an empty line.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TextLine" type="TextLineModel" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a text line.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <!-- Lines: EmptyLine -->
  <xs:complexType name="EmptyLineModel" id="EmptyLineModel">
    <xs:complexContent>
      <xs:extension base="BaseLineModel">
        <xs:attribute name="Merge" type="xs:nonNegativeInteger" default="0" use="optional">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <documentation xml:lang="en">
              [Optional] . The default is '0'.
            </documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>

  </xs:complexType>

  <!-- Lines: TextLine -->
  <xs:complexType name="TextLineModel" id="TextLineModel">
    <xs:complexContent>
      <xs:extension base="BaseLineModel">
        <xs:sequence>
          <xs:element name="Text" type="TextModel" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Defines
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- TextLine: Text -->
  <xs:complexType name="TextModel" id="TextModel" mixed="true">
    <xs:attribute name="Merge" type="xs:nonNegativeInteger" default="0" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] . The default is '0'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" default="Yes" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Determines visibility of the element. The default is 'Yes'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Style" type="ElementNameString" default="Default" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Name of a style defined in the list of styles. The default is 'Default'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>


  <!-- Resources: Conditions -->
  <xs:complexType name="ConditionsModel" id="ConditionsModel">
    <xs:group ref="ConditionsType" minOccurs="1" maxOccurs="unbounded" />
  </xs:complexType>

  <!-- Conditions: Types -->
  <xs:group id="ConditionsType" name="ConditionsType">
    <xs:choice>
      <xs:element name="MaximumCondition" type="MaximumCondition"  minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a field condition. Defines the style that will be applied to the value of the field when its value is the maximum
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MinimumCondition" type="MinimumCondition"  minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a field condition. Defines the style that will be applied to the value of the field when its value is the minimum
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="RemarksCondition" type="RemarksCondition"  minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a field condition. Defines the style that will be applied to the value of the field when it changes its value
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="WhenChangeCondition" type="WhenChangeCondition"  minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a field condition. Defines the style that will be applied to the value of the field when it changes its value
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ZeroCondition" type="ZeroCondition"  minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a field condition. Defines the style that will be applied to the value of the field when its value is zero
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>



  <!-- Conditions: MaximumCondition -->
  <xs:complexType name="MaximumCondition" id="MaximumCondition">
    <xs:complexContent>
      <xs:extension base="BaseConditionModel">
        <xs:attribute name="Style" type="ElementNameString" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              The name of the style that will be applied when the condition occurs. Only strings composed of letters, numbers and special characters Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Conditions: MinimumCondition -->
  <xs:complexType name="MinimumCondition" id="MinimumCondition">
    <xs:complexContent>
      <xs:extension base="BaseConditionModel">
        <xs:attribute name="Style" type="ElementNameString" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              The name of the style that will be applied when the condition occurs. Only strings composed of letters, numbers and special characters Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Conditions: RemarksCondition -->
  <xs:complexType name="RemarksCondition" id="RemarksCondition">
    <xs:complexContent>
      <xs:extension base="BaseConditionModel">
        <xs:attribute name="Criterial" type="operatorType" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines the condition to be checked for the specified field.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Value" type="xs:string" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines the field value to evaluate.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Style" type="ElementNameString" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              The name of the style that will be applied when the condition occurs. Only strings composed of letters, numbers and special characters Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <!-- Conditions: WhenChangeCondition -->
  <xs:complexType name="WhenChangeCondition" id="WhenChangeCondition">
    <xs:complexContent>
      <xs:extension base="BaseConditionModel">
        <xs:attribute name="FirstSwapStyle" type="ElementNameString" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              The name of first style that will be applied when the condition occurs. Only strings composed of letters, numbers and special characters Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SecondSwapStyle" type="xs:string" use="optional" default="">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              The name of second style that will be applied when the condition occurs. Only strings composed of letters, numbers and special characters Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Conditions: ZeroCondition -->
  <xs:complexType name="ZeroCondition" id="ZeroCondition">
    <xs:complexContent>
      <xs:extension base="BaseConditionModel">
        <xs:attribute name="Style" type="ElementNameString" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              The name of the style that will be applied when the condition occurs. Only strings composed of letters, numbers and special characters Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>



  <!-- Resources: Filters -->
  <xs:complexType name="DataFiltersModel" id="DataFiltersModel">
    <xs:sequence>
      <xs:element name="Filter" type="DataFilterModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Filters: Filter -->
  <xs:complexType name="DataFilterModel" id="DataFilterModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Key" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Define the identifier that represents this filter.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Field" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Represents the name of the filter field.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Criterial" type="operatorType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Defines the filter criterial to be evalated for the specified field.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Value" type="xs:string" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Defines the filter value.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Active" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether this filter will be evaluate. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>


  <!-- Exports: Export -->
  <xs:complexType name="ExportModel" id="ExportModel">
    <xs:all>
      <xs:element name="Description" type="xs:string" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Description of the export.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BlockLines" type="BlockLinesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of user-defined lines. Each element is a block-lines definition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Table" type="TableModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Includes the description of export data table
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this export node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Current" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines if is the current export. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Name" type="ElementNameString" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name of export.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Export: BlockLines -->
  <xs:complexType name="BlockLinesModel" id="BlockLinesModel">
    <xs:sequence>
      <xs:element name="Block" type="BlockLineModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of user-defined lines and his location into the host.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Lines: Block -->
  <xs:complexType name="BlockLineModel" id="BlockLineModel">
    <xs:sequence>
      <xs:element name="Location" type="LocationModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the location of user-defined lines into the host, this can be by coordinates or by type of alignment, depending whether the host has or not a tabular format.
            You can only choose one of the modes. If this tag is not defined, the default is by coordinates.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Items" type="BlockLineItemModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a list of user-defined lines.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Key" type="xs:string" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Key of user-defined lines.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" default="Yes" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Determines visibility of the element. The default is 'Yes'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Block: Items -->
  <xs:complexType name="BlockLineItemModel" id="BlockLineItemModel">
    <xs:attribute name="Keys" type="stringArrayType">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          Determines visibility of the element. The default is 'Yes'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Export: Table -->
  <xs:complexType name="TableModel" id="TableModel">
    <xs:all>
      <xs:element name="Conditions" type="ConditionItemsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Exporter" type="ExporterModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the type of exporter to use and their behavior.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Headers" type="ColumnHeadersModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of column headers. Each element defines begin, end field, style and text.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Location" type="LocationModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the location of the table in the host, this can be by coordinates or by type of alignment, depending whether the host has or not a tabular format.
            You can only choose one of the modes. If this tag does not define the defaults is by coordinates
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Logo" type="LogoModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines logo configuration, includes image file path, size, location, effects and visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Output" type="OutputModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines output configuration, includes path, file name and optionaly the target operating system.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Styles" type="StylesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of user-defined styles. Each element defines type of content, such as the background color, the alignment type, the data type and the font type.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Groups" type="GroupsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of user-defined groups. Each element is result from the union of several data field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Fields" type="FieldsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of data fields. Each element is a data field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Fixed" type="FixedModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of user-defined pieces. Each element is a collection of smaller pieces result of splitting the reference field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Charts" type="ChartsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of user-defined charts. Each element represents a user-defined chart.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Alias" type="freeStringType" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] The alias of the table. The default is an empty string ("").
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AutoFilter" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the AutoFilter. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AutoFitColumns" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether adjusts column width automatically. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Host" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Name of the table. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # * @ % $'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Name" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Name of the table. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # * @ % $'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ShowGridLines" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether shows grid lines. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ShowColumnHeaders" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether shows column headers. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Filter" type="freeStringType" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] The table data filter. The default is an empty string ("").
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FreezePanes" type="FreezePanesAttribute" use="optional" default="1 1">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Allows freezes the columns/rows to left and above the cell. The default is (1 1).
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Table: Logo -->
  <xs:complexType name="LogoModel" id="LogoModel">
    <xs:all>
      <xs:element name="Image" type="LogoImageModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines a image resource to use for a logo.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Location" type="LocationModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the location of the logo in the host, this can be by coordinates or by type of alignment, depending whether the host has or not a tabular format.
            You can only choose one of the modes. If this tag does not define the defaults is by coordinates.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this chart node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Size" type="SpecialSizeAttribute" use="optional" default="-1 -1">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred size of the logo. The default is '-1 -1', indicates original size of logo.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the logo. The default 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Logo: Image -->
  <xs:complexType name="LogoImageModel" id="LogoImageModel">
    <xs:attribute name="Key" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The key of image resource
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Table: Charts -->
  <xs:complexType name="ChartsModel" id="ChartsModel">
    <xs:sequence>
      <xs:group ref="ChartType" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <!-- Table: Conditions -->
  <xs:complexType name="ConditionItemsModel" id="ConditionItemsModel">
    <xs:attribute name="Keys" type="stringArrayType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Array of key conditions. Represents one of the conditions defined in the resource area.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Table: Exporter -->
  <xs:complexType name="ExporterModel" id="ExporterModel">
    <xs:sequence>
      <xs:choice>
        <xs:element name="Template" type="TemplateModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents an exporter based on a template file.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Writer" type="WriterModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents an exporter based on a custom writer.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Xslt" type="XsltModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents an exporter based on xslt transformation file.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Behaviors" type="BehaviorsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of writer behaviors. Each element is a writer behavior, it execute after export.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Table: Fields -->
  <xs:complexType name="FieldsModel" id="FieldsModel">
    <xs:sequence>
      <xs:group ref="FieldType" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>   
  </xs:complexType>

  <xs:complexType name="PivotModel" id="PivotModel">
    <xs:sequence>
      <xs:element name="Location" type="LocationModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of pieces. Each element is a new collection of smaller fields resulting from splitting a reference field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Table: Fixed -->
  <xs:complexType name="FixedModel" id="FixedModel">
    <xs:sequence>
      <xs:element name="Pieces" type="PiecesModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of pieces. Each element is a new collection of smaller fields resulting from splitting a reference field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Table: Groups -->
  <xs:complexType name="GroupsModel" id="GroupsModel">
    <xs:sequence>
      <xs:element name="Group" type="GroupModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains a collection of field names. Each element is result of the union of a field list.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Table: Styles -->
  <xs:complexType name="StylesModel" id="StylesModel">
    <xs:sequence>
      <xs:element name="Style" type="StyleModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines type of content, such as the background color, the alignment type, the data type and the font type.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Table: Output -->
  <xs:complexType name="OutputModel" id="OutputModel">
    <xs:all>
      <xs:element name="Path" type="pathType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The output file path. To specify a relative path use the character (~).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="File" type="freeStringType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The output file name without extension. The following chars are not allowed '&lt; &gt; | " : * \ ? /'
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this output node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Target" use="optional" default="Windows">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Use this attribute to specify target operating system. The default is 'Windows'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownOutputTarget">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Windows">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Windows file
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MacOS">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                MacOS file
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DOS">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                DOS file
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>


  <!-- Exporter: Template -->
  <xs:complexType name="TemplateModel" id="TemplateModel">
    <xs:all>
      <xs:element name="File" type="pathType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Sets template file name. To specify a relative path Use the character (~).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Writer" type="TemplateWriterModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Specifies the writer template for to use.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this template node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Exporter: Writer -->
  <xs:complexType name="WriterModel" id="WriterModel">
    <xs:complexContent>
      <xs:extension base="WriterBaseModel">
        <xs:attribute name="Name" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Name of the writer. Select from the list or create your own and use it.
            </xs:documentation>
          </xs:annotation>
          <xs:simpleType id="writerNameAttribute">
            <xs:union memberTypes="KnownWriterName xs:string" />
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Exporter: Xslt -->
  <xs:complexType name="XsltModel" id="XsltModel">
    <xs:all>
      <xs:element name="File" type="pathType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The xslt file. To specify a relative path use the character (~).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this xslt node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Exporter: Behavior -->
  <xs:complexType name="BehaviorsModel" id="BehaviorsModel">
    <xs:group ref="BehaviorType" minOccurs="0" maxOccurs="1" />
  </xs:complexType>

  <!-- Template: Writer -->
  <xs:complexType name="TemplateWriterModel" id="TemplateWriterModel">
    <xs:complexContent>
      <xs:extension base="WriterModel">
        <xs:sequence>
          <xs:element name="Settings" type="TemplateWriterSettingsModel" minOccurs="0" maxOccurs="1">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Settings defined for this writer.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Template: Writer: Settings -->
  <xs:complexType name="TemplateWriterSettingsModel" id="TemplateWriterSettingsModel">
    <xs:attribute name="FieldPrefix" type="freeStringType" use="optional" default="@@">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] The preferred previous delimiter for field. The default is '@@'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FieldSufix" type="freeStringType" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] The preferred posterior delimiter for field. The default is an empty string ("").
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="RecordsToShow" use="optional" default="All">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Number of affected records. The default is 'All'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownRecordToShow">
        <xs:restriction base="xs:string">
          <xs:enumeration value="All">
            <xs:annotation>
              <xs:documentation>All records</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="First">
            <xs:annotation>
              <xs:documentation>First record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Last">
            <xs:annotation>
              <xs:documentation>Last record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Random">
            <xs:annotation>
              <xs:documentation>Random record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="TrimFields" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether to apply string trim mode. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TrimMode" type="KnownTrimMode" use="optional" default="All">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Use this attribute to specify trim mode for strings. The default is 'All'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Behaviors: Types -->
  <xs:group id="BehaviorType" name="BehaviorType">
    <xs:all>
      <xs:element name="Download" type="DownloadBehaviorModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents download behavior. Applies only in web mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Mail" type="MailBehaviorModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a email list behavior.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TransformFile" type="TransformFileBehaviorModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a transform file behavior. If the writer that we are using generates a Xml transform file,
            this element allows us to define their behavior. Allows indicate if you want save it,
            where and if Xml code generated will indented.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ToDropbox" type="ToDropboxBehaviorModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a upload file behavior to Dropbox cloud service. Upload the result of export to Dropbox.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ToSkyDrive" type="ToSkyDriveBehaviorModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a upload file behavior to SkyDrive cloud service. Upload the result of export to Microsoft SkyDrive.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:group>

  <!-- Behaviors: Download -->
  <xs:complexType name="DownloadBehaviorModel" id="DownloadBehaviorModel">
    <xs:complexContent>
      <xs:extension base="BaseBehaviordModel">
        <xs:attribute name="LocalCopy" type="YesNo" use="optional" default="No">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Determines whether saves local copy. The default is 'No'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Behaviors: Mail -->
  <xs:complexType name="MailBehaviorModel" id="MailBehaviorModel">
    <xs:complexContent>
      <xs:extension base="BaseBehaviordModel">
        <xs:sequence>
          <xs:element name="Server" type="MailServerModel" minOccurs="1" maxOccurs="1">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Mail server configuration.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Messages" type="MailMessagesModel" minOccurs="1" maxOccurs="1">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Collection of e-mail messages. Each element represents an e-mail message.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="Async" type="YesNo" use="optional" default="Yes">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Determines whether to execute asynchronously the behavior. The default is 'Yes'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Behaviors: ToDropbox -->
  <xs:complexType name="ToDropboxBehaviorModel" id="ToDropboxBehaviorModel">
    <xs:complexContent>
      <xs:extension base="BaseBehaviordModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Behaviors: ToSkyDrive -->
  <xs:complexType name="ToSkyDriveBehaviorModel" id="ToSkyDriveBehaviorModel">
    <xs:complexContent>
      <xs:extension base="BaseBehaviordModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Behaviors: TransformFile -->
  <xs:complexType name="TransformFileBehaviorModel" id="TransformFileBehaviorModel">
    <xs:complexContent>
      <xs:extension base="BaseBehaviordModel">
        <xs:attribute name="Indented" type="YesNo" use="optional" default="Yes">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Determines whether transform the file is saved indented. The default is 'Yes'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Path" use="optional" default="Default">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Sets the file path of transformation, if omitted used the same output element path.
              The default is 'Default'. Applies only in desktop mode. To specify a relative path use the character (~).
            </xs:documentation>
          </xs:annotation>
          <xs:simpleType id="transformFileBehaviorPathAttribute">
            <xs:union memberTypes="KnownDefaultPathValue pathType" />
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="Save" type="YesNo" use="optional" default="No">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] If the writer has been designed to generate transform files, set this attribute to Yes for get a copy of the file. The default is 'No'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Mail: Server -->
  <xs:complexType name ="MailServerModel" id="MailServerModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this writer filter node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Credentials" type="ServerCredentialsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of mail server credentials authentication. Each element defines a credential authentication.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Mail: Messages -->
  <xs:complexType name ="MailMessagesModel" id="MailMessagesModel">
    <xs:sequence>
      <xs:element name="Message" type="MailMessageModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents an e-mail message.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Server: Credentials -->
  <xs:complexType name="ServerCredentialsModel" id="ServerCredentialsModel">
    <xs:sequence>
      <xs:element name="Credential" type="ServerCredentialModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines a credential authentication.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Credentials: Credential -->
  <xs:complexType name ="ServerCredentialModel" id="ServerCredentialModel">
    <xs:attribute name="Domain" type="freeStringType" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional]  The name of the domain associated with the credential. The default is an empty string ("").
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Host" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name or IP address of the host used for SMTP transactions.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Name" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The identifier name of credential.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Password" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Password for the user name associated with the credential.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Port" type="xs:nonNegativeInteger" use="optional" default="25">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Port used for SMTP transactions. The default value is 25.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SSL" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Determines whether uses Secure Sockets Layer (SSL) to encrypt the connection. The dafault is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="UserName" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The user name associated with the credential.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Messages: Message -->
  <xs:complexType name ="MailMessageModel" id="MailMessageModel">
    <xs:all>
      <xs:element name="Attachments" type="MailMessageAttachmentsModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The attachment collection used to store data attached to this e-mail message.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Body" type="freeStringType" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The message body.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="CC" type="MailMessageCCModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The address collection that contains the carbon copy (CC) recipients for this e-mail message.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="From" type="MailMessageFromModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The from address for this e-mail message.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this writer filter node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Subject" type="freeStringType" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The subject line for this e-mail message.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="To" type="MailMessageToModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The address collection that contains the recipients of this e-mail message.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Send" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether to send the e-mail. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Credential" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name of credential to use for this message.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Message: Attachments -->
  <xs:complexType name ="MailMessageAttachmentsModel" id="MailMessageAttachmentsModel">
    <xs:sequence>
      <xs:element name="Attachment" type="MailMessageAttachmentModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents an attachment to an e-mail.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Message: CC -->
  <xs:complexType name ="MailMessageCCModel" id="MailMessageCCModel">
    <xs:attribute name="Addresses" type="mailAddressListType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Collection of e-mail addresses. Separate each e-mail with a blank.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Message: From -->
  <xs:complexType name ="MailMessageFromModel" id="MailMessageFromModel">
    <xs:attribute name="Address" type="mailAddressType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Represents an e-mail address.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Message: To -->
  <xs:complexType name ="MailMessageToModel" id="MailMessageToModel">
    <xs:attribute name="Addresses" type="mailAddressListType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Collection of e-mail addresses. Separate each e-mail with a blank.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Attachments: Attachment -->
  <xs:complexType name ="MailMessageAttachmentModel" id="MailMessageAttachmentModel">
    <xs:attribute name="Path" type="pathType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Attached file. Only full path is supported.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Charts: Types -->
  <xs:group id="ChartType" name="ChartType">
    <xs:choice>
      <xs:element name="Chart" type="ChartModel"  minOccurs="0" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a user-defined chart.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MiniChart" type="MiniChartModel" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a user-defined minichart.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <!-- Charts: Chart -->
  <xs:complexType name="ChartModel" id="ChartModel">
    <xs:all>
      <xs:element name="Axes" type="ChartAxesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting for axes of chart.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Border" type="ChartBorderModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of chart border.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Legend" type="ChartLegendModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of chart legend.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Location" type="LocationModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the chart location on the host, this can be by coordinates or by type of alignment, depending whether the host has or not a tabular format.
            You can only choose one of the modes. If this tag does not define the defaults is by coordinates
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Plots" type="ChartPlotsModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of plots for a chart. Each element represents a chart plot.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this chart node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Title" type="ChartTitleModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of chart title.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="BackColor" type="rgbColorType" use="optional" default="White">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred back color. The default is 'White'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Location" type="LocationAttribute" use="optional" default="1 1">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred location of chart. The default is '1 1'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Size" type="NormalSizeAttribute" use="optional" default="150 150">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Width and height of the graphic. The default is '150 150'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the chart. The default 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Chart: Axes -->
  <xs:complexType name="ChartAxesModel" id="ChartAxesModel">
    <xs:all>
      <xs:element name="Primary" type="AxisModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Information of primary axes. Includes information for the category and value axes.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this border node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Secondary" type="AxisModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Information of secondary axes. Includes information for the category and value axes.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Chart: Border -->
  <xs:complexType name="ChartBorderModel" id="ChartBorderModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this border node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Shadow" type="ShadowModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of shadow-border. Includes shadow visibility and transparency.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Color" type="rgbColorType" use="optional" default="Black">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred border color. The default is 'Black'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the border. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Style" use="optional" default="Continuous">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred border line style. The default is 'Continuous'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownLineStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Continuous">
            <xs:annotation>
              <xs:documentation>Continuous line.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Dash">
            <xs:annotation>
              <xs:documentation>Dashed line.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DashDot">
            <xs:annotation>
              <xs:documentation>Dash-Dot line.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DashDotDot">
            <xs:annotation>
              <xs:documentation>Dash dot-dot line.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Dot">
            <xs:annotation>
              <xs:documentation>Dotted line.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Width" use="optional" type="KnownWidthLineStyle" default="Thin">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred style for width of the border line. The default is 'Thin'.
        </xs:documentation>
      </xs:annotation>
      <!--<xs:simpleType id="KnownWidthLineStyle">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Thin">
            <xs:annotation>
              <xs:documentation>Thin line.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Medium">
            <xs:annotation>
              <xs:documentation>Medium line.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Thick">
            <xs:annotation>
              <xs:documentation>Thick line.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Hairline">
            <xs:annotation>
              <xs:documentation>Hairline.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>-->
    </xs:attribute>
  </xs:complexType>

  <!-- Chart: Legend -->
  <xs:complexType name="ChartLegendModel" id="ChartLegendModel">
    <xs:all>
      <xs:element name="Border" type="ChartBorderModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of legend border.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Font" type="FontModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Reference for font model defined for this legend.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this legend node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Location" use="optional" default="Right">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred location for chart legend. The default is 'Right'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownLegendLocation">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Top">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Sets long date según la configuración regional indicada
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Right">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Sets short date según la configuración regional indicada
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Bottom">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Sets short date según la configuración regional indicada
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Left">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Sets long date según la configuración regional indicada
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the chart legend. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Chart: Plots -->
  <xs:complexType name="ChartPlotsModel" id="ChartPlotsModel">
    <xs:sequence>
      <xs:element name="Border" type="ChartBorderModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting for common border of plots.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Plot" type="ChartPlotModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a chart plot.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Chart: Title -->
  <xs:complexType name="ChartTitleModel" id="ChartTitleModel">
    <xs:all>
      <xs:element name="Border" type="ChartBorderModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting for border of title.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Font" type="FontModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Font model defined for this title.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this chart title node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Text" type="freeStringType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The text of title.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Show" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the title. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Orientation" use="optional" default="Horizontal">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred orientation for the title. The default is 'Horizontal'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownAxisOrientation">
        <xs:restriction base="OrientationListType">
          <xs:enumeration value="Downward">
            <xs:annotation>
              <xs:documentation>The orientation is downward.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Horizontal">
            <xs:annotation>
              <xs:documentation>The orientation is horizontal.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Upward">
            <xs:annotation>
              <xs:documentation>The orientation is upward.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Vertical">
            <xs:annotation>
              <xs:documentation>The orientation is vertical.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Axes: Axis -->
  <xs:complexType name="AxisModel" id="AxisModel">
    <xs:all>
      <xs:element name="Category" type="AxisDefinitionModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of category axis. Allows you to configure the axis title, the axis labels, axis marks and axis values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this legend node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Values" type="AxisDefinitionModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of values axis. Allows you to configure the axis title, the axis labels, axis marks and axis values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Axis: AxisDefinition -->
  <xs:complexType name="AxisDefinitionModel" id="AxisDefinitionModel">
    <xs:all>
      <xs:element name="Labels" type="AxisDefinitionLabelsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of axis labels.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Marks" type="AxisDefinitionMarksModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of axis marks.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this axis. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Title" type="ChartTitleModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of axis title.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Values" type="AxisDefinitionValuesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of axis values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Show" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the axis. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="GridLines" use="optional" default="None">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred grid lines for axis. The default is 'None'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownPlotGridLine">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>Do not draw major and minor grid lines.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Both">
            <xs:annotation>
              <xs:documentation>Draws major and minor grid lines</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Major">
            <xs:annotation>
              <xs:documentation>Draws major grid lines</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Minor">
            <xs:annotation>
              <xs:documentation>Draws minor grid lines</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- AxisDefinition: Labels -->
  <xs:complexType name="AxisDefinitionLabelsModel" id="AxisDefinitionLabelsModel">
    <xs:all>
      <xs:element name="Font" type="FontModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The font model defined for axis labels..
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this legend node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Alignment" type="HorizontalAlignmentListType" use="optional" default="Center">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred alignment for axis label. The default is 'Center'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Orientation" use="optional" default="Automatic">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred orientation for axis labels. The default is 'Automatic'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownLabelOrientation">
        <xs:restriction base="OrientationListType" />
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Position" use="optional" default="Low">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred position for axis labels. The default is 'Low'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownLabelPosition">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>No marks.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="High">
            <xs:annotation>
              <xs:documentation>Top or right side of the chart.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Low">
            <xs:annotation>
              <xs:documentation>Bottom or left side of the chart.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NextToAxis">
            <xs:annotation>
              <xs:documentation>Next to axis.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:whiteSpace value="collapse" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- AxisDefinition: Marks -->
  <xs:complexType name="AxisDefinitionMarksModel" id="AxisDefinitionMarksModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this legend node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Major" type="KnownTickMarkStyle" use="optional" default="Cross">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred position of major tick marks for an axis. The default is 'Cross'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Minor" type="KnownTickMarkStyle" use="optional" default="Cross">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred position of minor tick marks for an axis. The default is 'Cross'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- AxisDefinition: Values -->
  <xs:complexType name="AxisDefinitionValuesModel" id="AxisDefinitionValuesModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this legend node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Maximun" use="optional" default="Autodetect">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The maximun value of axis. Accepts only numbers in floating point. The default is 'Autodetect'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="axisValuesMaximunAttribute">
        <xs:union memberTypes="KnownAutodetectValue xs:float" />
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Minimun" use="optional" default="Autodetect">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The minimun value of axis. Accepts only numbers in floating point. The default is 'Autodetect'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="axisValuesMinimunAttribute">
        <xs:union memberTypes="KnownAutodetectValue xs:float" />
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Border: Shadow -->
  <xs:complexType name="ShadowModel" id="ShadowModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this legend node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Show" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays shadow. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Transparency" use="optional" default="0.0">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred degree of transparency as a value from 0.0 (opaque) through 1.0 (clear). The default is 0.0.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="borderShadowTransparencyAttribute">
        <xs:restriction base="xs:float">
          <xs:minInclusive value ="0.0" />
          <xs:maxInclusive value ="1.0" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Plots: Plot -->
  <xs:complexType name="ChartPlotModel" id="ChartPlotModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this serie node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Series" type="ChartSeriesModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Collection of data series for a plot. Each element represents a data serie of a plot
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="ElementNameString" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name of plot. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="UseSecondaryAxis" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether the plot uses secondary axis. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Plot: Series -->
  <xs:complexType name="ChartSeriesModel" id="ChartSeriesModel">
    <xs:sequence>
      <xs:element name="Serie" type="ChartSerieModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a serie data of plot.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Series: Serie -->
  <xs:complexType name="ChartSerieModel" id="ChartSerieModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this serie node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Axis" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The data field which acts how axis data of plot.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Color" type="rgbColorType" use="optional" default="Black">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred color for this data serie. The default is 'Black'. For Pie3D chart type is automatic.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Field" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Name of field that contains data.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Name" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Defines the name of this serie.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Type" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred chart type.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownChartType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="XYScatter">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                XYScatter chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Radar">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Radar chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Doughnut">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Doughnut chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Pie3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Pie3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Line3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Line3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Column3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Column3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Area3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Area 3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Area">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Area chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Line">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Line chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Pie">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Pie chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Bubble">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Bubble chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ColumnClustered">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ColumnClustered chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ColumnStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ColumnStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ColumnStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ColumnStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ColumnClustered3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ColumnClustered3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ColumnStacked3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ColumnStacked3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ColumnStacked1003D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ColumnStacked1003D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BarClustered">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                BarClustered chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BarStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                BarStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BarStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                BarStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BarClustered3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                BarClustered3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BarStacked3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                BarStacked3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BarStacked1003D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                BarStacked1003D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LineStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                LineStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LineStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                LineStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LineMarkers">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                LineMarkers chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LineMarkersStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                LineMarkersStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="LineMarkersStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                LineMarkersStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PieOfPie">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PieOfPie chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PieExploded">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PieExploded chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PieExploded3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PieExploded3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BarOfPie">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                BarOfPie chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="XYScatterSmooth">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                XYScatterSmooth chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="XYScatterSmoothNoMarkers">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                XYScatterSmoothNoMarkers chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="XYScatterLines">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                XYScatterLines chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="XYScatterLinesNoMarkers">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                XYScatterLinesNoMarkers chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AreaStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                AreaStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AreaStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                AreaStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AreaStacked3D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                AreaStacked3D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="AreaStacked1003D">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                AreaStacked1003D chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DoughnutExploded">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                DoughnutExploded chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RadarMarkers">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                RadarMarkers chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="RadarFilled">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                RadarFilled chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Surface">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Surface chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SurfaceWireframe">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                SurfaceWireframe chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SurfaceTopView">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                SurfaceTopView chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SurfaceTopViewWireframe">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                SurfaceTopViewWireframe chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Bubble3DEffect">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                Bubble3DEffect chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StockHLC">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                StockHLC chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StockOHLC">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                StockOHLC chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StockVHLC">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                StockVHLC chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="StockVOHLC">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                StockVOHLC chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CylinderColClustered">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                CylinderColClustered chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CylinderColStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                CylinderColStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CylinderColStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                CylinderColStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CylinderBarClustered">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                CylinderBarClustered chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CylinderBarStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                CylinderBarStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CylinderBarStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                CylinderBarStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CylinderCol">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                CylinderCol chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ConeColClustered">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ConeColClustered chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ConeColStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ConeColStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ConeColStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ConeColStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ConeBarClustered">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ConeBarClustered chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ConeBarStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ConeBarStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ConeBarStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ConeBarStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ConeCol">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                ConeCol chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PyramidColClustered">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PyramidColClustered chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PyramidColStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PyramidColStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PyramidColStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PyramidColStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PyramidBarClustered">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PyramidBarClustered chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PyramidBarStacked">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PyramidBarStacked chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PyramidBarStacked100">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PyramidBarStacked100 chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PyramidCol">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                PyramidCol chart
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>


  <!-- Charts: MiniChart -->
  <xs:complexType name="MiniChartModel" id="MiniChartModel">
    <xs:all>
      <xs:element name="Location" type="MiniChartLocationModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the mini-chart location on the host, this can be by coordinates or by column or by row. You can only choose one of them. If this tag does not define the defaults is by column
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Axes" type="MiniChartAxesModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the visual setting of the mini-chart axes.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Type" type="MiniChartTypeModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the mini-chart type configuration.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Field" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Name of field that contains data.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="EmptyValuesAs" type="miniChartEmptyValuesAs" use="optional" default="Zero">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred action when the field does not contain information. The default is 'Zero'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DisplayHidden" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays hidden values. The default 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Size" type="CellSizeAttribute" use="optional" default="-1 -1">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Width and height of minichart cell. The default is '-1 -1' for automatic host size.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays the mini-chart. The default 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- MiniChart: Location -->
  <xs:complexType name="MiniChartLocationModel" id="MiniChartLocationModel">
    <xs:sequence>
      <xs:choice>
        <xs:element name="ByColumn" type="ByColumnLocationModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Minichart relative location by column.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ByCoordenates" type="CoordenatesModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Minichart absolute location by row and column.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ByRow" type="ByRowLocationModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Minichart relative location by row and column..
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Relative" type="RelativeLocationModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Minichart relative location by row and column.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Location: ByColumn -->
  <xs:complexType name="ByColumnLocationModel" id="ByColumnLocationModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Location" type="MiniChartColumnLocationListType" use="optional" default="Bottom">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Location. The default is 'Bottom'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Offset" type="xs:nonNegativeInteger" use="optional" default="0">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred row size. The default is default's row.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Location: ByRow -->
  <xs:complexType name="ByRowLocationModel" id="ByRowLocationModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Location" type="MiniChartRowLocationListType" use="optional" default="Right">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Location. The default is 'Right'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Offset" type="xs:nonNegativeInteger" use="optional" default="0">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred row size. The default is default's row.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  
  <!-- Location: Relative -->
  <xs:complexType name="RelativeLocationModel" id="RelativeLocationModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Coordenates" type="LocationAttribute" use="optional" default="1 1">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Location of element, sets the x and y coordinates where the element begins. The default is '1 1'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  
  <!-- MiniChart: Axes -->
  <xs:complexType name="MiniChartAxesModel" id="MiniChartAxesModel">
    <xs:all>
      <xs:element name="Horizontal" type="MiniChartHorizontalAxesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the visual setting of horizontal axis.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Vertical" type="MiniChartVerticalAxesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the visual setting of vertical axis.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Axes: Horizontal -->
  <xs:complexType name="MiniChartHorizontalAxesModel" id="MiniChartHorizontalAxesModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Type" type="miniChartHorizontalAxisType" use="optional" default="General">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred axis type. To select a date axis, simply enter the name of the field that contains the date values. This axis type is useful for representing irregular time periods in the underlying data. The default is 'General'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Color" type="miniChartHorizontalAxisColor" use="optional" default="White">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred axis color. The default is 'Automatic'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="RightToLeft" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether the data are drawn from right to left. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether this axis is shown. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Axes: Vertical -->
  <xs:complexType name="MiniChartVerticalAxesModel" id="MiniChartVerticalAxesModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Min" type="miniChartVerticalAxisValue" use="optional" default="Automatic">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Minimun preferred value for the axis. If you prefer you can manually set a value. The default is 'Automatic'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Max" type="miniChartVerticalAxisValue" use="optional" default="Automatic">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Maximum preferred value for the axis. If you prefer you can manually set a value. The default is 'Automatic'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>


  <!-- MiniChart: Type -->
  <xs:complexType name="MiniChartTypeModel" id="MiniChartTypeModel">
    <xs:sequence>
      <xs:choice>
        <xs:element name="Column" type="MiniChartColumnTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines a column mini-chart.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Line" type="MiniChartLineTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines a line mini-chart.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Win-Loss" type="MiniChartWinLossTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines a win-loss mini-chart.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Active" type="miniChartTypeActiveValue" use="optional" default="Column">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred mini-chart type to draw. The default is 'Column'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Type: Column -->
  <xs:complexType name="MiniChartColumnTypeModel" id="MiniChartColumnTypeModel">
    <xs:all>
      <xs:element name="Serie" type="MiniChartColumnSerieModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the definition of the data series to draw.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Points" type="MiniChartColumnPointsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the definition of the significant points of the drawn series. It includes the visual configuration of the starting, ending point, highest and lowest value as well as negative values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Type -> Column: Serie -->
  <xs:complexType name="MiniChartColumnSerieModel" id="MiniChartColumnSerieModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartSerieModel"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type -> Column: Points -->
  <xs:complexType name="MiniChartColumnPointsModel" id="BaseMiniChartPointsModel">
    <xs:all>
      <xs:element name="First" type="MiniChartFirstPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie first point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Last" type="MiniChartLastPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie last point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="High" type="MiniChartHighPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie high point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Low" type="MiniChartLowPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie low point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Negative" type="MiniChartNegativePointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie negative points, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  
  
  <!-- Type: Line: -->
  <xs:complexType name="MiniChartLineTypeModel" id="MiniChartLineTypeModel">
    <xs:all>
      <xs:element name="Serie" type="MiniChartLineSerieModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the definition of the data series to draw.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Points" type="MiniChartLinePointsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the definition of the significant points of the drawn series. It includes the visual configuration of the starting, ending point, markers points, highest and lowest value as well as negative values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Type -> Line: Serie -->
  <xs:complexType name="MiniChartLineSerieModel" id="MiniChartLineSerieModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartSerieModel">
        <xs:attribute name="Width" type="miniChartLineSerieWidth" use="optional" default="0.75">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Preferred line width. The default is '0.75'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type -> Line: Points -->
  <xs:complexType name="MiniChartLinePointsModel" id="MiniChartLinePointsModel">
    <xs:all>
      <xs:element name="First" type="MiniChartFirstPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie first point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Last" type="MiniChartLastPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie last point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="High" type="MiniChartHighPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie high point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Low" type="MiniChartLowPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie low point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Negative" type="MiniChartNegativePointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie negative points, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Markers" type="MiniChartMarkersPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie markers points, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  
  
  <!-- Type: Win-Loss: -->
  <xs:complexType name="MiniChartWinLossTypeModel" id="MiniChartWinLossTypeModel">
    <xs:all>
      <xs:element name="Serie" type="MiniChartWinLossSerieModel" minOccurs="1" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the definition of the data series to draw.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Points" type="MiniChartWinLossPointsModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains the definition of the significant points of the drawn series. It includes the visual configuration of the starting, ending point, highest and lowest value as well as negative values.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Type -> Win-Loss: Serie -->
  <xs:complexType name="MiniChartWinLossSerieModel" id="MiniChartWinLossSerieModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartSerieModel"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type -> Win-Loss: Points -->
  <xs:complexType name="MiniChartWinLossPointsModel" id="MiniChartWinLossPointsModel">
    <xs:all>
      <xs:element name="First" type="MiniChartFirstPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie first point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Last" type="MiniChartLastPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie last point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="High" type="MiniChartHighPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie high point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Low" type="MiniChartLowPointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie low point, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Negative" type="MiniChartNegativePointModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines how to show the serie negative points, includes color and its visibility.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>


  
  <!-- Type -> Any -> Points: MiniChartFirstPoint -->
  <xs:complexType name="MiniChartFirstPointModel" id="MiniChartFirstPointModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartPointModel"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type -> Any -> Points: MiniChartLastPoint -->
  <xs:complexType name="MiniChartLastPointModel" id="MiniChartLastPointModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartPointModel"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type -> Any -> Points: MiniChartHighPoint -->
  <xs:complexType name="MiniChartHighPointModel" id="MiniChartHighPointModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartPointModel"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type -> Any -> Points: MiniChartLowPoint -->
  <xs:complexType name="MiniChartLowPointModel" id="MiniChartLowPointModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartPointModel"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type -> Any -> Points: MiniChartNegativePoint -->
  <xs:complexType name="MiniChartNegativePointModel" id="MiniChartNegativePointModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartPointModel"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type -> Any -> Points: MiniChartMarkersPoint -->
  <xs:complexType name="MiniChartMarkersPointModel" id="MiniChartMarkersPointModel">
    <xs:complexContent>
      <xs:extension base="BaseMiniChartPointModel"/>
    </xs:complexContent>
  </xs:complexType>


  <!-- Fields: Types -->
  <xs:group id="FieldType" name="FieldType">
    <xs:sequence>
      <xs:choice>
        <xs:element name="Field" type="DataFieldModel"  minOccurs="1" maxOccurs="unbounded">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents a data field.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Fixed" type="FixedFieldModel" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents a piece of a field fixed-width data.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Gap" type="GapFieldModel" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents an empty data field.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Group" type="GroupFieldModel" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents a field as union of several data field.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Packet" type="PacketFieldModel"  minOccurs="1" maxOccurs="unbounded">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents a packet data field.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Pivot" type="PivotModel"/>
    </xs:sequence>
  </xs:group>

  <!-- Fields: Field -->
  <xs:complexType name="DataFieldModel" id="DataFieldModel">
    <xs:complexContent>
      <xs:extension base="BaseDataFieldModel">
        <xs:attribute name="Name" type="FieldNameType" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Name of the field.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Fields: GapField -->
  <xs:complexType name="GapFieldModel" id ="GapFieldModel">
    <xs:complexContent>
      <xs:extension base="BaseDataFieldModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Fields: GroupField -->
  <xs:complexType name="GroupFieldModel" id="GroupFieldModel">
    <xs:complexContent>
      <xs:extension base="DataFieldModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Fields: Packet -->
  <xs:complexType name="PacketFieldModel" id="PacketFieldModel">
    <xs:complexContent>
      <xs:extension base="BaseDataFieldModel">
        <xs:attribute name="Name" type="FieldNameType" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Name of the field.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="InputFormat" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Input packet data format.
            </xs:documentation>
          </xs:annotation>
          <xs:simpleType id="KnownInputPacketFormat">
            <xs:restriction base="xs:string">
              <xs:enumeration value="ShortDateFormat">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    Represents short date format. 'yyMMdd'
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="LongDateFormat">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    Represents long date format. 'yyyyMMdd'
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="FullDateFormat">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    Represents full date format. 'yyyyMMddHHmmss'
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Fields: FixedField -->
  <xs:complexType name="FixedFieldModel" id="FixedFieldModel">
    <xs:complexContent>
      <xs:extension base="BaseDataFieldModel">
        <xs:attribute name="Pieces" type="ElementNameString" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Name of the collection of pieces. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Piece" type="ElementNameString" use="required">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Name of the piece. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Fixed: Pieces -->
  <xs:complexType name="PiecesModel" id="PiecesModel">
    <xs:sequence>
      <xs:element name="Piece" type="PieceModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a new field composed of a field name and initial position and final position into the reference field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Name" type="ElementNameString" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name of the pieces field. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Reference" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name of the reference field. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # * @ % $'
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Pieces: Piece -->
  <xs:complexType name="PieceModel" id="PieceModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="ElementNameString" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Name of the piece. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="From" type="xs:nonNegativeInteger" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Initial character of the piece into field reference.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Lenght" type="xs:nonNegativeInteger" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Length in characters of the piece.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Trim" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether to apply string trim mode. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TrimMode" type="KnownTrimMode" use="optional" default="All">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Use this attribute to specify trim mode for strings. The default is 'All'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Groups: Group -->
  <xs:complexType name="GroupModel" id="GroupModel">
    <xs:sequence>
      <xs:element name="Field" type="GroupItemModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Group field composed of a field name and a field separator.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Name" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name of the field. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # * @ % $'
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Group: Field-->
  <xs:complexType name="GroupItemModel" id="GroupItemModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this field node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name of the field.
          Are only allow strings made ​​up of letters, numbers and following special chars '_ - # * @ % $'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Separator" use="optional" default="None">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] The field separator. The default is 'None'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="groupItemSeparatorAttribute">
        <xs:union memberTypes="KnownItemGroupSeparator xs:string" />
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Styles: Style -->
  <xs:complexType name="StyleModel" id="StyleModel">
    <xs:all>
      <xs:element name="Borders" type="BordersModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines a container for individual Border elements. The Borders collection may contain up to six unique Border elements.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Font" type="FontModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a font. Defines a particular format for text, including font face, size, and style attributes.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Content" type="ContentModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines as shown the content of a field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this style node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" type="ElementNameString" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          The name of the style. Are only allow strings made ​​up of letters, numbers and following special chars '_ - # @ % $'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Inherits" type="ElementNameStringOrEmpty" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] The name of parent style. The default is 'Default'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Style: Borders -->
  <xs:complexType name="BordersModel" id="BordersModel">
    <xs:sequence>
      <xs:element name="Border" type="BorderModel" minOccurs="1" maxOccurs="6">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Specifies the properties of a particular border within the Borders element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Borders: Border -->
  <xs:complexType name="BorderModel" id="BorderModel">
    <xs:attribute name="Position" type="KnownBorderPosition" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Specifies one of the six possible borders to use for cells.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Color" type="rgbColorType" use="optional" default="Transparent">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred color of a border. The default is 'Transparent'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="LineStyle" type="KnownBorderLineStyle" use="optional" default="None">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred style of a border. The default is 'None'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Weight" type="KnownWidthLineStyle" use="optional" default="Hairline">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies the weight (or thickness) in points of a border. The default is 'Hairline'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Style: Content -->
  <xs:complexType name="ContentModel" id="ContentModel">
    <xs:sequence>
      <xs:element name="Alignment" type="ContentAlignmentModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Reference for content distribution
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Pattern" type="PatternModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Reference for pattern type
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="Text" type="TextDataTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Treats the content as text and displays the content exactly as written, even when numbers are typed.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Number" type="NumberDataTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              You can specify the number of decimal places that you want to use,
              whether you want to use a thousands separator,
              and how you want to display negative numbers.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Currency" type="CurrencyDataTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Represents currency format, the currency symbol appears right next to the first digit
              You can specify the number of decimal places that you want to use and how you want to display negative numbers.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="DateTime" type="DatetimeDataTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Displays data field as datetime format. You can specify the output culture.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Percentage" type="PercentageDataTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Displays the result with a percent sign (%).
              You can specify the number of decimal places to use.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Scientific" type="ScientificDataTypeModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Displays a number in exponential notation, which replaces part of the number with E + n, where E (exponent) multiplies the preceding number by 10 to n.
              You can specify the number of decimal places you want to use.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this content node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Color" type="rgbColorType" use="optional" default="Transparent">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Alternate preferred of content color. The default is 'Transparent'.
          You can use {Bindable: class.method} syntax to get a custom value from your own code.
          Remember add assembly reference into references section.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AlternateColor" type="rgbColorType" use="optional" default="Transparent">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Alternate preferred of content color. The default is 'Transparent'.
          You can use {Bindable: class.method} syntax to get a custom value from your own code.
          Remember add assembly reference into references section.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Content: Alignment -->
  <xs:complexType name="ContentAlignmentModel" id="ContentAlignmentModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this content node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Vertical" type="VerticalAlignmentListType" use="optional" default="Center">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies the type of vertical alignment. The default is 'Center'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Horizontal" type="HorizontalAlignmentListType" use="optional" default="Left">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Specifies the type of horizontal alignment. The default is 'Left'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Content: Pattern -->
  <xs:complexType name="PatternModel" id="PatternModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this content alignment node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Color" type="rgbColorType" use="optional" default="Transparent">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred of pattern color. The default is 'Transparent'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="PatternType" type="PatternListType" use="optional" default="Solid">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Pattern type. The default is 'Solid'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Content: Currency -->
  <xs:complexType name="CurrencyDataTypeModel" id="CurrencyDataTypeModel">
    <xs:complexContent>
      <xs:extension base="NumericDataTypeModel">
        <xs:attribute name="Locale" type="knownCultureListType" use="optional" default="Current">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              [Optional] Use this attribute for select preferred output culture. The default is 'Current'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Content: Datetime -->
  <xs:complexType name="DatetimeDataTypeModel" id="DateTimeType">
    <xs:complexContent>
      <xs:extension base="BaseDataTypeModel">
        <xs:all>
          <xs:element name="Error" type="DatetimeErrorModel" minOccurs="0" maxOccurs="1">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Datetime data type error settings.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
        <xs:attribute name="Format" use="optional" default="Short Date">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Preferred output date time format. The default is 'Short Date'.
            </xs:documentation>
          </xs:annotation>
          <xs:simpleType id="KnownDatetimeFormat">
            <xs:restriction base="xs:string">
              <xs:enumeration value="General Date">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    General date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="Short Date">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    The short date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="Long Date">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    The long date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="Full Date">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    The full date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="RFC1123 Pattern">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    The RFC1123 date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="Short Time">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    The short-time date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="Long Time">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    The long-time date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="Month-Day">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    The month-day date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="Year-Month">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    The year-month date according to the locale specified.
                  </xs:documentation>
                </xs:annotation>
              </xs:enumeration>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="Locale" type="knownCultureListType" use="optional" default="Current">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              [Optional] Use this attribute for select preferred output culture. The default is 'Current'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Content: Number -->
  <xs:complexType name="NumberDataTypeModel" id="NumberDataTypeModel">
    <xs:complexContent>
      <xs:extension base="NumericDataTypeModel">
        <xs:attribute name="Separator" type="YesNo" use="optional" default="No">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Determines whether to display the thousands separator. The default is 'No'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Content: Percentage -->
  <xs:complexType name="PercentageDataTypeModel" id="PercentageDataTypeModel">
    <xs:complexContent>
      <xs:extension base="RealDataTypeModel">
        <xs:all>
          <xs:element name="Error" type="PercentageErrorModel" minOccurs="0" maxOccurs="1">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Percentage data type error settings.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Content: Scientific -->
  <xs:complexType name="ScientificDataTypeModel" id="ScientificDataTypeModel">
    <xs:complexContent>
      <xs:extension base="RealDataTypeModel">
        <xs:all>
          <xs:element name="Error" type="ScientificErrorModel" minOccurs="0" maxOccurs="1">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Scientific data type error settings.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Content: Text -->
  <xs:complexType name="TextDataTypeModel" id="TextDataTypeModel">
    <xs:complexContent>
      <xs:extension base="BaseDataTypeModel" />
    </xs:complexContent>
  </xs:complexType>


  <!-- Shared -->
  <!-- *********************************************************************** -->
  <!-- Comment -->
  <xs:complexType name="CommentModel" id="CommentModel">
    <xs:all>
      <xs:element name="Font" type="FontModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a font. Defines a particular format for text, including font face, size, and style attributes.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Text" type="freeStringType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents comment text.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Show" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays a comment that contains the original value of the field. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Aggregate -->
  <xs:complexType name="FieldAggregateModel" id="FieldAggregateModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defining the list of additional custom properties for this aggregate.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Location" use="optional" default="Top">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred location in which to add the aggregate. The default is 'Top'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownAggregateLocation">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Top">
            <xs:annotation>
              <xs:documentation>This aggregate is vertically aligned at the top.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Bottom">
            <xs:annotation>
              <xs:documentation>This aggregate is vertically aligned at the bottom.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:whiteSpace value="collapse" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Text" type="freeStringType" use="optional" default="Total">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] If aggregate is of text type then this attribute specifies preferred text to show for this aggregate. The default is 'Total'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Type" use="optional" default="None">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred kind of aggregation to be done in the totals row. The default is 'None'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownAggregateType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <documentation xml:lang="en">
                None
              </documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Average">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <documentation xml:lang="en">
                Average
              </documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Count">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <documentation xml:lang="en">
                Count
              </documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Max">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <documentation xml:lang="en">
                Max
              </documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Min">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <documentation xml:lang="en">
                Min
              </documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Sum">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <documentation xml:lang="en">
                Sum
              </documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Text">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <documentation xml:lang="en">
                Custom text defined by user.
              </documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:whiteSpace value="collapse" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attributeGroup ref="aggregateCommonAttributes" />
  </xs:complexType>



  <!-- Header -->
  <xs:complexType name="FieldHeaderModel" id="FieldHeaderModel">
    <xs:sequence>
      <xs:choice>
        <xs:element name="HyperLink" type="HeaderHyperLinkModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Create a shortcut that jumps to another location in the current book or opens a document stored on a network server, an intranet or the Internet.
              When you click, it jumps to the location that is displayed or opens the document you specified.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defining the list of additional custom properties for this header.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attributeGroup ref="fieldCommonAttributes" />
  </xs:complexType>

  <!-- Header -> HyperLink -->
  <xs:complexType name="HeaderHyperLinkModel" id="HeaderHyperLinkModel">
    <xs:sequence>
      <xs:choice>
        <xs:element name="Web" type="WebHyperLinkModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines a shortcut that jumps to an Internet or intranet page.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="File" type="FileHyperLinkModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines a shortcut to a document stored on a network server or local file system.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Location" type="LocationHyperLinkModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Defines a shortcut that jumps to another location in the current or another sheet.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defining the list of additional custom properties for this header.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Tooltip" type="hyperLinkTooltipType" use="optional" default="FieldAlias">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Defines tooltip text. The default is 'FieldAlias'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Style" type="hyperLinkStyleType" use="optional" default="Current">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Name of a style defined in the list of styles. The default is 'Current'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether displays hyperlink. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- HyperLink -> Location -->
  <xs:complexType name="LocationHyperLinkModel" id="LocationHyperLinkModel">
    <xs:all>
      <xs:element name="ByCoordenates" type="CoordenatesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines the hyperlink location by row and column.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defining the list of additional custom properties for this header.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Sheet" type="xs:string" use="optional" default="Current">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Defines linked sheet name. The default value is 'Current'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- HyperLink -> Web -->
  <xs:complexType name="WebHyperLinkModel" id="WebHyperLinkModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defining the list of additional custom properties for this header.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Address" type="xs:string" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Sets the linked web page address. The default value is ''.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- HyperLink -> File -->
  <xs:complexType name="FileHyperLinkModel" id="FileHyperLinkModel">
    <xs:all>
      <xs:element name="Path" type="pathType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The linked file path. To specify a relative path use the character (~).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Filename" type="freeStringType" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            The linked file name. The following chars are not allowed '&lt; &gt; | " : * \ ? /'
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this output node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>



  <!-- Value -->
  <xs:complexType name="FieldValueModel" id="FieldValueModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defining the list of additional custom properties for this value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attributeGroup ref="fieldCommonAttributes" />
  </xs:complexType>

  <!-- Filter -->
  <xs:complexType name="FilterModel" id="FilterModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this writer filter node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Author" use="optional" default="*">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Author of writer. Select * for any author. The default is '*'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="filterAuthorAttribute">
        <xs:union memberTypes="KnownAnyValue xs:string" />
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Company" use="optional" default="*">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Company name of the writer. Select * for any author. The default is is '*'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="filterCompanyAttribute">
        <xs:union memberTypes="KnownAnyValue xs:string" />
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Version" use="optional" default="*">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Version of the writer, value greater than 0. Select * for any author. The default is '*'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="filterVersionAttribute">
        <xs:union memberTypes="KnownAnyValue xs:positiveInteger" />
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Path" use="optional" default="Default">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Path where is located the writer. To specify a relative path use the character (~). The default is 'Default'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="filterPathAttribute">
        <xs:union memberTypes="KnownDefaultPathValue pathType" />
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Font -->
  <xs:complexType name="FontModel" id="FontModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this font node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Name" use="optional" default="Segoe UI">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred font name. The default is 'Segoe UI'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="fontNameAttribute">
        <xs:union memberTypes="xs:string fontNameListType" />
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Size" use="optional" default="10">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred font size. The default is '10.0'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="fontSizeAttribute">
        <xs:union memberTypes="xs:nonNegativeInteger fontSizeListType" />
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Color" type="rgbColorType" use="optional" default="Black">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred font color. The default is 'Black'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Bold" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether bold style is applied for this font. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Italic" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether italic style is applied for this font. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Underline" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether the underline style is applied for this font. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Location -->
  <xs:complexType name="LocationModel" id="LocationModel">
    <xs:sequence>
      <xs:choice>
        <xs:element name="ByCoordenates" type="CoordenatesModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Use this element when host has a tabular format such as for example Microsoft® Excel.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ByAlignment" type="AlignmentModel" minOccurs="0" maxOccurs="1">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              Use this element when host hasn't a tabular format such as for example Microsoft® Word, Adobe® PDF.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this style node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Location: ByAlignment -->
  <xs:complexType name="AlignmentModel" id="AlignmentModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Horizontal" type="HorizontalAlignmentListType" use="optional" default="Center">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Horizontal alignment. The default is 'Center'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SkipLines" type="xs:nonNegativeInteger" use="optional" default="0">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Number to lines to skip. The default is '0'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Location: ByCoordenates -->
  <xs:complexType name="CoordenatesModel" id="CoordenatesModel">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Coordenates" type="LocationAttribute" use="optional" default="1 1">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Location of element, sets the x and y coordinates where the element begins. The default is '1 1'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Negative -->
  <xs:complexType name ="NegativeModel" id="NegativeModel">
    <xs:attribute name="Color" use="optional" default="Black">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Preferred color for display a negative number. The default is 'Black'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownBasicColor">
        <xs:restriction base="rgbNameColorType">
          <xs:enumeration value="Black">
            <xs:annotation>
              <xs:documentation>Gets a system-defined color that has an RGB value of #000000.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Blue">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>Gets a system-defined color that has an RGB value of #0000FF.</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Green">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>Gets a system-defined color that has an RGB value of #00FF00.</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Cyan">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>Gets a system-defined color that has an RGB value of #00FFFF.</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Red">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>Gets a system-defined color that has an RGB value of #FF0000.</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Magenta">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>Gets a system-defined color that has an RGB value of #FF00FF.</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Yellow">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>Gets a system-defined color that has an RGB value of #FFFF00.</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="White">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>Gets a system-defined color that has an RGB value of #FFFFFF.</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Sign" use="optional" default="Standard">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Visual format for negative value. The default is 'Standard'.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType id="KnownNegativeSign">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Standard">
            <xs:annotation>
              <xs:documentation>-value</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="None">
            <xs:annotation>
              <xs:documentation>value</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Parenthesis">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>(value)</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="Brackets">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                <xs:documentation>[value]</xs:documentation>
              </xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- Properties -->
  <xs:complexType name="PropertiesModel" id="PropertiesModel">
    <xs:sequence>
      <xs:element name="Property" type="PropertyModel" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Contains item definition with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Properties: Property -->
  <xs:complexType name="PropertyModel" id="PropertyModel">
    <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
      <xs:documentation xml:lang="en">
        Representing an item property. Contains item definition with name / value.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Custom property name.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Value" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Custom property value.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  
  <!-- Base class of error structures.                                                                           -->
  <!-- The following table shows the different data types error structures.                                      -->
  <!--                                                                                                           -->
  <!-- Class             Description                                                                             -->
  <!-- ========================================================================================================= -->
  <!-- NumericErrorModel         Reference for numeric data type error settings.                                 -->
  <!-- DatetimeErrorModel        Reference for datetime data type error settings.                                -->
  <xs:complexType name="BaseErrorModel" id="BaseErrorModel">
    <xs:all>
      <xs:element name="Comment" type="CommentModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Represents a comment. Includes comment text, format, including font face, size, and style attributes.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <!-- Datetime: Error                                                                                           -->
  <!-- A Specialization of BaseErrorModel class.                                                                 -->
  <!-- Represents error settings in datetime data types.                                                         -->
  <xs:complexType name ="DatetimeErrorModel" id="DatetimeErrorModel">
    <xs:complexContent>
      <xs:extension base="BaseErrorModel">
        <xs:attribute name="Value" use="optional" default="MinValue">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Preferred default value when occurs an error. The default is 'MinValue'.
            </xs:documentation>
          </xs:annotation>
          <xs:simpleType id="datatimeErrorValueAttribute">
            <xs:union memberTypes="KnownDataTimeValues xs:dateTime xs:date" />
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Numeric: Error                                                                                            -->
  <!-- A Specialization of BaseErrorModel class.                                                                 -->
  <!-- Which acts as the base class for numeric data types errors.                                               -->
  <!--                                                                                                           -->
  <!-- Class             Description                                                                             -->
  <!-- ========================================================================================================= -->
  <!-- PercentageErrorModel      Reference for percentage data type error settings.                              -->
  <!-- ScientificErrorModel      Reference for scientific data type error settings.                              -->
  <xs:complexType name="NumericErrorModel" id="NumericErrorModel">
    <xs:complexContent>
      <xs:extension base="BaseErrorModel">
        <xs:attribute name="Value" type="xs:float" use="optional" default="0.0">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Preferred default value when occurs an error. The default is '0.0'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Percentage: Error                                                                                         -->
  <!-- A Specialization of NumericErrorModel class.                                                              -->
  <!-- Reference for percentage data type error settings.                                                        -->
  <xs:complexType name="PercentageErrorModel" id="PercentageErrorModel">
    <xs:complexContent>
      <xs:extension base="NumericErrorModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Scientific: Error                                                                                         -->
  <!-- A Specialization of NumericErrorModel class.                                                              -->
  <!-- Reference for scientific data type error settings.                                                        -->
  <xs:complexType name="ScientificErrorModel" id="ScientificErrorModel">
    <xs:complexContent>
      <xs:extension base="NumericErrorModel" />
    </xs:complexContent>
  </xs:complexType>

  <!-- Header, Value: Attributes -->
  <xs:attributeGroup id="fieldCommonAttributes" name="fieldCommonAttributes">
    <xs:attribute name="Style" type="ElementNameString" default="Default" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Name of a style defined in the list of styles. The default is 'Default'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" default="Yes" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Determines visibility of the element. The default is 'No'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <!-- Aggregate: Attributes -->
  <xs:attributeGroup id="aggregateCommonAttributes" name="aggregateCommonAttributes">
    <xs:attribute name="Style" type="ElementNameString" default="Default" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Name of a style defined in the list of styles. The default is 'Default'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" default="No" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Determines visibility of the element. The default is 'No'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <!-- Abstract Types -->
  <!-- *********************************************************************** -->
  <!-- Writer base data type -->
  <xs:complexType name="WriterBaseModel" abstract="true">
    <xs:sequence>
      <xs:element name="Filter" type="FilterModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Set of properties that allow you to specify a writer.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this writer node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- Base class for different data types supported by ASNA Export Engine                                       -->
  <!-- Which acts as the base class for the different data types.                                                -->
  <!-- The following table shows the different data types.                                                       -->
  <!--                                                                                                           -->
  <!-- Class             Description                                                                             -->
  <!-- ========================================================================================================= -->
  <!-- NumericDataTypeModel      Represents numeric data field.                                                  -->
  <!-- CurrencyDataTypeModel     Represents currency data field.                                                 -->
  <!-- PercentageDataTypeModel   Represents percentage data field.                                               -->
  <!-- ScientificDataTypeModel   Represents scientific data field.                                               -->
  <!-- DatetimeDataTypeModel     Represents datetime data field.                                                 -->
  <!-- TextDataTypeModel         Represents text data field.                                                     -->
  <xs:complexType name="BaseDataTypeModel" abstract="true" />

  <!-- A specialization of BaseDataTypeModel class.                                                              -->
  <!-- Which acts as the base class for data types with decimal numbers.                                         -->
  <xs:complexType name="RealDataTypeModel" abstract="true">
    <xs:complexContent>
      <xs:extension base="BaseDataTypeModel">
        <xs:attribute name="Decimals" type="xs:nonNegativeInteger" use="optional" default="2">
          <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
            <xs:documentation xml:lang="en">
              [Optional] Number of decimal places. The default is '2'.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- A Specialization of RealDataTypeModel class.                                                              -->
  <!-- Which acts as base class for the data types negative numbers with decimals.                               -->
  <xs:complexType name="NumericDataTypeModel" abstract="true">
    <xs:complexContent>
      <xs:extension base="RealDataTypeModel">
        <xs:all>
          <xs:element name="Error" type="NumericErrorModel" minOccurs="0" maxOccurs="1">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Numeric data type error settings.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Negative" type="NegativeModel" minOccurs="0" maxOccurs="1">
            <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
              <xs:documentation xml:lang="en">
                Negative number format.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Defines a base class for the different types of data fields available.                                    -->
  <!-- Which acts as the base class for the different data fields.                                               -->
  <!-- The following table shows the different data field types.                                                 -->
  <!--                                                                                                           -->
  <!-- Class             Description                                                                             -->
  <!-- ========================================================================================================= -->
  <!-- DataFieldModel    Represents a data field.                                                                -->
  <!-- GapFieldModel     Represents a empty data field.                                                          -->
  <!-- GroupFieldModel   Represents the union of several data fields connected by a user-defined connector.      -->
  <!-- FixedFieldModel   Represents the decomposition of a fixed-width data field, in several individual fields. -->
  <!-- PacketFieldModel  Represents a packet data field.                                                         -->
  <xs:complexType name="BaseDataFieldModel" abstract="true">
    <xs:all>
      <xs:element name="Aggregate" type="FieldAggregateModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of aggregate function of the data field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Header" type="FieldHeaderModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of header the data field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines a list of additional custom properties for this field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Value" type="FieldValueModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Visual setting of value the data field.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Alias" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Alias of data field. This value is used as the column header.
          You can use {Bindable: class.method} syntax to get a custom value from your own code.
          Remember add assembly reference into references section.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Condition" type="freeStringType" use="optional" default="">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          User-defined condition.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Defines a base class for the different behaviors of an exporter.                                          -->
  <!-- The following table shows the different behaviors.                                                        -->
  <!--                                                                                                           -->
  <!-- Remember that you can create your own behaviors by inheriting from this class.                            -->
  <!-- Class               Description                                                                           -->
  <!-- ========================================================================================================= -->
  <!-- DownloadModel       Represents a download behavior.                                                       -->
  <!-- MailModel           Represents a email list behavior.                                                     -->
  <!-- TransformFileModel  Represents a transform file behavior.                                                 -->
  <!-- ToDropbox           Represents a dropbox behavior.                                                        -->
  <!-- ToSkyDrive          Represents a skydrive behavior.                                                       -->
  <xs:complexType name="BaseBehaviordModel" abstract="true">
    <xs:attribute name="Execute" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether executes behavior. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Defines a base class for the different effects of an inmage.                                              -->
  <!-- The following table shows the different effects.                                                          -->
  <!--                                                                                                           -->
  <!-- Remember that you can create your own effects by inheriting from this class.                              -->
  <!-- Class                 Description                                                                         -->
  <!-- ========================================================================================================= -->
  <!-- DisabledEffect        Represents a disabled effect.                                                       -->
  <!-- GrayScaleEffect       Represents a gray scale effect.                                                     -->
  <!-- GrayScaleRedEffect    Represents a gray scale red effect.                                                 -->
  <!-- GrayScaleGreenEffect  Represents a gray scale green effect.                                               -->
  <!-- GrayScaleBlueEffect   Represents a gray scale blue effect.                                                -->
  <!-- BrightnessEffect      Represents a brightness effect.                                                     -->
  <!-- MoreBrightnessEffect  Represents a more brightness effect.                                                -->
  <!-- DarkEffect            Represents a dark effect.                                                           -->
  <!-- MoreDarkEffect        Represents a more dark effect.                                                      -->
  <!-- OpacityEffect         Represents a opacity effect.                                                        -->
  <xs:complexType name="BaseEffectModel" abstract="true" />

  <!-- Defines a base class for the different types of lines.                                                    -->
  <!-- The following table shows the different lines.                                                            -->
  <!--                                                                                                           -->
  <!-- Remember that you can create your own types of line by inheriting from this class.                        -->
  <!-- Class                 Description                                                                         -->
  <!-- ========================================================================================================= -->
  <!-- EmptyLineModel        Represents an empty text line.                                                      -->
  <!-- TextLineModel         Represents a text line.                                                             -->
  <xs:complexType name="BaseLineModel" abstract="true">
    <xs:attribute name="Key" type="ElementNameString" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          Name of a style defined in the list of styles.
        </documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Repeat" type="xs:nonNegativeInteger" default="0" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Name of a style defined in the list of styles. The default is '0'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" default="Yes" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Determines visibility of the element. The default is 'Yes'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Style" type="ElementNameString" default="Default" use="optional">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <documentation xml:lang="en">
          [Optional] Name of a style defined in the list of styles. The default is 'Default'.
        </documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Defines a base class for the different types of fields conditions available.                              -->
  <!-- Which acts as the base class for the different conditions fields.                                         -->
  <!-- The following table shows the different field conditions types.                                           -->
  <!--                                                                                                           -->
  <!-- Class                Description                                                                          -->
  <!-- ========================================================================================================= -->
  <!-- MaximumCondition     Occurs when the result of the condition is maximum value.                            -->
  <!-- MinimumCondition     Occurs when the result of the condition is minimum value.                            -->
  <!-- RemarksCondition     Occurs when the result of the condition is true.                                     -->
  <!-- WhenChangeCondition  Occurs when the value of the specified field changes.                                -->
  <xs:complexType name="BaseConditionModel" abstract="true">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this table node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Key" type="freeStringType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Define the identifier that represents this condition
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Field" type="FieldNameType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Represents the name of the field to be monitored.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Active" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether this condition will be evaluate. The default is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="EntireRow" type="YesNo" use="optional" default="No">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether styles affect the entire row or only the defined field. The default is 'No'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>


  <!-- Defines a base class for the different types of fields conditions available.                              -->
  <!-- Which acts as the base class for the different conditions fields.                                         -->
  <!-- The following table shows the different field conditions types.                                           -->
  <!--                                                                                                           -->
  <!-- Class                        Description                                                                  -->
  <!-- ========================================================================================================= -->
  <!-- MiniChartFirstPointModel     Occurs when the result of the condition is true.                             -->
  <!-- MiniChartLastPointModel      Occurs when the value of the specified field changes.                        -->
  <!-- MiniChartHighPointModel      Occurs when the value of the specified field changes.                        -->
  <!-- MiniChartLowPointModel       Occurs when the value of the specified field changes.                        -->
  <!-- MiniChartNegativePointModel  Occurs when the value of the specified field changes.                        -->
  <!-- MiniChartMarkersPointModel  Occurs when the value of the specified field changes.                         -->
  <xs:complexType name="BaseMiniChartPointModel" abstract="true">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Color" type="rgbColorType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred point color.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Show" type="YesNo" use="optional" default="Yes">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          [Optional] Determines whether the point is displayed. The default value is 'Yes'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>


  <!-- Defines a base class for the different types of fields conditions available.                              -->
  <!-- Which acts as the base class for the different conditions fields.                                         -->
  <!-- The following table shows the different field conditions types.                                           -->
  <!--                                                                                                           -->
  <!-- Class                        Description                                                                  -->
  <!-- ========================================================================================================= -->
  <!-- MiniChartColumnSerieModel                                                                                 -->
  <!-- MiniChartLineSerieModel                                                                                   -->
  <!-- MiniChartWinLossSerieModel                                                                                -->
  <xs:complexType name="BaseMiniChartSerieModel" abstract="true">
    <xs:all>
      <xs:element name="Properties" type="PropertiesModel" minOccurs="0" maxOccurs="1">
        <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
          <xs:documentation xml:lang="en">
            Defines custom properties for this node. Contains a list of keys item with name / value.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Color" type="rgbColorType" use="required">
      <xs:annotation xmlns="http://www.w3.org/2001/XMLSchema">
        <xs:documentation xml:lang="en">
          Preferred serie color.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

</xs:schema>
